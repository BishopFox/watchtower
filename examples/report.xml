<points_of_interest>
	<poi>
		<file><![CDATA[./pub/js/metadata.js]]></file>
		<file_type><![CDATA[js]]></file_type>
		<line_number><![CDATA[92]]></line_number>
		<match><![CDATA[eval]]></match>
		<name><![CDATA[eval]]></name>
		<snippet><![CDATA[90-        
91-        if( data.indexOf('{') < 0 ) {
92:          data = eval("(" + data + ")");
93-        }
94-      }
95-      
96-      var getObject = function(data) {
97-        if(typeof data != "string") return data;
98-        
99:        data = eval("(" + data + ")");
100-        return data;
101-      }
102-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[219]]></line_number>
		<match><![CDATA[curl_exec(]]></match>
		<name><![CDATA[curl_exec(]]></name>
		<snippet><![CDATA[217-        curl_setopt($curl_ch, CURLOPT_CONNECTTIMEOUT, 10);
218-        curl_setopt($curl_ch, CURLOPT_URL, $url);
219:        curl_exec($curl_ch);
220-        curl_close($curl_ch);
221-
222-        return array($this->response_status, $this->response_reason,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1312]]></line_number>
		<match><![CDATA[curl_exec(]]></match>
		<name><![CDATA[curl_exec(]]></name>
		<snippet><![CDATA[1309-        curl_setopt($this->connections[$conn_type],
1310-            CURLOPT_URL, $url_path);
1311-
1312:        if (!curl_exec($this->connections[$conn_type]) && curl_errno($this->connections[$conn_type]) !== 0) {
1313-            $this->error_str = "(curl error: "
1314-                . curl_errno($this->connections[$conn_type]) . ") ";
1315-            $this->error_str .= curl_error($this->connections[$conn_type]);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[405]]></line_number>
		<match><![CDATA[curl_exec(]]></match>
		<name><![CDATA[curl_exec(]]></name>
		<snippet><![CDATA[402-        }
403-
404-        // send the request
405:        $response = curl_exec($this->_curl);
406-
407-        // if we used streaming, headers are already there
408-        if(!is_resource($this->out_stream)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1499]]></line_number>
		<match><![CDATA[curl_exec(]]></match>
		<name><![CDATA[curl_exec(]]></name>
		<snippet><![CDATA[1496-		}
1497-
1498-		// Execute, grab errors
1499:		if (curl_exec($curl))
1500-			$this->response->code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
1501-		else
1502-			$this->response->error = array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[964]]></line_number>
		<match><![CDATA[curl_exec(]]></match>
		<name><![CDATA[curl_exec(]]></name>
		<snippet><![CDATA[961-	  } else if ($this->io_method() == 'curl') {
962-		// send and receive
963-		$this->debug('send and receive with cURL');
964:		$this->incoming_payload = curl_exec($this->ch);
965-		$data = $this->incoming_payload;
966-
967-        $cErr = curl_error($this->ch);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3117]]></line_number>
		<match><![CDATA[curl_exec(]]></match>
		<name><![CDATA[curl_exec(]]></name>
		<snippet><![CDATA[3114-	  } else if ($this->io_method() == 'curl') {
3115-		// send and receive
3116-		$this->debug('send and receive with cURL');
3117:		$this->incoming_payload = curl_exec($this->ch);
3118-		$data = $this->incoming_payload;
3119-
3120-        $cErr = curl_error($this->ch);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[204]]></line_number>
		<match><![CDATA[curl_init(]]></match>
		<name><![CDATA[curl_init(]]></name>
		<snippet><![CDATA[202-        $url = implode("/", $path);
203-
204:        $curl_ch = curl_init();
205-        if (!is_null($this->cabundle_path)) {
206-            curl_setopt($curl_ch, CURLOPT_SSL_VERIFYPEER, True);
207-            curl_setopt($curl_ch, CURLOPT_CAINFO, $this->cabundle_path);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1174]]></line_number>
		<match><![CDATA[curl_init(]]></match>
		<name><![CDATA[curl_init(]]></name>
		<snippet><![CDATA[1171-        }
1172-
1173-        if (is_null($this->connections[$conn_type]) || $force_new) {
1174:            $ch = curl_init();
1175-        } else {
1176-            return;
1177-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[218]]></line_number>
		<match><![CDATA[curl_init(]]></match>
		<name><![CDATA[curl_init(]]></name>
		<snippet><![CDATA[215-        }
216-
217-        // Do the actual connection
218:        $this->_curl = curl_init();
219-        if ($port != 80) {
220-            curl_setopt($this->_curl, CURLOPT_PORT, intval($port));
221-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1429]]></line_number>
		<match><![CDATA[curl_init(]]></match>
		<name><![CDATA[curl_init(]]></name>
		<snippet><![CDATA[1426-		//var_dump($this->bucket, $this->uri, $this->resource, $url);
1427-
1428-		// Basic setup
1429:		$curl = curl_init();
1430-		curl_setopt($curl, CURLOPT_USERAGENT, 'S3/php');
1431-
1432-		if (S3::$useSSL) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[277]]></line_number>
		<match><![CDATA[curl_init(]]></match>
		<name><![CDATA[curl_init(]]></name>
		<snippet><![CDATA[274-
275-		$this->debug('connect using cURL');
276-		// init CURL
277:		$this->ch = curl_init();
278-		// set url
279-		$hostURL = ($this->port != '') ? "$this->scheme://$this->host:$this->port" : "$this->scheme://$this->host";
280-		// add path]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2430]]></line_number>
		<match><![CDATA[curl_init(]]></match>
		<name><![CDATA[curl_init(]]></name>
		<snippet><![CDATA[2427-
2428-		$this->debug('connect using cURL');
2429-		// init CURL
2430:		$this->ch = curl_init();
2431-		// set url
2432-		$hostURL = ($this->port != '') ? "$this->scheme://$this->host:$this->port" : "$this->scheme://$this->host";
2433-		// add path]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1284]]></line_number>
		<match><![CDATA[eval(]]></match>
		<name><![CDATA[eval(]]></name>
		<snippet><![CDATA[1282-
1283-            ob_start();
1284:            $result = eval($code);
1285-            $output = ob_get_contents();
1286-            ob_end_clean();
1287-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/JSON.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[22]]></line_number>
		<match><![CDATA[eval(]]></match>
		<name><![CDATA[eval(]]></name>
		<snippet><![CDATA[19- * use of HTTPRequest to perform server communication functions - data can
20- * be encoded into JSON notation for use in a client-side javascript, or
21- * decoded from incoming Javascript requests. JSON format is native to
22: * Javascript, and can be directly eval()'ed with no further parsing
23- * overhead
24- *
25- * All strings should be in ASCII or UTF-8 format!]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1035]]></line_number>
		<match><![CDATA[eval(]]></match>
		<name><![CDATA[eval(]]></name>
		<snippet><![CDATA[1032-   * use of HTTPRequest to perform server communication functions - data can
1033-   * be encoded into JSON notation for use in a client-side javascript, or
1034-   * decoded from incoming Javascript requests. JSON format is native to
1035:   * Javascript, and can be directly eval()'ed with no further parsing
1036-   * overhead
1037-   *
1038-   * All strings should be in ASCII or UTF-8 format!]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4047]]></line_number>
		<match><![CDATA[eval(]]></match>
		<name><![CDATA[eval(]]></name>
		<snippet><![CDATA[4044-		$this->debug("in invoke_method, calling '$this->methodname'");
4045-		if (!function_exists('call_user_func_array')) {
4046-			if ($class == '') {
4047:				$this->debug('in invoke_method, calling function using eval()');
4048-				$funcCall = "\$this->methodreturn = $this->methodname(";
4049-			} else {
4050-				if ($delim == '..') {
4051:					$this->debug('in invoke_method, calling class method using eval()');
4052-					$funcCall = "\$this->methodreturn = ".$class."::".$method."(";
4053-				} else {
4054:					$this->debug('in invoke_method, calling instance method using eval()');
4055-					// generate unique instance name
4056-					$instname = "\$inst_".time();
4057-					$funcCall = $instname." = new ".$class."(); ";]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4073]]></line_number>
		<match><![CDATA[eval(]]></match>
		<name><![CDATA[eval(]]></name>
		<snippet><![CDATA[4070-			}
4071-			$funcCall .= ');';
4072-			$this->debug('in invoke_method, function call: '.$funcCall);
4073:			@eval($funcCall);
4074-		} else {
4075-			if ($class == '') {
4076-				$this->debug('in invoke_method, calling function using call_user_func_array()');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7867]]></line_number>
		<match><![CDATA[eval(]]></match>
		<name><![CDATA[eval(]]></name>
		<snippet><![CDATA[7864-			return null;
7865-		}
7866-		// eval the class
7867:		eval($evalStr);
7868-		// instantiate proxy object
7869:		eval("\$proxy = new nusoap_proxy_$r('');");
7870-		// transfer current wsdl data to the proxy thereby avoiding parsing the wsdl twice
7871-		$proxy->endpointType = 'wsdl';
7872-		$proxy->wsdlFile = $this->wsdlFile;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[711]]></line_number>
		<match><![CDATA[eval(]]></match>
		<name><![CDATA[eval(]]></name>
		<snippet><![CDATA[708-			return null;
709-		}
710-		// eval the class
711:		eval($evalStr);
712-		// instantiate proxy object
713:		eval("\$proxy = new nusoap_proxy_$r('');");
714-		// transfer current wsdl data to the proxy thereby avoiding parsing the wsdl twice
715-		$proxy->endpointType = 'wsdl';
716-		$proxy->wsdlFile = $this->wsdlFile;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[219]]></line_number>
		<match><![CDATA[exec(]]></match>
		<name><![CDATA[exec(]]></name>
		<snippet><![CDATA[217-        curl_setopt($curl_ch, CURLOPT_CONNECTTIMEOUT, 10);
218-        curl_setopt($curl_ch, CURLOPT_URL, $url);
219:        curl_exec($curl_ch);
220-        curl_close($curl_ch);
221-
222-        return array($this->response_status, $this->response_reason,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1312]]></line_number>
		<match><![CDATA[exec(]]></match>
		<name><![CDATA[exec(]]></name>
		<snippet><![CDATA[1309-        curl_setopt($this->connections[$conn_type],
1310-            CURLOPT_URL, $url_path);
1311-
1312:        if (!curl_exec($this->connections[$conn_type]) && curl_errno($this->connections[$conn_type]) !== 0) {
1313-            $this->error_str = "(curl error: "
1314-                . curl_errno($this->connections[$conn_type]) . ") ";
1315-            $this->error_str .= curl_error($this->connections[$conn_type]);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[405]]></line_number>
		<match><![CDATA[exec(]]></match>
		<name><![CDATA[exec(]]></name>
		<snippet><![CDATA[402-        }
403-
404-        // send the request
405:        $response = curl_exec($this->_curl);
406-
407-        // if we used streaming, headers are already there
408-        if(!is_resource($this->out_stream)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1499]]></line_number>
		<match><![CDATA[exec(]]></match>
		<name><![CDATA[exec(]]></name>
		<snippet><![CDATA[1496-		}
1497-
1498-		// Execute, grab errors
1499:		if (curl_exec($curl))
1500-			$this->response->code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
1501-		else
1502-			$this->response->error = array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[964]]></line_number>
		<match><![CDATA[exec(]]></match>
		<name><![CDATA[exec(]]></name>
		<snippet><![CDATA[961-	  } else if ($this->io_method() == 'curl') {
962-		// send and receive
963-		$this->debug('send and receive with cURL');
964:		$this->incoming_payload = curl_exec($this->ch);
965-		$data = $this->incoming_payload;
966-
967-        $cErr = curl_error($this->ch);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3117]]></line_number>
		<match><![CDATA[exec(]]></match>
		<name><![CDATA[exec(]]></name>
		<snippet><![CDATA[3114-	  } else if ($this->io_method() == 'curl') {
3115-		// send and receive
3116-		$this->debug('send and receive with cURL');
3117:		$this->incoming_payload = curl_exec($this->ch);
3118-		$data = $this->incoming_payload;
3119-
3120-        $cErr = curl_error($this->ch);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1785]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[1783-     * $output = fopen("php://output", "w");
1784-     * $doc->stream($output); # stream object content to PHP's output buffer
1785:     * fclose($output);
1786-     * ?>
1787-     *
1788-     * # See read() above for a more simple example.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1935]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[1932-        #    return $this->write($data, $bytes, $verify);
1933-        #}
1934-        if ($status == 412) {
1935:            if ($close_fh) { fclose($fp); }
1936-            throw new SyntaxException("Missing Content-Type header");
1937-        }
1938-        if ($status == 422) {
1939:            if ($close_fh) { fclose($fp); }
1940-            throw new MisMatchedChecksumException(
1941-                "Supplied and computed checksums do not match.");
1942-        }
1943-        if ($status != 201) {
1944:            if ($close_fh) { fclose($fp); }
1945-            throw new InvalidResponseException("Invalid response (".$status."): "
1946-                . $this->container->cfs_http->get_error());
1947-        }
1948-        if (!$verify) {
1949-            $this->etag = $etag;
1950-        }
1951:        if ($close_fh) { fclose($fp); }
1952-        return True;
1953-    }
1954-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2001]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[1998-        $this->_guess_content_type($filename);
1999-
2000-        $this->write($fp, $size, $verify);
2001:        fclose($fp);
2002-        return True;
2003-    }
2004-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2036]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[2033-            throw new IOException("Could not open file for writing: ".$filename);
2034-        }
2035-        $result = $this->stream($fp);
2036:        fclose($fp);
2037-        return $result;
2038-    }
2039-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[112]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[109-                @fputs($fp, '<?php /* ');
110-                @fputs($fp, pack('L', $expire));
111-                @fputs($fp, @serialize($var));
112:                @fclose($fp);
113-
114-                if ($this->_locking) {
115-                    @flock($fp, LOCK_UN);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[167]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[164-                        @flock($fp, LOCK_UN);
165-                    }
166-
167:                    @fclose($fp);
168-                }
169-            }
170-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[71]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[68-                }
69-
70-                @fputs($fp, $var);
71:                @fclose($fp);
72-
73-                if ($this->_locking) {
74-                    @flock($fp, LOCK_UN);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[111]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[108-                        $var .= @fread($fp, 4096);
109-                    }
110-
111:                    @fclose($fp);
112-
113-                    if ($this->_locking) {
114-                        @flock($fp, LOCK_UN);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Cleaner.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[136]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[133-                        }
134-                    }
135-
136:                    @fclose($fp);
137-                }
138-            }
139-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1265]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[1262-            }
1263-
1264-            @fputs($fp, ");");
1265:            @fclose($fp);
1266-
1267-            return true;
1268-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[223]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[220-        } else {
221-            $this->body = stream_get_contents($this->stream);
222-        }
223:        fclose($this->stream);
224-        $this->stream = null;
225-    }
226-
227-    public function __destruct()
228-    {
229-        if(is_resource($this->stream)) {
230:            fclose($this->stream);
231-            $this->stream = null;
232-        }
233-        if($this->_cleanup) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[483]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[480-     */
481-    public function close()
482-    {
483:        if (is_resource($this->socket)) @fclose($this->socket);
484-        $this->socket = null;
485-        $this->connected_to = array(null, null);
486-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[784]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[781-		}
782-
783-		// Close file
784:		fclose($fp);
785-
786-		// Put block list
787-		$this->putBlockList($containerName, $blobName, $blockIdentifiers, $metadata, $leaseId, $additionalHeaders);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[179]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[176-        if ($fh === false) {
177-            return false;
178-        }
179:        fclose($fh);
180-
181-        // Write mode?
182-        if (strpbrk($mode, 'wax+')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[211]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[208-     */
209-    public function stream_close()
210-    {
211:        @fclose($this->_temporaryFileHandle);
212-
213-        // Upload the file?
214-        if ($this->_writeMode) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/ClosureCompiler.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[85]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[82-        }
83-
84-        fwrite($pipes[0], $input);
85:        fclose($pipes[0]);
86-
87-        $output = stream_get_contents($pipes[1]);
88:        fclose($pipes[1]);
89-
90-        $error = stream_get_contents($pipes[2]);
91:        fclose($pipes[2]);
92-
93-        $return = proc_close($process);
94-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[104]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[101-                @flock($fp, LOCK_SH);
102-                @fpassthru($fp);
103-                @flock($fp, LOCK_UN);
104:                @fclose($fp);
105-
106-                return true;
107-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[135]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[132-                    $ret = @stream_get_contents($fp);
133-
134-                    @flock($fp, LOCK_UN);
135:                    @fclose($fp);
136-
137-                    return $ret;
138-                }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/YUICompressor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[128]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[125-        }
126-
127-        fwrite($pipes[0], $input);
128:        fclose($pipes[0]);
129-
130-        $output = stream_get_contents($pipes[1]);
131:        fclose($pipes[1]);
132-
133-        $error = stream_get_contents($pipes[2]);
134:        fclose($pipes[2]);
135-
136-        $return = proc_close($process);
137-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1529]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[1526-		}
1527-
1528-		// Clean up file resources
1529:		if ($this->fp !== false && is_resource($this->fp)) fclose($this->fp);
1530-
1531-		return $this->response;
1532-	}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[207]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[204-				$this->debug('Re-use persistent connection');
205-				return true;
206-			}
207:			fclose($this->fp);
208-			$this->debug('Closed persistent connection at EOF');
209-		}
210-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[939]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[936-		if(
937-			(isset($this->incoming_headers['connection']) && strtolower($this->incoming_headers['connection']) == 'close') ||
938-			(! $this->persistentConnection) || feof($this->fp)){
939:			fclose($this->fp);
940-			$this->fp = false;
941-			$this->debug('closed socket');
942-		}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdlcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[105]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[102-			$fp = @fopen($filename, "r");
103-			if ($fp) {
104-				$s = implode("", @file($filename));
105:				fclose($fp);
106-				$this->debug("Got $wsdl ($filename) from cache");
107-			} else {
108-				$s = null;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdlcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[158]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[155-				return false;
156-			}
157-			fputs($fp, $s);
158:			fclose($fp);
159-			$this->debug("Put $wsdl_instance->wsdl ($filename) in cache");
160-			$this->releaseMutex($filename);
161-			return true;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdlcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[177]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[174-	*/
175-	function releaseMutex($filename) {
176-		$ret = flock($this->fplock[md5($filename)], LOCK_UN);
177:		fclose($this->fplock[md5($filename)]);
178-		unset($this->fplock[md5($filename)]);
179-		if (! $ret) {
180-			$this->debug("Not able to release lock for $filename");]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2360]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[2357-				$this->debug('Re-use persistent connection');
2358-				return true;
2359-			}
2360:			fclose($this->fp);
2361-			$this->debug('Closed persistent connection at EOF');
2362-		}
2363-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3092]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[3089-		if(
3090-			(isset($this->incoming_headers['connection']) && strtolower($this->incoming_headers['connection']) == 'close') || 
3091-			(! $this->persistentConnection) || feof($this->fp)){
3092:			fclose($this->fp);
3093-			$this->fp = false;
3094-			$this->debug('closed socket');
3095-		}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4829]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[4826-                while ($data = fread($fp, 32768)) {
4827-                    $wsdl_string .= $data;
4828-                } 
4829:                fclose($fp);
4830-            } else {
4831-            	$errstr = "Bad path to WSDL file $path";
4832-            	$this->debug($errstr);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[248]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[245-                while ($data = fread($fp, 32768)) {
246-                    $wsdl_string .= $data;
247-                }
248:                fclose($fp);
249-            } else {
250-            	$errstr = "Bad path to WSDL file $path";
251-            	$this->debug($errstr);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/file.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[96]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[93-    $fp = @fopen($file, 'a');
94-
95-    if ($fp) {
96:        fclose($fp);
97-
98-        if (!$exists) {
99-            @unlink($file);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/file.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[96]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[93-    $fp = @fopen($file, 'a');
94-
95-    if ($fp) {
96:        fclose($fp);
97-
98-        if (!$exists) {
99-            @unlink($file);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/compat.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[fclose(]]></match>
		<name><![CDATA[fclose(]]></name>
		<snippet><![CDATA[10-
11-        if ($fp) {
12-            fputs($fp, $data);
13:            fclose($fp);
14-
15-            return true;
16-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2092]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[2090-            $md5 = hash_final($ctx, false);
2091-            rewind($data);
2092:        } elseif ((string)is_file($data)) {
2093:            $md5 = md5_file($data);
2094-        } else {
2095-            $md5 = md5($data);
2096-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[276]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[273-                    $file = w3_normalize_file_minify2($file);
274-
275-                    if (w3_is_url($file)) {
276:                        $precached_file = $this->_precache_file($file, $type);
277-
278-                        if ($precached_file) {
279-                            $result[$location][$file] = $precached_file;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[561]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[558-     * @param string $type
559-     * @return string
560-     */
561:    function _precache_file($url, $type) {
562-        $lifetime = $this->_config->get_integer('minify.lifetime');
563-        $cache_path = sprintf('%s/minify_%s.%s', W3TC_CACHE_FILE_MINIFY_DIR, md5($url), $type);
564-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PageSpeed.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[234]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[231-     * @return mixed|null
232-     */
233-    function _load($url) {
234:        $file = $this->_get_cache_file($url);
235-
236-        if (is_readable($file)) {
237-            $data = @file_get_contents($file);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PageSpeed.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[255]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[252-     * @return bool|int
253-     */
254-    function _store($url, $results) {
255:        $file = $this->_get_cache_file($url);
256-        $data = serialize($results);
257-
258-        return @file_put_contents($file, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PageSpeed.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[267]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[264-     * @param string $url
265-     * @return string
266-     */
267:    function _get_cache_file($url) {
268-        return W3TC_TMP_DIR . '/pagespeed_' . md5($url);
269-    }
270-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[335]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[332-                    $post_files = array();
333-
334-                    if ($post->file) {
335:                        $file = $this->_get_common()->normalize_attachment_file($post->file);
336-
337-                        $local_file = $upload_info['basedir'] . '/' . $file;
338-                        $remote_file = ltrim($upload_info['baseurlpath'] . $file, '/');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1926]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[1923-     *
1924-     * @return void
1925-     */
1926:    function action_flush_file() {
1927:        $this->flush_file();
1928-
1929-        $this->redirect(array(
1930-            'w3tc_note' => 'flush_file']]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2060]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[2057-     */
2058-    function action_config_export() {
2059-        @header(sprintf('Content-Disposition: attachment; filename=%s', basename(W3TC_CONFIG_PATH)));
2060:        @readfile(W3TC_CONFIG_PATH);
2061-        die();
2062-    }
2063-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2458]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[2455-            for ($i = 0, $l = count($files); $i < $l; $i++) {
2456-                if (isset($files['tmp_name'][$i]) && isset($files['name'][$i]) && isset($files['error'][$i]) && $files['error'][$i] == UPLOAD_ERR_OK) {
2457-                    $path = W3TC_TMP_DIR . '/' . $files['name'][$i];
2458:                    if (@move_uploaded_file($files['tmp_name'][$i], $path)) {
2459-                        $attachments[] = $path;
2460-                    }
2461-                }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2788]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[2785-        $results = array();
2786-
2787-        foreach ($files as $remote_file) {
2788:            $local_file = $document_root . '/' . w3_translate_file($remote_file);
2789-            $upload[$local_file] = $remote_file;
2790-        }
2791-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2830]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[2827-        $purge = array();
2828-
2829-        foreach ($files as $remote_file) {
2830:            $local_file = $document_root . '/' . w3_translate_file($remote_file);
2831-            $purge[$local_file] = $remote_file;
2832-        }
2833-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4474]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[4471-     *
4472-     * @return void
4473-     */
4474:    function flush_file() {
4475-        $this->flush('file');
4476-        $this->flush('file_generic');
4477-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4487]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[4484-    function flush_all() {
4485-        $this->flush_memcached();
4486-        $this->flush_opcode();
4487:        $this->flush_file();
4488-    }
4489-
4490-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[56]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[53-        $upload_info = w3_upload_info();
54-
55-        if ($upload_info) {
56:            $file = $this->normalize_attachment_file($file);
57-
58-            $local_file = $upload_info['basedir'] . '/' . $file;
59-            $remote_file = ltrim($upload_info['baseurlpath'] . $file, '/');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[247]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[244-     * @param string $file
245-     * @return string
246-     */
247:    function normalize_attachment_file($file) {
248-        require_once W3TC_INC_DIR . '/functions/http.php';
249-
250-        $upload_info = w3_upload_info();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[149]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[146-     * @param string $attached_file
147-     * @return string
148-     */
149:    function update_attached_file($attached_file) {
150-        $files = $this->_get_common()->get_files_for_upload($attached_file);
151-        $files = apply_filters('w3tc_cdn_update_attachment', $files);
152-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[298]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[295-
296-                        foreach ($masks as $mask) {
297-                            if ($mask != '') {
298:                                $mask = w3_normalize_file($mask);
299-                                $mask_regexps[] = $this->get_regexp_by_mask($mask);
300-                            }
301-                        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[419]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[416-            } else {
417-                foreach ($urls as $url) {
418-                    $file = w3_normalize_file_minify($url);
419:                    $file = w3_translate_file($file);
420-
421-                    if (!w3_is_url($file)) {
422-                        $file = $document_root . '/' . $file;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[455]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[452-
453-        foreach ($custom_files as $custom_file) {
454-            if ($custom_file != '') {
455:                $custom_file = w3_normalize_file($custom_file);
456-                $dir = trim(dirname($custom_file), '/\\');
457-
458-                if ($dir == '.') {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[500]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[497-
498-        foreach ($reject_files as $reject_file) {
499-            if ($reject_file != '') {
500:                $reject_file = w3_normalize_file($reject_file);
501-                $reject_file_regexp = '~^(' . $this->get_regexp_by_mask($reject_file) . ')~i';
502-
503-                if (preg_match($reject_file_regexp, $path)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[269]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[266-     * @param string $attached_file
267-     * @return string
268-     */
269:    function update_attached_file($attached_file) {
270-        $files = $this->get_files_for_upload($attached_file);
271-        $files = apply_filters('w3tc_cdn_update_attachment', $files);
272-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[402]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[399-        $upload_info = w3_upload_info();
400-
401-        if ($upload_info) {
402:            $file = $this->normalize_attachment_file($file);
403-
404-            $local_file = $upload_info['basedir'] . '/' . $file;
405-            $remote_file = ltrim($upload_info['baseurlpath'] . $file, '/');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[553]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[550-
551-                        foreach ($masks as $mask) {
552-                            if ($mask != '') {
553:                                $mask = w3_normalize_file($mask);
554-                                $mask_regexps[] = $this->get_regexp_by_mask($mask);
555-                            }
556-                        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[866]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[863-                    $post_files = array();
864-
865-                    if ($post->file) {
866:                        $file = $this->normalize_attachment_file($post->file);
867-
868-                        $local_file = $upload_info['basedir'] . '/' . $file;
869-                        $remote_file = ltrim($upload_info['baseurlpath'] . $file, '/');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1389]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[1386-            } else {
1387-                foreach ($urls as $url) {
1388-                    $file = w3_normalize_file_minify($url);
1389:                    $file = w3_translate_file($file);
1390-
1391-                    if (!w3_is_url($file)) {
1392-                        $file = $document_root . '/' . $file;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1425]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[1422-
1423-        foreach ($custom_files as $custom_file) {
1424-            if ($custom_file != '') {
1425:                $custom_file = w3_normalize_file($custom_file);
1426-                $dir = trim(dirname($custom_file), '/\\');
1427-
1428-                if ($dir == '.') {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1470]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[1467-
1468-        foreach ($reject_files as $reject_file) {
1469-            if ($reject_file != '') {
1470:                $reject_file = w3_normalize_file($reject_file);
1471-                $reject_file_regexp = '~^(' . $this->get_regexp_by_mask($reject_file) . ')~i';
1472-
1473-                if (preg_match($reject_file_regexp, $path)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1596]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[1593-     * @param string $file
1594-     * @return string
1595-     */
1596:    function normalize_attachment_file($file) {
1597-        $upload_info = w3_upload_info();
1598-        if ($upload_info) {
1599-            $file = ltrim(str_replace($upload_info['basedir'], '', $file), '/\\');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheActivation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[50]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[47-        }
48-
49-        if (count($nonexistent_files)) {
50:            $error = sprintf('Unfortunately core file(s): (<strong>%s</strong>) are missing, so activation will fail. Please re-start the installation process from the beginning.', implode(', ', $nonexistent_files));
51-
52-            w3_activate_error($error);
53-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[356]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[353-
354-        if (isset($this->cache_config[$mime_type])) {
355-            if ($this->cache_config[$mime_type]['etag']) {
356:                $headers['Etag'] = @md5_file($file);
357-            }
358-
359-            if ($this->cache_config[$mime_type]['w3tc']) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Rscf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[182]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[179-                }
180-
181-                if ($status >= 200 && $status < 300) {
182:                    $hash = @md5_file($local_path);
183-
184-                    if ($hash === $etag) {
185-                        $results[] = $this->_get_result($local_path, $remote_path, W3TC_CDN_RESULT_OK, 'Object up-to-date.');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[131]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[128-            return $this->_get_result($local_path, $remote_path, W3TC_CDN_RESULT_ERROR, 'Source file not found.');
129-        }
130-
131:        $md5 = @md5_file($local_path);
132-        $content_md5 = $this->_get_content_md5($md5);
133-
134-        if (!$force_rewrite) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[131]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[128-            $this->_restore_error_handler();
129-
130-            if ($info) {
131:                $hash = @md5_file($local_path);
132-                $s3_hash = (isset($info['hash']) ? $info['hash'] : '');
133-
134-                if ($hash === $s3_hash) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1314]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[1311-            }
1312-
1313-            if (self::$_fileInfoDb) {
1314:                $type = finfo_file(self::$_fileInfoDb, $file);
1315-            }
1316-
1317-        } elseif (function_exists('mime_content_type')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[427]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[424-            $source->minifier = array('Minify_Lines', 'minify');
425-            $id = $source->getId();
426-            $source->minifyOptions = array_merge((array) $source->minifyOptions, array(
427:            	'id' => (is_file($id) ? basename($id) : $id))
428-            );
429-        }
430-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/ClosureCompiler.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[44]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[41-    }
42-
43-    protected static function _getCmd($options) {
44:        if (!is_file(self::$_pathJava)) {
45-            throw new Exception(sprintf('JAVA executable (%s) is not a valid file.', self::$_pathJava));
46-        }
47-
48:        if (!is_file(self::$_pathJar)) {
49-            throw new Exception(sprintf('JAR file (%s) is not a valid file.', self::$_pathJar));
50-        }
51-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Build.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[99]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[96-                if (0 === strpos($source, '//')) {
97-                    $source = $_SERVER['DOCUMENT_ROOT'] . substr($source, 1);
98-                }
99:                if (is_file($source)) {
100-                    $max = max($max, filemtime($source));
101-                }
102-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/APC.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[64]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[61-     *
62-     * @param string $id cache id
63-     *
64:     * @param int $srcMtime mtime of the original source file(s)
65-     *
66-     * @return bool exists
67-     */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/Memcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[72]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[69-     *
70-     * @param string $id cache id
71-     *
72:     * @param int $srcMtime mtime of the original source file(s)
73-     *
74-     * @return bool exists
75-     */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[37]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[34-        $path = $this->_path . '/' . $id;
35-        $flag = $this->_locking ? LOCK_EX : null;
36-
37:        if (is_file($path)) {
38-            @unlink($path);
39-        }
40-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[79]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[76-     *
77-     * @param string $id cache id (e.g. a filename)
78-     *
79:     * @param int $srcMtime mtime of the original source file(s)
80-     *
81-     * @return bool exists
82-     */
83-    public function isValid($id, $srcMtime) {
84-        $path = $this->_path . '/' . $id;
85-
86:        return (is_file($path) && (filemtime($path) >= $srcMtime));
87-    }
88-
89-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[109]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[106-                return true;
107-            }
108-        } else {
109:            return @readfile($path);
110-        }
111-
112-        return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/XCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[64]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[61-     *
62-     * @param string $id cache id
63-     *
64:     * @param int $srcMtime mtime of the original source file(s)
65-     *
66-     * @return bool exists
67-     */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/Wincache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[64]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[61-     *
62-     * @param string $id cache id
63-     *
64:     * @param int $srcMtime mtime of the original source file(s)
65-     *
66-     * @return bool exists
67-     */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/Eaccelerator.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[64]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[61-     *
62-     * @param string $id cache id
63-     *
64:     * @param int $srcMtime mtime of the original source file(s)
65-     *
66-     * @return bool exists
67-     */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/YUICompressor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[70]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[67-    }
68-
69-    protected static function _getCmd($type, $options) {
70:        if (!is_file(self::$_pathJava)) {
71-            throw new Exception(sprintf('JAVA executable (%s) is not a valid file.', self::$_pathJava));
72-        }
73-
74:        if (!is_file(self::$_pathJar)) {
75-            throw new Exception(sprintf('JAR file (%s) is not a valid file.', self::$_pathJar));
76-        }
77-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[132]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[129-            }
130-        }
131-        $base = basename($file);
132:        if (! $pathOk || ! is_file($file) || $base[0] === '.') {
133-            return false;
134-        }
135-        list($revExt) = explode('.', strrev($base));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Groups.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[82]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[79-                $file = $_SERVER['DOCUMENT_ROOT'] . substr($file, 1);
80-            }
81-            $realPath = realpath($file);
82:            if (is_file($realPath)) {
83-                $sources[] = new Minify_Source(array(
84-                    'filepath' => $realPath
85-                ));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Files.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[66]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[63-                $file = $_SERVER['DOCUMENT_ROOT'] . substr($file, 1);
64-            }
65-            $realPath = realpath($file);
66:            if (is_file($realPath)) {
67-                $sources[] = new Minify_Source(array(
68-                    'filepath' => $realPath
69-                ));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/MinApp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[63]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[60-                    $file = $_SERVER['DOCUMENT_ROOT'] . substr($file, 1);
61-                }
62-                $realPath = realpath($file);
63:                if (is_file($realPath)) {
64-                    $sources[] = new Minify_Source(array(
65-                        'filepath' => $realPath
66-                    ));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[283]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[280-	* @return array | false
281-	*/
282-	public static function inputFile($file, $md5sum = true) {
283:		if (!file_exists($file) || !is_file($file) || !is_readable($file)) {
284-			trigger_error('S3::inputFile(): Unable to open input file: '.$file, E_USER_WARNING);
285-			return false;
286-		}
287-		return array('file' => $file, 'size' => filesize($file),
288-		'md5sum' => $md5sum !== false ? (is_string($md5sum) ? $md5sum :
289:		base64_encode(md5_file($file, true))) : '');
290-	}
291-
292-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.xmlschema.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[91]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[88-	function parseFile($xml,$type){
89-		// parse xml file
90-		if($xml != ""){
91:			$xmlStr = @join("",@file($xml));
92-			if($xmlStr == ""){
93-				$msg = 'Error reading XML from '.$xml;
94-				$this->setError($msg);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdlcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[104]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[101-			}
102-			$fp = @fopen($filename, "r");
103-			if ($fp) {
104:				$s = implode("", @file($filename));
105-				fclose($fp);
106-				$this->debug("Got $wsdl ($filename) from cache");
107-			} else {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1170]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[1167-	function parseFile($xml,$type){
1168-		// parse xml file
1169-		if($xml != ""){
1170:			$xmlStr = @join("",@file($xml));
1171-			if($xmlStr == ""){
1172-				$msg = 'Error reading XML from '.$xml;
1173-				$this->setError($msg);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[888]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[885- * @param string $file
886- * @return string
887- */
888:function w3_normalize_file($file) {
889-    if (w3_is_url($file)) {
890-        if (strstr($file, '?') === false) {
891-            $home_url_regexp = '~' . w3_get_home_url_regexp() . '~i';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[941]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[938-function w3_normalize_file_minify2($file) {
939-    $file = w3_remove_query($file);
940-    $file = w3_normalize_file_minify($file);
941:    $file = w3_translate_file($file);
942-
943-    return $file;
944-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[952]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[949- * @param string $file
950- * @return string
951- */
952:function w3_translate_file($file) {
953-    if (!w3_is_url($file)) {
954-        $file = '/' . ltrim($file, '/');
955-        $regexp = '~^' . w3_preg_quote(w3_get_site_path()) . '~';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/mime.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[file(]]></match>
		<name><![CDATA[file(]]></name>
		<snippet><![CDATA[35-            }
36-
37-            if ($finfo) {
38:                $mime_type = @finfo_file($finfo, $file);
39-
40-                if ($mime_type) {
41-                    $extra_mime_type_info = strpos($mime_type, "; ");]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[416]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[414-	if($from_file)
415-	{
416:		$content = strip_tags(file_get_contents($content),'<span>');
417-	}
418-	$content = str_replace("\r\n","\n",$content); // Unify newlines (because the output also only uses \n)
419-	$template = explode('|',$content);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[435]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[432- */
433-function parse_from_url($url)
434-{
435:	return $this->parse(@file_get_contents($url));
436-}
437-
438-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[691]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[688-        $from_email = 'wordpress@' . w3_get_domain($_SERVER['SERVER_NAME']);
689-        $from_name = get_option('blogname');
690-        $to_name = $to_email = get_option('admin_email');
691:        $body = @file_get_contents(W3TC_INC_DIR . '/email/minify_error_notification.php');
692-
693-        $headers = array(
694-            sprintf('From: "%s" <%s>', addslashes($from_name), $from_email),]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[718]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[715-
716-        foreach ($sources as $source) {
717-            if (file_exists($source)) {
718:                $data = @file_get_contents($source);
719-
720-                if ($data !== false) {
721-                    $values[] = md5($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PageSpeed.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[237]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[234-        $file = $this->_get_cache_file($url);
235-
236-        if (is_readable($file)) {
237:            $data = @file_get_contents($file);
238-
239-            if ($data) {
240-                return @unserialize($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[484]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[481-        $path = w3_get_minify_rules_core_path();
482-
483-        if (file_exists($path)) {
484:            $data = @file_get_contents($path);
485-
486-            if ($data !== false) {
487-                $data = $this->erase_rules_legacy($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[543]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[540-        $path = w3_get_minify_rules_cache_path();
541-
542-        if (file_exists($path)) {
543:            $data = @file_get_contents($path);
544-
545-            if ($data !== false) {
546-                $data = $this->erase_rules_legacy($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[638]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[635-        $path = w3_get_minify_rules_core_path();
636-
637-        if (file_exists($path)) {
638:            if (($data = @file_get_contents($path)) !== false) {
639-                $data = $this->erase_rules_core($data);
640-
641-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[659]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[656-        $path = w3_get_minify_rules_cache_path();
657-
658-        if (file_exists($path)) {
659:            if (($data = @file_get_contents($path)) !== false) {
660-                $data = $this->erase_rules_cache($data);
661-
662-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[680]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[677-        $path = w3_get_minify_rules_cache_path();
678-
679-        if (file_exists($path)) {
680:            if (($data = @file_get_contents($path)) !== false) {
681-                $data = $this->erase_rules_legacy($data);
682-
683-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[700]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[697-    function check_rules_has_core() {
698-        $path = w3_get_minify_rules_core_path();
699-
700:        return (($data = @file_get_contents($path)) && w3_has_rules(w3_clean_rules($data), W3TC_MARKER_BEGIN_MINIFY_CORE, W3TC_MARKER_END_MINIFY_CORE));
701-    }
702-
703-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[711]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[708-    function check_rules_has_legacy() {
709-        $path = w3_get_minify_rules_core_path();
710-
711:        return (($data = @file_get_contents($path)) && w3_has_rules(w3_clean_rules($data), W3TC_MARKER_BEGIN_MINIFY_LEGACY, W3TC_MARKER_END_MINIFY_LEGACY));
712-    }
713-
714-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[723]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[720-        $path = w3_get_minify_rules_core_path();
721-        $search = $this->generate_rules_core();
722-
723:        return (($data = @file_get_contents($path)) && strstr(w3_clean_rules($data), w3_clean_rules($search)) !== false);
724-    }
725-
726-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[735]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[732-        $path = w3_get_minify_rules_cache_path();
733-        $search = $this->generate_rules_cache();
734-
735:        return (($data = @file_get_contents($path)) && strstr(w3_clean_rules($data), w3_clean_rules($search)) !== false);
736-    }
737-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[549]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[546-        $path = w3_get_browsercache_rules_cache_path();
547-
548-        if (file_exists($path)) {
549:            $data = @file_get_contents($path);
550-
551-            if ($data === false) {
552-                return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[606]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[603-        $path = w3_get_browsercache_rules_no404wp_path();
604-
605-        if (file_exists($path)) {
606:            $data = @file_get_contents($path);
607-
608-            if ($data === false) {
609-                return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[687]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[684-        $path = w3_get_browsercache_rules_cache_path();
685-
686-        if (file_exists($path)) {
687:            if (($data = @file_get_contents($path)) !== false) {
688-                $data = $this->erase_rules_cache($data);
689-
690-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[708]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[705-        $path = w3_get_browsercache_rules_no404wp_path();
706-
707-        if (file_exists($path)) {
708:            if (($data = @file_get_contents($path)) !== false) {
709-                $data = $this->erase_rules_no404wp($data);
710-
711-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[729]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[726-        $path = w3_get_browsercache_rules_cache_path();
727-        $search = $this->generate_rules_cache();
728-
729:        return (($data = @file_get_contents($path)) && strstr(w3_clean_rules($data), w3_clean_rules($search)) !== false);
730-    }
731-
732-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[741]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[738-        $path = w3_get_browsercache_rules_no404wp_path();
739-        $search = $this->generate_rules_no404wp();
740-
741:        return (($data = @file_get_contents($path)) && strstr(w3_clean_rules($data), w3_clean_rules($search)) !== false);
742-    }
743-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4585]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[4582-                /**
4583-                 * Check get_header function call
4584-                 */
4585:                $template_content = @file_get_contents($template_file);
4586-
4587-                if ($template_content && preg_match('~\s*get_header[0-9_]*\s*\(~', $template_content)) {
4588-                    $templates[] = $template_file;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5270]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[5267-     * @return boolean
5268-     */
5269-    function advanced_cache_check() {
5270:        return (($script_data = @file_get_contents(W3TC_ADDIN_FILE_ADVANCED_CACHE)) && strstr($script_data, 'W3_PgCache') !== false);
5271-    }
5272-
5273-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5288]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[5285-     * @return boolean
5286-     */
5287-    function db_check() {
5288:        return (($script_data = @file_get_contents(W3TC_ADDIN_FILE_DB)) && strstr($script_data, 'W3_Db') !== false);
5289-    }
5290-
5291-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5306]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[5303-     * @return boolean
5304-     */
5305-    function objectcache_check() {
5306:        return (($script_data = @file_get_contents(W3TC_ADDIN_FILE_OBJECT_CACHE)) && strstr($script_data, 'W3_ObjectCache') !== false);
5307-    }
5308-
5309-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5427]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[5424-     */
5425-    function enable_cookie_domain() {
5426-        $config_path = w3_get_wp_config_path();
5427:        $config_data = @file_get_contents($config_path);
5428-
5429-        if ($config_data === false) {
5430-            return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5457]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[5454-     */
5455-    function disable_cookie_domain() {
5456-        $config_path = w3_get_wp_config_path();
5457:        $config_data = @file_get_contents($config_path);
5458-
5459-        if ($config_data === false) {
5460-            return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5750]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[5747-        $faq = array();
5748-        $file = W3TC_INC_DIR . '/options/faq.xml';
5749-
5750:        $xml = @file_get_contents($file);
5751-
5752-        if ($xml) {
5753-            if (function_exists('xml_parser_create')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[343]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[340-     */
341-    function enable_wp_cache() {
342-        $config_path = w3_get_wp_config_path();
343:        $config_data = @file_get_contents($config_path);
344-
345-        if ($config_data === false) {
346-            return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[368]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[365-     */
366-    function disable_wp_cache() {
367-        $config_path = w3_get_wp_config_path();
368:        $config_data = @file_get_contents($config_path);
369-
370-        if ($config_data === false) {
371-            return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1213]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1210-        $path = w3_get_pgcache_rules_core_path();
1211-
1212-        if (file_exists($path)) {
1213:            $data = @file_get_contents($path);
1214-
1215-            if ($data !== false) {
1216-                $data = $this->erase_rules_legacy($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1273]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1270-        $path = w3_get_pgcache_rules_cache_path();
1271-
1272-        if (file_exists($path)) {
1273:            $data = @file_get_contents($path);
1274-
1275-            if ($data === false) {
1276-                return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1378]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1375-        $path = w3_get_pgcache_rules_core_path();
1376-
1377-        if (file_exists($path)) {
1378:            if (($data = @file_get_contents($path)) !== false) {
1379-                $data = $this->erase_rules_core($data);
1380-
1381-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1399]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1396-        $path = w3_get_pgcache_rules_cache_path();
1397-
1398-        if (file_exists($path)) {
1399:            if (($data = @file_get_contents($path)) !== false) {
1400-                $data = $this->erase_rules_cache($data);
1401-
1402-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1420]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1417-        $path = w3_get_pgcache_rules_core_path();
1418-
1419-        if (file_exists($path)) {
1420:            if (($data = @file_get_contents($path)) !== false) {
1421-                $data = $this->erase_rules_legacy($data);
1422-
1423-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1441]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1438-        $path = w3_get_pgcache_rules_core_path();
1439-
1440-        if (file_exists($path)) {
1441:            if (($data = @file_get_contents($path)) !== false) {
1442-                $data = $this->erase_rules_wpsc($data);
1443-
1444-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1461]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1458-    function check_rules_has_legacy() {
1459-        $path = w3_get_pgcache_rules_core_path();
1460-
1461:        return (($data = @file_get_contents($path)) && w3_has_rules(w3_clean_rules($data), W3TC_MARKER_BEGIN_PGCACHE_LEGACY, W3TC_MARKER_END_PGCACHE_LEGACY));
1462-    }
1463-    
1464-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1472]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1469-    function check_rules_has_core() {
1470-        $path = w3_get_pgcache_rules_core_path();
1471-
1472:        return (($data = @file_get_contents($path)) && w3_has_rules(w3_clean_rules($data), W3TC_MARKER_BEGIN_PGCACHE_CORE, W3TC_MARKER_END_PGCACHE_CORE));
1473-    }
1474-    
1475-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1484]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1481-        $path = w3_get_pgcache_rules_core_path();
1482-        $search = $this->generate_rules_core();
1483-
1484:        return (($data = @file_get_contents($path)) && strstr(w3_clean_rules($data), w3_clean_rules($search)) !== false);
1485-    }
1486-
1487-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1496]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1493-        $path = w3_get_pgcache_rules_cache_path();
1494-        $search = $this->generate_rules_cache();
1495-
1496:        return (($data = @file_get_contents($path)) && strstr(w3_clean_rules($data), w3_clean_rules($search)) !== false);
1497-    }
1498-
1499-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1507]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1504-    function check_rules_wpsc() {
1505-        $path = w3_get_pgcache_rules_core_path();
1506-
1507:        return (($data = @file_get_contents($path)) && w3_has_rules(w3_clean_rules($data), W3TC_MARKER_BEGIN_PGCACHE_WPSC, W3TC_MARKER_END_PGCACHE_WPSC));
1508-    }
1509-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1439]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1436-        $path = w3_get_minify_rules_core_path();
1437-
1438-        if (file_exists($path)) {
1439:            $data = @file_get_contents($path);
1440-
1441-            if ($data !== false) {
1442-                $data = $this->erase_rules_legacy($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1498]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1495-        $path = w3_get_minify_rules_cache_path();
1496-
1497-        if (file_exists($path)) {
1498:            $data = @file_get_contents($path);
1499-
1500-            if ($data !== false) {
1501-                $data = $this->erase_rules_legacy($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1593]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1590-        $path = w3_get_minify_rules_core_path();
1591-
1592-        if (file_exists($path)) {
1593:            if (($data = @file_get_contents($path)) !== false) {
1594-                $data = $this->erase_rules_core($data);
1595-
1596-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1614]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1611-        $path = w3_get_minify_rules_cache_path();
1612-
1613-        if (file_exists($path)) {
1614:            if (($data = @file_get_contents($path)) !== false) {
1615-                $data = $this->erase_rules_cache($data);
1616-
1617-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1635]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1632-        $path = w3_get_minify_rules_cache_path();
1633-
1634-        if (file_exists($path)) {
1635:            if (($data = @file_get_contents($path)) !== false) {
1636-                $data = $this->erase_rules_legacy($data);
1637-
1638-                return @file_put_contents($path, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1656]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1653-        $path = w3_get_minify_rules_core_path();
1654-        $search = $this->generate_rules_core();
1655-
1656:        return (($data = @file_get_contents($path)) && strstr(w3_clean_rules($data), w3_clean_rules($search)) !== false);
1657-    }
1658-
1659-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1668]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1665-        $path = w3_get_minify_rules_cache_path();
1666-        $search = $this->generate_rules_cache();
1667-
1668:        return (($data = @file_get_contents($path)) && strstr(w3_clean_rules($data), w3_clean_rules($search)) !== false);
1669-    }
1670-
1671-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1680]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[1677-    function check_rules_legacy() {
1678-        $path = w3_get_minify_rules_core_path();
1679-
1680:        return (($data = @file_get_contents($path)) && w3_has_rules(w3_clean_rules($data), W3TC_MARKER_BEGIN_MINIFY_LEGACY, W3TC_MARKER_END_MINIFY_LEGACY));
1681-    }
1682-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[177]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[174-            return $this->_get_result($local_path, $remote_path, W3TC_CDN_RESULT_ERROR, 'Source file not found.');
175-        }
176-
177:        $contents = @file_get_contents($local_path);
178-
179-        if ($contents === false) {
180-            return $this->_get_result($local_path, $remote_path, W3TC_CDN_RESULT_ERROR, 'Unable to read file.');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[170]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[167-            return $this->_get_result($local_path, $remote_path, W3TC_CDN_RESULT_ERROR, 'Source file not found.');
168-        }
169-
170:        $contents = @file_get_contents($local_path);
171-
172-        if ($contents === false) {
173-            return $this->_get_result($local_path, $remote_path, W3TC_CDN_RESULT_ERROR, 'Unable to read file.');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/JSON.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[111]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[108- * // prints: ["foo","bar",[1,2,"baz"],[3,[4]]]
109- *
110- * // accept incoming POST data, assumed to be in JSON notation
111: * $input = file_get_contents('php://input', 1000000);
112- * $value = $json->decode($input);
113- * </code>
114- */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[698]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[695-    public function setFileUpload($filename, $formname, $data = null, $ctype = null)
696-    {
697-        if ($data === null) {
698:            if (($data = @file_get_contents($filename)) === false) {
699-                /** @see Microsoft_Http_Client_Exception */
700-                require_once 'Microsoft/Http/Client/Exception.php';
701-                throw new Microsoft_Http_Client_Exception("Unable to read file '{$filename}' for upload");]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[643]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[640-		}
641-
642-		// Put the data to Windows Azure Storage
643:		return $this->putBlobData($containerName, $blobName, file_get_contents($localFileName), $metadata, $leaseId, $additionalHeaders);
644-	}
645-
646-	/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/Encoder.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[17]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[14- * <code>
15- * // Send a CSS file, compressed if possible
16- * $he = new HTTP_Encoder(array(
17: *     'content' => file_get_contents($cssFile)
18- *     ,'type' => 'text/css'
19- * ));
20- * $he->encode();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/ImportProcessor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[50]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[47-        $file = realpath($file);
48-        if (! $file
49-            || in_array($file, self::$filesIncluded)
50:            || false === ($content = @file_get_contents($file))
51-        ) {
52-            // file missing, already included, or failed read
53-            return '';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[140]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[137-                    return $ret;
138-                }
139-            } else {
140:                return @file_get_contents($path);
141-            }
142-        }
143-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Source.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[114]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[111-            $content = Minify_ImportProcessor::process($this->filepath);
112-        } else {
113-            $content = (null !== $this->filepath)
114:                ? file_get_contents($this->filepath)
115-                : ((null !== $this->_content)
116-                    ? $this->_content
117-                    : call_user_func($this->_getContentFunc, $this->_id)]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/rule.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[file_get_contents(]]></match>
		<name><![CDATA[file_get_contents(]]></name>
		<snippet><![CDATA[9-    if ((w3_is_apache() || w3_is_litespeed()) && !w3_is_network()) {
10-        $path = w3_get_home_root() . '/.htaccess';
11-
12:        return (($data = @file_get_contents($path)) && strstr($data, W3TC_MARKER_BEGIN_WORDPRESS) !== false);
13-    }
14-
15-    return true;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1758]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[1756-     * Streaming read of Object's data
1757-     *
1758:     * Given an open PHP resource (see PHP's fopen() method), fetch the Object's
1759-     * data and write it to the open resource handle.  This is useful for
1760-     * streaming an Object's content to the browser (videos, images) or for
1761-     * fetching content to a local file.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1783]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[1780-     * // Hand it back to user's browser with appropriate content-type
1781-     * //
1782-     * header("Content-Type: " . $doc->content_type);
1783:     * $output = fopen("php://output", "w");
1784-     * $doc->stream($output); # stream object content to PHP's output buffer
1785-     * fclose($output);
1786-     * ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1862]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[1859-     * Upload Object's data to Cloud Files
1860-     *
1861-     * Write data to the remote Object.  The $data argument can either be a
1862:     * PHP resource open for reading (see PHP's fopen() method) or an in-memory
1863-     * variable.  If passing in a PHP resource, you must also include the $bytes
1864-     * parameter.
1865-     *]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1910]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[1907-            # like a better option, but it seems to break on Windows so use
1908-            # a temporary file instead.
1909-            #
1910:            $fp = fopen("php://temp", "wb+");
1911:            #$fp = fopen("php://memory", "wb+");
1912-            fwrite($fp, $data, strlen($data));
1913-            rewind($fp);
1914-            $close_fh = True;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1986]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[1983-     */
1984-    function load_from_filename($filename, $verify=True)
1985-    {
1986:        $fp = @fopen($filename, "r");
1987-        if (!$fp) {
1988-            throw new IOException("Could not open file for reading: ".$filename);
1989-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2031]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[2028-     */
2029-    function save_to_filename($filename)
2030-    {
2031:        $fp = @fopen($filename, "wb");
2032-        if (!$fp) {
2033-            throw new IOException("Could not open file for writing: ".$filename);
2034-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[103]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[100-        $dir = dirname($path);
101-
102-        if ((@is_dir($dir) || w3_mkdir($sub_dir, 0777, $this->_cache_dir))) {
103:            $fp = @fopen($path, 'wb');
104-
105-            if ($fp) {
106-                if ($this->_locking) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[139]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[136-            $ftime = @filemtime($path);
137-
138-            if ($ftime) {
139:                $fp = @fopen($path, 'rb');
140-
141-                if ($fp) {
142-                    if ($this->_locking) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[63]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[60-        $dir = dirname($path);
61-
62-        if ((@is_dir($dir) || w3_mkdir($sub_dir, 0777, $this->_cache_dir))) {
63:            $fp = @fopen($path, 'w');
64-
65-            if ($fp) {
66-                if ($this->_locking) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[98]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[95-            $ftime = @filemtime($path);
96-
97-            if ($ftime && $ftime > (time() - $this->_expire)) {
98:                $fp = @fopen($path, 'r');
99-
100-                if ($fp) {
101-                    if ($this->_locking) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Cleaner.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[121]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[118-            $ftime = @filemtime($file);
119-
120-            if ($ftime) {
121:                $fp = @fopen($file, 'rb');
122-
123-                if ($fp) {
124-                    $expires = @fread($fp, 4);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1253]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[1250-     * @return boolean
1251-     */
1252-    function write($file) {
1253:        $fp = @fopen($file, 'w');
1254-
1255-        if ($fp) {
1256-            @fputs($fp, "<?php\r\n\r\nreturn array(\r\n");]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[900]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[897-                 'Microsoft_Http_Client');
898-        }
899-
900:        $fp = fopen($this->_stream_name, "w+b");
901-        if(!$fp) {
902-                $this->close();
903-                require_once 'Microsoft/Http/Client/Exception.php';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[762]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[759-		}
760-
761-		// Open file
762:		$fp = fopen($localFileName, 'r');
763-		if ($fp === false) {
764-			throw new Microsoft_WindowsAzure_Exception('Could not open local file.');
765-		}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[175]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[172-        $this->_temporaryFileName = tempnam(sys_get_temp_dir(), 'azure');
173-
174-        // Check the file can be opened
175:        $fh = @fopen($this->_temporaryFileName, $mode);
176-        if ($fh === false) {
177-            return false;
178-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[198]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[195-        }
196-
197-        // Open temporary file handle
198:        $this->_temporaryFileHandle = fopen($this->_temporaryFileName, $mode);
199-
200-        // Ok!
201-        return true;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[98]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[95-        $path = $this->_path . '/' . $id;
96-
97-        if ($this->_locking) {
98:            $fp = @fopen($path, 'rb');
99-
100-            if ($fp) {
101-                @flock($fp, LOCK_SH);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[127]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[124-
125-        if (is_readable($path)) {
126-            if ($this->_locking) {
127:                $fp = @fopen($path, 'rb');
128-
129-                if ($fp) {
130-                    @flock($fp, LOCK_SH);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[336]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[333-		if (isset($input['fp']))
334-			$rest->fp =& $input['fp'];
335-		elseif (isset($input['file']))
336:			$rest->fp = @fopen($input['file'], 'rb');
337-		elseif (isset($input['data']))
338-			$rest->data = $input['data'];
339-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[436]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[433-			if (is_resource($saveTo))
434-				$rest->fp =& $saveTo;
435-			else
436:				if (($rest->fp = @fopen($saveTo, 'wb')) !== false)
437-					$rest->file = realpath($saveTo);
438-				else
439-					$rest->response->error = array('code' => 0, 'message' => 'Unable to open save file for writing: '.$saveTo);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdlcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[102]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[99-				$this->releaseMutex($filename);
100-				return null;
101-			}
102:			$fp = @fopen($filename, "r");
103-			if ($fp) {
104-				$s = implode("", @file($filename));
105-				fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdlcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[132]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[129-			$this->debug("Lock for $filename already exists");
130-			return false;
131-		}
132:		$this->fplock[md5($filename)] = fopen($filename.".lock", "w");
133-		if ($mode == "r") {
134-			return flock($this->fplock[md5($filename)], LOCK_SH);
135-		} else {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdlcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[151]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[148-		$filename = $this->createFilename($wsdl_instance->wsdl);
149-		$s = serialize($wsdl_instance);
150-		if ($this->obtainMutex($filename, "w")) {
151:			$fp = fopen($filename, "w");
152-			if (! $fp) {
153-				$this->debug("Cannot write $wsdl_instance->wsdl ($filename) in cache");
154-				$this->releaseMutex($filename);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3739]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[3736-				} else {
3737-					$filename = substr($this->externalWSDLURL, $pos + 7);
3738-				}
3739:                $fp = fopen($this->externalWSDLURL, 'r');
3740-                fpassthru($fp);
3741-              }
3742-			} elseif ($this->wsdl) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4824]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[4821-        		$path = $wsdl;
4822-        	}
4823-            $this->debug('getting WSDL file ' . $path);
4824:            if ($fp = @fopen($path, 'r')) {
4825-                $wsdl_string = '';
4826-                while ($data = fread($fp, 32768)) {
4827-                    $wsdl_string .= $data;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[243]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[240-        		$path = $wsdl;
241-        	}
242-            $this->debug('getting WSDL file ' . $path);
243:            if ($fp = @fopen($path, 'r')) {
244-                $wsdl_string = '';
245-                while ($data = fread($fp, 32768)) {
246-                    $wsdl_string .= $data;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/file.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[93]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[90-function w3_is_writable($file) {
91-    $exists = file_exists($file);
92-
93:    $fp = @fopen($file, 'a');
94-
95-    if ($fp) {
96-        fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/file.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[93]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[90-function w3_is_writable($file) {
91-    $exists = file_exists($file);
92-
93:    $fp = @fopen($file, 'a');
94-
95-    if ($fp) {
96-        fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/compat.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[9]]></line_number>
		<match><![CDATA[fopen(]]></match>
		<name><![CDATA[fopen(]]></name>
		<snippet><![CDATA[6-    }
7-
8-    function file_put_contents($filename, $data, $flags = 0) {
9:        $fp = fopen($filename, ($flags & FILE_APPEND ? 'a' : 'w'));
10-
11-        if ($fp) {
12-            fputs($fp, $data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1078]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[1076-    private function _read_cb($ch, $fd, $length)
1077-    {
1078:        $data = fread($fd, $length);
1079-        $len = strlen($data);
1080-        if (isset($this->_user_write_progress_callback_func)) {
1081-            call_user_func($this->_user_write_progress_callback_func, $len);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1923]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[1920-        } else {
1921-            $this->content_length = $bytes;
1922-            $fp = $data;
1923:            $ct_data = fread($data, 64);
1924-            rewind($data);
1925-        }
1926-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[146]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[143-                        @flock($fp, LOCK_SH);
144-                    }
145-
146:                    $expires = @fread($fp, 4);
147-
148-                    if ($expires !== false) {
149-                        list(, $expire) = @unpack('L', $expires);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[156]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[153-                            $data = '';
154-
155-                            while (!@feof($fp)) {
156:                                $data .= @fread($fp, 4096);
157-                            }
158-                            $data = substr($data, 9);
159-                            $var = @unserialize($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[108]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[105-                    $var = '';
106-
107-                    while (!@feof($fp)) {
108:                        $var .= @fread($fp, 4096);
109-                    }
110-
111-                    @fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Cleaner.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[124]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[121-                $fp = @fopen($file, 'rb');
122-
123-                if ($fp) {
124:                    $expires = @fread($fp, 4);
125-
126-                    if ($expires !== false) {
127-                        list(, $expire) = @unpack('L', $expires);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[389]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[386-                              break;
387-                             }
388-                        } else {
389:                            $line = @fread($this->socket, $read_to - $current_pos);
390-                            if ($line === false || strlen($line) === 0) {
391-                                $this->_checkSocketReadTimeout();
392-                                break;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[432]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[429-                          break;
430-                     }
431-                 } else {
432:                    $chunk = @fread($this->socket, $read_to - $current_pos);
433-                    if ($chunk === false || strlen($chunk) === 0) {
434-                        $this->_checkSocketReadTimeout();
435-                        break;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[455]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[452-                          break;
453-                     }
454-                }  else {
455:                    $buff = @fread($this->socket, 8192);
456-                    if ($buff === false || strlen($buff) === 0) {
457-                        $this->_checkSocketReadTimeout();
458-                        break;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[773]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[770-			fseek($fp, $i * self::MAX_BLOB_TRANSFER_SIZE);
771-
772-			// Read contents
773:			$fileContents = fread($fp, self::MAX_BLOB_TRANSFER_SIZE);
774-
775-			// Put block
776-			$this->putBlock($containerName, $blobName, $blockIdentifiers[$i], $fileContents, $leaseId);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[256]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[253-            return false;
254-        }
255-
256:        return fread($this->_temporaryFileHandle, $count);
257-    }
258-
259-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[902]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[899-			$strlen = 0;
900-		    while (($strlen < $content_length) && (!feof($this->fp))) {
901-		    	$readlen = min(8192, $content_length - $strlen);
902:				$tmp = fread($this->fp, $readlen);
903-				$tmplen = strlen($tmp);
904-				$this->debug("read buffer of $tmplen bytes");
905-				if (($tmplen == 0) && (!feof($this->fp))) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3055]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[3052-			$strlen = 0;
3053-		    while (($strlen < $content_length) && (!feof($this->fp))) {
3054-		    	$readlen = min(8192, $content_length - $strlen);
3055:				$tmp = fread($this->fp, $readlen);
3056-				$tmplen = strlen($tmp);
3057-				$this->debug("read buffer of $tmplen bytes");
3058-				if (($tmplen == 0) && (!feof($this->fp))) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4826]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[4823-            $this->debug('getting WSDL file ' . $path);
4824-            if ($fp = @fopen($path, 'r')) {
4825-                $wsdl_string = '';
4826:                while ($data = fread($fp, 32768)) {
4827-                    $wsdl_string .= $data;
4828-                } 
4829-                fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[245]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[242-            $this->debug('getting WSDL file ' . $path);
243-            if ($fp = @fopen($path, 'r')) {
244-                $wsdl_string = '';
245:                while ($data = fread($fp, 32768)) {
246-                    $wsdl_string .= $data;
247-                }
248-                fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1078]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[1076-    private function _read_cb($ch, $fd, $length)
1077-    {
1078:        $data = fread($fd, $length);
1079-        $len = strlen($data);
1080-        if (isset($this->_user_write_progress_callback_func)) {
1081-            call_user_func($this->_user_write_progress_callback_func, $len);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1923]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[1920-        } else {
1921-            $this->content_length = $bytes;
1922-            $fp = $data;
1923:            $ct_data = fread($data, 64);
1924-            rewind($data);
1925-        }
1926-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[146]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[143-                        @flock($fp, LOCK_SH);
144-                    }
145-
146:                    $expires = @fread($fp, 4);
147-
148-                    if ($expires !== false) {
149-                        list(, $expire) = @unpack('L', $expires);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[156]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[153-                            $data = '';
154-
155-                            while (!@feof($fp)) {
156:                                $data .= @fread($fp, 4096);
157-                            }
158-                            $data = substr($data, 9);
159-                            $var = @unserialize($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[108]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[105-                    $var = '';
106-
107-                    while (!@feof($fp)) {
108:                        $var .= @fread($fp, 4096);
109-                    }
110-
111-                    @fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Cleaner.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[124]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[121-                $fp = @fopen($file, 'rb');
122-
123-                if ($fp) {
124:                    $expires = @fread($fp, 4);
125-
126-                    if ($expires !== false) {
127-                        list(, $expire) = @unpack('L', $expires);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[389]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[386-                              break;
387-                             }
388-                        } else {
389:                            $line = @fread($this->socket, $read_to - $current_pos);
390-                            if ($line === false || strlen($line) === 0) {
391-                                $this->_checkSocketReadTimeout();
392-                                break;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[432]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[429-                          break;
430-                     }
431-                 } else {
432:                    $chunk = @fread($this->socket, $read_to - $current_pos);
433-                    if ($chunk === false || strlen($chunk) === 0) {
434-                        $this->_checkSocketReadTimeout();
435-                        break;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[455]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[452-                          break;
453-                     }
454-                }  else {
455:                    $buff = @fread($this->socket, 8192);
456-                    if ($buff === false || strlen($buff) === 0) {
457-                        $this->_checkSocketReadTimeout();
458-                        break;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[773]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[770-			fseek($fp, $i * self::MAX_BLOB_TRANSFER_SIZE);
771-
772-			// Read contents
773:			$fileContents = fread($fp, self::MAX_BLOB_TRANSFER_SIZE);
774-
775-			// Put block
776-			$this->putBlock($containerName, $blobName, $blockIdentifiers[$i], $fileContents, $leaseId);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[256]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[253-            return false;
254-        }
255-
256:        return fread($this->_temporaryFileHandle, $count);
257-    }
258-
259-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[902]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[899-			$strlen = 0;
900-		    while (($strlen < $content_length) && (!feof($this->fp))) {
901-		    	$readlen = min(8192, $content_length - $strlen);
902:				$tmp = fread($this->fp, $readlen);
903-				$tmplen = strlen($tmp);
904-				$this->debug("read buffer of $tmplen bytes");
905-				if (($tmplen == 0) && (!feof($this->fp))) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3055]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[3052-			$strlen = 0;
3053-		    while (($strlen < $content_length) && (!feof($this->fp))) {
3054-		    	$readlen = min(8192, $content_length - $strlen);
3055:				$tmp = fread($this->fp, $readlen);
3056-				$tmplen = strlen($tmp);
3057-				$this->debug("read buffer of $tmplen bytes");
3058-				if (($tmplen == 0) && (!feof($this->fp))) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4826]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[4823-            $this->debug('getting WSDL file ' . $path);
4824-            if ($fp = @fopen($path, 'r')) {
4825-                $wsdl_string = '';
4826:                while ($data = fread($fp, 32768)) {
4827-                    $wsdl_string .= $data;
4828-                } 
4829-                fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[245]]></line_number>
		<match><![CDATA[fread(]]></match>
		<name><![CDATA[fread(]]></name>
		<snippet><![CDATA[242-            $this->debug('getting WSDL file ' . $path);
243-            if ($fp = @fopen($path, 'r')) {
244-                $wsdl_string = '';
245:                while ($data = fread($fp, 32768)) {
246-                    $wsdl_string .= $data;
247-                }
248-                fclose($fp);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[219]]></line_number>
		<match><![CDATA[fsockopen(]]></match>
		<name><![CDATA[fsockopen(]]></name>
		<snippet><![CDATA[217-		// open socket
218-		if($connection_timeout > 0){
219:			$this->fp = @fsockopen( $host, $this->port, $this->errno, $this->error_str, $connection_timeout);
220-		} else {
221:			$this->fp = @fsockopen( $host, $this->port, $this->errno, $this->error_str);
222-		}
223-
224-		// test pointer]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2372]]></line_number>
		<match><![CDATA[fsockopen(]]></match>
		<name><![CDATA[fsockopen(]]></name>
		<snippet><![CDATA[2369-
2370-		// open socket
2371-		if($connection_timeout > 0){
2372:			$this->fp = @fsockopen( $host, $this->port, $this->errno, $this->error_str, $connection_timeout);
2373-		} else {
2374:			$this->fp = @fsockopen( $host, $this->port, $this->errno, $this->error_str);
2375-		}
2376-		
2377-		// test pointer]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMinPlus.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[99]]></line_number>
		<match><![CDATA[goto]]></match>
		<name><![CDATA[goto]]></name>
		<snippet><![CDATA[97-		// Words reserved for future use
98-		'abstract', 'boolean', 'byte', 'char', 'class', 'const', 'debugger',
99:		'double', 'enum', 'export', 'extends', 'final', 'float', 'goto',
100-		'implements', 'import', 'int', 'interface', 'long', 'native',
101-		'package', 'private', 'protected', 'public', 'short', 'static',
102-		'super', 'synchronized', 'throws', 'transient', 'volatile',]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[50-
51-/**
52: * All CSS units (CSS 3 units included)
53- *
54- * @see compress_numbers()
55- * @global array $GLOBALS['csstidy']['units']]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[9]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[6- *   # Authenticate to Cloud Files.  The default is to automatically try
7- *   # to re-authenticate if an authentication token expires.
8- *   #
9: *   # NOTE: Some versions of cURL include an outdated certificate authority (CA)
10- *   #       file.  This API ships with a newer version obtained directly from
11- *   #       cURL's web site (http://curl.haxx.se).  To use the newer CA bundle,
12- *   #       call the CF_Authentication instance's 'ssl_use_cabundle()' method.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[20]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[17- *
18- *   # Establish a connection to the storage system
19- *   #
20: *   # NOTE: Some versions of cURL include an outdated certificate authority (CA)
21- *   #       file.  This API ships with a newer version obtained directly from
22- *   #       cURL's web site (http://curl.haxx.se).  To use the newer CA bundle,
23- *   #       call the CF_Connection instance's 'ssl_use_cabundle()' method.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[57]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[54- *   print $bday->public_uri();
55- * </code>
56- *
57: * See the included tests directory for additional sample code.
58- *
59- * Requres PHP 5.x (for Exceptions and OO syntax) and PHP's cURL module.
60- *]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[100]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[97- * # rather then the US one. The NULL Is passed for legacy purposes and must
98- * # be passed to function correctly.
99- *
100: * # NOTE: Some versions of cURL include an outdated certificate authority (CA)
101- * #       file.  This API ships with a newer version obtained directly from
102- * #       cURL's web site (http://curl.haxx.se).  To use the newer CA bundle,
103- * #       call the CF_Authentication instance's 'ssl_use_cabundle()' method.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[154]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[151-    }
152-
153-    /**
154:     * Use the Certificate Authority bundle included with this API
155-     *
156:     * Most versions of PHP with cURL support include an outdated Certificate
157-     * Authority (CA) bundle (the file that lists all valid certificate
158-     * signing authorities).  The SSL certificates used by the Cloud Files
159-     * storage system are perfectly valid but have been created/signed by
160-     * a CA not listed in these outdated cURL distributions.
161-     *
162:     * As a work-around, we've included an updated CA bundle obtained
163-     * directly from cURL's web site (http://curl.haxx.se).  You can direct
164-     * the API to use this CA bundle by calling this method prior to making
165-     * any remote calls.  The best place to use this method is right after
166-     * the CF_Authentication instance has been instantiated.
167-     *
168-     * You can specify your own CA bundle by passing in the full pathname
169:     * to the bundle.  You can use the included CA bundle by leaving the
170-     * argument blank.
171-     *
172:     * @param string $path Specify path to CA bundle (default to included)
173-     */
174-    function ssl_use_cabundle($path=NULL)
175-    {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[331]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[328- * #
329- * $conn = new CF_Connection($auth);
330- *
331: * # NOTE: Some versions of cURL include an outdated certificate authority (CA)
332- * #       file.  This API ships with a newer version obtained directly from
333- * #       cURL's web site (http://curl.haxx.se).  To use the newer CA bundle,
334- * #       call the CF_Authentication instance's 'ssl_use_cabundle()' method.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[865]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[862-    }
863-
864-    /**
865:     * Use the Certificate Authority bundle included with this API
866-     *
867:     * Most versions of PHP with cURL support include an outdated Certificate
868-     * Authority (CA) bundle (the file that lists all valid certificate
869-     * signing authorities).  The SSL certificates used by the Cloud Files
870-     * storage system are perfectly valid but have been created/signed by
871-     * a CA not listed in these outdated cURL distributions.
872-     *
873:     * As a work-around, we've included an updated CA bundle obtained
874-     * directly from cURL's web site (http://curl.haxx.se).  You can direct
875-     * the API to use this CA bundle by calling this method prior to making
876-     * any remote calls.  The best place to use this method is right after
877-     * the CF_Authentication instance has been instantiated.
878-     *
879-     * You can specify your own CA bundle by passing in the full pathname
880:     * to the bundle.  You can use the included CA bundle by leaving the
881-     * argument blank.
882-     *
883:     * @param string $path Specify path to CA bundle (default to included)
884-     */
885-    function ssl_use_cabundle($path=NULL)
886-    {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1863]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1860-     *
1861-     * Write data to the remote Object.  The $data argument can either be a
1862-     * PHP resource open for reading (see PHP's fopen() method) or an in-memory
1863:     * variable.  If passing in a PHP resource, you must also include the $bytes
1864-     * parameter.
1865-     *
1866-     * Example:]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[71]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[68-
69-        if (preg_match('~^([a-f0-9]+)\\.[a-f0-9]+\\.(css|js)$~', $file, $matches)) {
70-            list(, $hash, $type) = $matches;
71:        } elseif (preg_match('~^([a-f0-9]+)\\/(.+)\\.(include(\\-(footer|body))?(-nb)?)\\.[a-f0-9]+\\.(css|js)$~', $file, $matches)) {
72-            list(, $theme, $template, $location, , , , $type) = $matches;
73-        } else {
74-            $this->error(sprintf('Bad file param format: "%s"', $file), false);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[145]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[142-            $minifier_type = 'application/x-javascript';
143-
144-            switch (true) {
145:                case (($hash || $location == 'include' || $location == 'include-nb') && $this->_config->get_boolean('minify.js.combine.header')):
146:                case (($location == 'include-body' || $location == 'include-body-nb') && $this->_config->get_boolean('minify.js.combine.body')):
147:                case (($location == 'include-footer' || $location == 'include-footer-nb') && $this->_config->get_boolean('minify.js.combine.footer')):
148-                    $engine = 'combinejs';
149-                    break;
150-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[163]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[160-        } elseif ($type == 'css') {
161-            $minifier_type = 'text/css';
162-
163:            if (($hash || $location == 'include') && $this->_config->get_boolean('minify.css.combine')) {
164-                $engine = 'combinecss';
165-            } else {
166-                $engine = $this->_config->get_string('minify.css.engine');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1314]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1311-
1312-            if (file_exists($file) && is_readable($file)) {
1313-                ob_start();
1314:                include $file;
1315-                $output = ob_get_contents();
1316-                ob_end_clean();
1317-            } else {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[18]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[15- * It is possible to replace this class with your own
16- * by setting the $wpdb global variable in wp-content/db.php
17- * file with your class. You can name it wpdb also, since
18: * this file will not be included, if the other file is
19- * available.
20- *
21- * @link http://codex.wordpress.org/Function_Reference/wpdb_Class]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[689]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[686-         * @uses is_multisite()
687-         *
688-         * @param string $scope Optional. Can be all, global, ms_global, blog, or old tables. Defaults to all.
689:         * @param bool $prefix Optional. Whether to include table prefixes. Default true. If blog
690-         *      prefix is requested, then the custom users and usermeta tables will be mapped.
691-         * @param int $blog_id Optional. The blog_id to prefix. Defaults to wpdb::$blogid. Used only when prefix is requested.
692-         * @return array Table names. When a prefix is requested, the key is the unprefixed table name.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[8-}
9-
10-if (!class_exists('W3_Db_Driver')) {
11:    require_once ABSPATH . 'wp-includes/wp-db.php';
12-
13-    class W3_Db_Driver extends wpdb {
14-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[171]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[168-        'cdn.debug' => 'boolean',
169-        'cdn.engine' => 'string',
170-        'cdn.uploads.enable' => 'boolean',
171:        'cdn.includes.enable' => 'boolean',
172:        'cdn.includes.files' => 'string',
173-        'cdn.theme.enable' => 'boolean',
174-        'cdn.theme.files' => 'string',
175-        'cdn.minify.enable' => 'boolean',]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[526]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[523-        'cdn.debug' => false,
524-        'cdn.engine' => 'ftp',
525-        'cdn.uploads.enable' => true,
526:        'cdn.includes.enable' => true,
527:        'cdn.includes.files' => '*.css;*.js;*.gif;*.png;*.jpg',
528-        'cdn.theme.enable' => true,
529-        'cdn.theme.files' => '*.css;*.js;*.gif;*.png;*.jpg;*.ico;*.ttf;*.otf,*.woff',
530-        'cdn.minify.enable' => true,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1188]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1185-     */
1186-    function read($file) {
1187-        if (file_exists($file) && is_readable($file)) {
1188:            $config = @include $file;
1189-
1190-            if (!is_array($config)) {
1191-                return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[261]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[258-     * @return array
259-     */
260-    function _get_cssjs_types() {
261:        $mime_types = include W3TC_INC_DIR . '/mime/cssjs.php';
262-
263-        return $mime_types;
264-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[272]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[269-     * @return array
270-     */
271-    function _get_html_types() {
272:        $mime_types = include W3TC_INC_DIR . '/mime/html.php';
273-
274-        return $mime_types;
275-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[283]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[280-     * @return array
281-     */
282-    function _get_other_types() {
283:        $mime_types = include W3TC_INC_DIR . '/mime/other.php';
284-
285-        return $mime_types;
286-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[172]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[169-                            }
170-                        }
171-                    } else {
172:                        if ($this->_config->get_boolean('minify.css.enable') && !in_array('include', $this->printed_styles)) {
173:                            $style = $this->get_style_group('include');
174-
175-                            if ($style) {
176-                                $head_prepend .= $style;
177:                                $this->remove_styles_group($buffer, 'include');
178-                            }
179-                        }
180-
181-                        if ($this->_config->get_boolean('minify.js.enable')) {
182:                            if (!in_array('include', $this->printed_scripts)) {
183:                                $script = $this->get_script_group('include');
184-
185-                                if ($script) {
186-                                    $head_prepend .= $script;
187:                                    $this->remove_scripts_group($buffer, 'include');
188-                                }
189-                            }
190-
191:                            if (!in_array('include-nb', $this->printed_scripts)) {
192:                                $script = $this->get_script_group('include-nb');
193-
194-                                if ($script) {
195-                                    $head_prepend .= $script;
196:                                    $this->remove_scripts_group($buffer, 'include-nb');
197-                                }
198-                            }
199-
200:                            if (!in_array('include-body', $this->printed_scripts)) {
201:                                $script = $this->get_script_group('include-body');
202-
203-                                if ($script) {
204-                                    $body_prepend .= $script;
205:                                    $this->remove_scripts_group($buffer, 'include-body');
206-                                }
207-                            }
208-
209:                            if (!in_array('include-body-nb', $this->printed_scripts)) {
210:                                $script = $this->get_script_group('include-body-nb');
211-
212-                                if ($script) {
213-                                    $body_prepend .= $script;
214:                                    $this->remove_scripts_group($buffer, 'include-body-nb');
215-                                }
216-                            }
217-
218:                            if (!in_array('include-footer', $this->printed_scripts)) {
219:                                $script = $this->get_script_group('include-footer');
220-
221-                                if ($script) {
222-                                    $body_append .= $script;
223:                                    $this->remove_scripts_group($buffer, 'include-footer');
224-                                }
225-                            }
226-
227:                            if (!in_array('include-footer-nb', $this->printed_scripts)) {
228:                                $script = $this->get_script_group('include-footer-nb');
229-
230-                                if ($script) {
231-                                    $body_append .= $script;
232:                                    $this->remove_scripts_group($buffer, 'include-footer-nb');
233-                                }
234-                            }
235-                        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[560]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[557-                                                /**
558-                                                 * Generate attachment metadata and upload to CDN
559-                                                 */
560:                                                require_once ABSPATH . 'wp-admin/includes/image.php';
561-                                                wp_update_attachment_metadata($id, wp_generate_attachment_metadata($id, $dst));
562-
563-                                                $attachments[$src] = array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[51]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[48-     * @return array
49-     */
50-    function _get_cssjs_types() {
51:        $mime_types = include W3TC_INC_DIR . '/mime/cssjs.php';
52-
53-        return $mime_types;
54-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[62]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[59-     * @return array
60-     */
61-    function _get_html_types() {
62:        $mime_types = include W3TC_INC_DIR . '/mime/html.php';
63-
64-        return $mime_types;
65-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[70-     * @return array
71-     */
72-    function _get_other_types() {
73:        $mime_types = include W3TC_INC_DIR . '/mime/other.php';
74-
75-        return $mime_types;
76-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[448]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[445-            $columns = array_chunk($faq['Usage'], ceil(count($faq['Usage']) / 3));
446-
447-            ob_start();
448:            include W3TC_INC_DIR . '/options/common/help.php';
449-            $help = ob_get_contents();
450-            ob_end_clean();
451-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[765]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[762-             * Show notification after WP upgrade
763-             */
764-            if ($this->_config->get_boolean('notes.wp_upgraded')) {
765:                $notes[] = sprintf('Upgraded WordPress? Please %s files now to ensure proper operation. %s', $this->button_popup('upload wp-includes', 'cdn_export', 'cdn_export_type=includes'), $this->button_hide_note('Hide this message', 'wp_upgraded'));
766-            }
767-
768-            /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[774]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[771-            if ($this->_config->get_boolean('notes.cdn_upload') || $this->_config->get_boolean('notes.cdn_reupload')) {
772-                $cdn_upload_buttons = array();
773-
774:                if ($this->_config->get_boolean('cdn.includes.enable')) {
775:                    $cdn_upload_buttons[] = $this->button_popup('wp-includes', 'cdn_export', 'cdn_export_type=includes');
776-                }
777-
778-                if ($this->_config->get_boolean('cdn.theme.enable')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[892]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[889-
890-                if ($w3_plugin_pgcache->check_rules_core()) {
891-                    if (!$this->test_rewrite_pgcache()) {
892:                        $this->_errors[] = 'It appears Page Cache <acronym title="Uniform Resource Locator">URL</acronym> rewriting is not working. If using apache, verify that the server configuration allows .htaccess or if using nginx verify all configuration files are included in the configuration.';
893-                    }
894-
895-                    if ($this->_config->get_boolean('notes.pgcache_rules_legacy') &&]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[958]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[955-
956-                if ($w3_plugin_minify->check_rules_core()) {
957-                    if (!$this->test_rewrite_minify()) {
958:                        $this->_errors[] = 'It appears Minify <acronym title="Uniform Resource Locator">URL</acronym> rewriting is not working. If using apache, verify that the server configuration allows .htaccess or if using nginx verify all configuration files are included in the configuration.';
959-                    }
960-
961-                    if ($this->_config->get_boolean('notes.minify_rules_legacy') &&]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1463]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1460-        $support = $this->_config->get_string('common.support');
1461-        $supports = $this->get_supports();
1462-
1463:        include W3TC_INC_DIR . '/options/general.php';
1464-    }
1465-
1466-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1486]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1483-        $pgcache_enabled = $this->_config->get_boolean('pgcache.enabled');
1484-        $permalink_structure = get_option('permalink_structure');
1485-
1486:        include W3TC_INC_DIR . '/options/pgcache.php';
1487-    }
1488-
1489-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1533]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1530-
1531-        $css_imports = $this->_config->get_string('minify.css.imports');
1532-
1533:        include W3TC_INC_DIR . '/options/minify.php';
1534-    }
1535-
1536-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1544]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1541-    function options_dbcache() {
1542-        $dbcache_enabled = $this->_config->get_boolean('dbcache.enabled');
1543-
1544:        include W3TC_INC_DIR . '/options/dbcache.php';
1545-    }
1546-
1547-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1555]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1552-    function options_objectcache() {
1553-        $objectcache_enabled = $this->_config->get_boolean('objectcache.enabled');
1554-
1555:        include W3TC_INC_DIR . '/options/objectcache.php';
1556-    }
1557-
1558-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1572]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1569-        $browsercache_compression = ($this->_config->get_boolean('browsercache.cssjs.compression') && $this->_config->get_boolean('browsercache.html.compression') && $this->_config->get_boolean('browsercache.other.compression'));
1570-        $browsercache_replace = ($this->_config->get_boolean('browsercache.cssjs.replace') && $this->_config->get_boolean('browsercache.other.replace'));
1571-
1572:        include W3TC_INC_DIR . '/options/browsercache.php';
1573-    }
1574-
1575-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1586]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1583-        $w3_mobile = & w3_instance('W3_Mobile');
1584-        $themes = $w3_mobile->get_themes();
1585-
1586:        include W3TC_INC_DIR . '/options/mobile.php';
1587-    }
1588-
1589-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1601]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1598-
1599-        $themes = $w3_referrer->get_themes();
1600-
1601:        include W3TC_INC_DIR . '/options/referrer.php';
1602-    }
1603-
1604-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1619]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1616-        $cookie_domain = $this->get_cookie_domain();
1617-        $set_cookie_domain = $this->is_cookie_domain_enabled();
1618-
1619:        include W3TC_INC_DIR . '/options/cdn.php';
1620-    }
1621-
1622-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1630]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1627-    function options_faq() {
1628-        $faq = $this->parse_faq();
1629-
1630:        include W3TC_INC_DIR . '/options/faq.php';
1631-    }
1632-
1633-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1644]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1641-        $request_type = W3_Request::get_string('request_type');
1642-        $payment = W3_Request::get_boolean('payment');
1643-
1644:        include W3TC_INC_DIR . '/options/support.php';
1645-    }
1646-
1647-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1749]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1746-            reset($rewrite_rules);
1747-        }
1748-
1749:        include W3TC_INC_DIR . '/options/install.php';
1750-    }
1751-
1752-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1758]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1755-     * @return void
1756-     */
1757-    function options_about() {
1758:        include W3TC_INC_DIR . '/options/about.php';
1759-    }
1760-
1761-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1779]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1776-        if (false !== ($output = get_transient($this->_widget_latest_cache_key())))
1777-            echo $output;
1778-        else
1779:            include W3TC_INC_DIR . '/widget/latest.php';
1780-    }
1781-
1782-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1795]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1792-        $items_count = $this->_config->get_integer('widget.latest.items');
1793-
1794-        if ($wp_version >= 2.8) {
1795:            include_once (ABSPATH . WPINC . '/feed.php');
1796-            $feed = fetch_feed(W3TC_FEED_URL);
1797-
1798-            if (!is_wp_error($feed)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1810]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1807-                }
1808-            }
1809-        } else {
1810:            include_once (ABSPATH . WPINC . '/rss.php');
1811-            $rss = fetch_rss(W3TC_FEED_URL);
1812-
1813-            if (is_object($rss)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1819]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1816-        }
1817-
1818-        ob_start();
1819:        include W3TC_INC_DIR . '/widget/latest_ajax.php';
1820-
1821-        // Default lifetime in cache of 12 hours (same as the feeds)
1822-        set_transient($this->_widget_latest_cache_key(), ob_get_flush(), 43200);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1839]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1836-            $this->_config->set('widget.latest.items', W3_Request::get_integer('w3tc_widget_latest_items', 3));
1837-            $this->_config->save();
1838-        } else {
1839:            include W3TC_INC_DIR . '/widget/latest_control.php';
1840-        }
1841-    }
1842-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1861]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1858-            $results = $w3_pagespeed->analyze(w3_get_home_url(), $force);
1859-        }
1860-
1861:        include W3TC_INC_DIR . '/widget/pagespeed.php';
1862-    }
1863-
1864-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1878]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1875-            $this->_config->set('widget.pagespeed.key', W3_Request::get_string('w3tc_widget_pagespeed_key'));
1876-            $this->_config->save();
1877-        } else {
1878:            include W3TC_INC_DIR . '/widget/pagespeed_control.php';
1879-        }
1880-    }
1881-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2146]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2143-     * @return void
2144-     */
2145-    function action_support_select() {
2146:        include W3TC_INC_DIR . '/options/support/select.php';
2147-    }
2148-
2149-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2167]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2164-        $return_url = admin_url('admin.php?page=w3tc_support&request_type=' . $request_type . '&payment=1&request_id=' . $request_id);
2165-        $cancel_url = admin_url('admin.php?page=w3tc_general');
2166-
2167:        include W3TC_INC_DIR . '/options/support/payment.php';
2168-    }
2169-
2170-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2227]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2224-        $ftp_login = W3_Request::get_string('ftp_login');
2225-        $ftp_password = W3_Request::get_string('ftp_password');
2226-
2227:        include W3TC_INC_DIR . '/options/support/form.php';
2228-    }
2229-
2230-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2497]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2494-         * Get body contents
2495-         */
2496-        ob_start();
2497:        include W3TC_INC_DIR . '/email/support_request.php';
2498-        $body = ob_get_contents();
2499-        ob_end_clean();
2500-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2591]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2588-        $queue = $w3_plugin_cdn->queue_get();
2589-        $title = 'Unsuccessful file transfer queue.';
2590-
2591:        include W3TC_INC_DIR . '/popup/cdn_queue.php';
2592-    }
2593-
2594-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2605]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2602-        $total = $w3_plugin_cdn->get_attachments_count();
2603-        $title = 'Media Library export';
2604-
2605:        include W3TC_INC_DIR . '/popup/cdn_export_library.php';
2606-    }
2607-
2608-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2654]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2651-
2652-        $title = 'Media Library import';
2653-
2654:        include W3TC_INC_DIR . '/popup/cdn_import_library.php';
2655-    }
2656-
2657-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2699]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2696-
2697-        $title = 'Modify attachment URLs';
2698-
2699:        include W3TC_INC_DIR . '/popup/cdn_rename_domain.php';
2700-    }
2701-
2702-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2746]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2743-        $cdn_export_type = W3_Request::get_string('cdn_export_type', 'custom');
2744-
2745-        switch ($cdn_export_type) {
2746:            case 'includes':
2747-                $title = 'Includes files export';
2748:                $files = $w3_plugin_cdn->get_files_includes();
2749-                break;
2750-
2751-            case 'theme':]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2768]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2765-                break;
2766-        }
2767-
2768:        include W3TC_INC_DIR . '/popup/cdn_export_file.php';
2769-    }
2770-
2771-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2810]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2807-        $title = 'Content Delivery Network (CDN): Purge Tool';
2808-        $results = array();
2809-
2810:        include W3TC_INC_DIR . '/popup/cdn_purge.php';
2811-    }
2812-
2813-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2841]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2838-            $errors[] = 'Empty files list.';
2839-        }
2840-
2841:        include W3TC_INC_DIR . '/popup/cdn_purge.php';
2842-    }
2843-
2844-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2984]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2981-            'ap-southeast-1' => 'AP-SouthEast (Singapore)',
2982-        );
2983-
2984:        include W3TC_INC_DIR . '/lightbox/cdn_s3_bucket_location.php';
2985-    }
2986-
2987-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3169]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[3166-                foreach ($templates as $template => $locations) {
3167-                    foreach ((array) $locations as $location => $files) {
3168-                        switch ($location) {
3169:                            case 'include':
3170-                                $js_groups[$theme][$template][$location]['blocking'] = true;
3171-                                break;
3172-
3173:                            case 'include-nb':
3174-                                $js_groups[$theme][$template][$location]['blocking'] = false;
3175-                                break;
3176-
3177:                            case 'include-body':
3178-                                $js_groups[$theme][$template][$location]['blocking'] = true;
3179-                                break;
3180-
3181:                            case 'include-body-nb':
3182-                                $js_groups[$theme][$template][$location]['blocking'] = false;
3183-                                break;
3184-
3185:                            case 'include-footer':
3186-                                $js_groups[$theme][$template][$location]['blocking'] = true;
3187-                                break;
3188-
3189:                            case 'include-footer-nb':
3190-                                $js_groups[$theme][$template][$location]['blocking'] = false;
3191-                                break;
3192-                        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3786]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[3783-            }
3784-        }
3785-
3786:        include W3TC_INC_DIR . '/lightbox/minify_recommendations.php';
3787-    }
3788-
3789-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3859]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[3856-     * Self test action
3857-     */
3858-    function action_self_test() {
3859:        include W3TC_INC_DIR . '/lightbox/self_test.php';
3860-    }
3861-
3862-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3870]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[3867-    function action_support_us() {
3868-        $supports = $this->get_supports();
3869-
3870:        include W3TC_INC_DIR . '/lightbox/support_us.php';
3871-    }
3872-
3873-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3895]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[3892-            ));
3893-        }
3894-
3895:        include W3TC_INC_DIR . '/popup/pagespeed_results.php';
3896-    }
3897-
3898-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4017]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[4014-                    'cdn.debug',
4015-                    'cdn.engine',
4016-                    'cdn.uploads.enable',
4017:                    'cdn.includes.enable',
4018:                    'cdn.includes.files',
4019-                    'cdn.theme.enable',
4020-                    'cdn.theme.files',
4021-                    'cdn.minify.enable',]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5560]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[5557-        $support = $this->_config->get_string('common.support');
5558-        $matches = null;
5559-        if ($support != '' && preg_match('~^link_category_(\d+)$~', $support, $matches)) {
5560:            require_once ABSPATH . 'wp-admin/includes/bookmark.php';
5561-
5562-            wp_insert_link(array(
5563-                'link_url' => W3TC_LINK_URL,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5587]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[5584-            }
5585-        }
5586-        if ($link_id) {
5587:            require_once ABSPATH . 'wp-admin/includes/bookmark.php';
5588-            wp_delete_link($link_id);
5589-        }
5590-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[264]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[261-                    }
262-                }
263-
264:                if ($this->_config->get_boolean('cdn.includes.enable')) {
265:                    $mask = $this->_config->get_string('cdn.includes.files');
266-                    if ($mask != '') {
267-                        $regexps[] = '~(["\'])((' . $domain_url_regexp . ')?(' . w3_preg_quote($site_path . WPINC) . '/(' . $this->get_regexp_by_mask($mask) . ')))~';
268-                    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[285]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[282-                    if ($this->_config->get_boolean('minify.auto')) {
283-                        $regexps[] = '~(["\'])((' . $domain_url_regexp . ')?(' . w3_preg_quote($site_path . W3TC_CONTENT_MINIFY_DIR_NAME) . '/[a-f0-9]+\.[a-f0-9]+\.(css|js)))~U';
284-                    } else {
285:                        $regexps[] = '~(["\'])((' . $domain_url_regexp . ')?(' . w3_preg_quote($site_path . W3TC_CONTENT_MINIFY_DIR_NAME) . '/[a-f0-9]+/.+\.include(-(footer|body))?(-nb)?\.[a-f0-9]+\.(css|js)))~U';
286-                    }
287-                }
288-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[331]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[328-    function get_files() {
329-        $files = array();
330-
331:        if ($this->_config->get_boolean('cdn.includes.enable')) {
332:            $files = array_merge($files, $this->get_files_includes());
333-        }
334-
335-        if ($this->_config->get_boolean('cdn.theme.enable')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[351]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[348-    }
349-
350-    /**
351:     * Exports includes to CDN
352-     *
353-     * @return array
354-     */
355:    function get_files_includes() {
356:        $includes_root = w3_path(ABSPATH . WPINC);
357-        $site_root = w3_get_site_root();
358:        $includes_path = ltrim(str_replace($site_root, rtrim(w3_get_site_path(), '/'), $includes_root), '/');
359-
360:        $files = $this->search_files($includes_root, $includes_path, $this->_config->get_string('cdn.includes.files'));
361-
362-        return $files;
363-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[519]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[516-                    }
517-                }
518-
519:                if ($this->_config->get_boolean('cdn.includes.enable')) {
520:                    $mask = $this->_config->get_string('cdn.includes.files');
521-                    if ($mask != '') {
522-                        $regexps[] = '~(["\'])((' . $domain_url_regexp . ')?(' . w3_preg_quote($site_path . WPINC) . '/(' . $this->get_regexp_by_mask($mask) . ')))~';
523-                    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[540]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[537-                    if ($this->_config->get_boolean('minify.auto')) {
538-                        $regexps[] = '~(["\'])((' . $domain_url_regexp . ')?(' . w3_preg_quote($site_path . W3TC_CONTENT_MINIFY_DIR_NAME) . '/[a-f0-9]+\.[a-f0-9]+\.(css|js)))~U';
539-                    } else {
540:                        $regexps[] = '~(["\'])((' . $domain_url_regexp . ')?(' . w3_preg_quote($site_path . W3TC_CONTENT_MINIFY_DIR_NAME) . '/[a-f0-9]+/.+\.include(-(footer|body))?(-nb)?\.[a-f0-9]+\.(css|js)))~U';
541-                    }
542-                }
543-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1093]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1090-                                                /**
1091-                                                 * Generate attachment metadata and upload to CDN
1092-                                                 */
1093:                                                require_once ABSPATH . 'wp-admin/includes/image.php';
1094-                                                wp_update_attachment_metadata($id, wp_generate_attachment_metadata($id, $dst));
1095-
1096-                                                $attachments[$src] = array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1301]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1298-    function get_files() {
1299-        $files = array();
1300-
1301:        if ($this->_config->get_boolean('cdn.includes.enable')) {
1302:            $files = array_merge($files, $this->get_files_includes());
1303-        }
1304-
1305-        if ($this->_config->get_boolean('cdn.theme.enable')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1321]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1318-    }
1319-
1320-    /**
1321:     * Exports includes to CDN
1322-     *
1323-     * @return array
1324-     */
1325:    function get_files_includes() {
1326:        $includes_root = w3_path(ABSPATH . WPINC);
1327-        $site_root = w3_get_site_root();
1328:        $includes_path = ltrim(str_replace($site_root, rtrim(w3_get_site_path(), '/'), $includes_root), '/');
1329-
1330:        $files = $this->search_files($includes_root, $includes_path, $this->_config->get_string('cdn.includes.files'));
1331-
1332-        return $files;
1333-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[230]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[227-                            }
228-                        }
229-                    } else {
230:                        if ($this->_config->get_boolean('minify.css.enable') && !in_array('include', $this->printed_styles)) {
231:                            $style = $this->get_style_group('include');
232-
233-                            if ($style) {
234-                                $head_prepend .= $style;
235:                                $this->remove_styles_group($buffer, 'include');
236-                            }
237-                        }
238-
239-                        if ($this->_config->get_boolean('minify.js.enable')) {
240:                            if (!in_array('include', $this->printed_scripts)) {
241:                                $script = $this->get_script_group('include');
242-
243-                                if ($script) {
244-                                    $head_prepend .= $script;
245:                                    $this->remove_scripts_group($buffer, 'include');
246-                                }
247-                            }
248-
249:                            if (!in_array('include-nb', $this->printed_scripts)) {
250:                                $script = $this->get_script_group('include-nb');
251-
252-                                if ($script) {
253-                                    $head_prepend .= $script;
254:                                    $this->remove_scripts_group($buffer, 'include-nb');
255-                                }
256-                            }
257-
258:                            if (!in_array('include-body', $this->printed_scripts)) {
259:                                $script = $this->get_script_group('include-body');
260-
261-                                if ($script) {
262-                                    $body_prepend .= $script;
263:                                    $this->remove_scripts_group($buffer, 'include-body');
264-                                }
265-                            }
266-
267:                            if (!in_array('include-body-nb', $this->printed_scripts)) {
268:                                $script = $this->get_script_group('include-body-nb');
269-
270-                                if ($script) {
271-                                    $body_prepend .= $script;
272:                                    $this->remove_scripts_group($buffer, 'include-body-nb');
273-                                }
274-                            }
275-
276:                            if (!in_array('include-footer', $this->printed_scripts)) {
277:                                $script = $this->get_script_group('include-footer');
278-
279-                                if ($script) {
280-                                    $body_append .= $script;
281:                                    $this->remove_scripts_group($buffer, 'include-footer');
282-                                }
283-                            }
284-
285:                            if (!in_array('include-footer-nb', $this->printed_scripts)) {
286:                                $script = $this->get_script_group('include-footer-nb');
287-
288-                                if ($script) {
289-                                    $body_append .= $script;
290:                                    $this->remove_scripts_group($buffer, 'include-footer-nb');
291-                                }
292-                            }
293-                        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[482]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[479-     * @return boolean
480-     */
481-    function _is_css($path) {
482:        return preg_match('~[a-z0-9\-_]+\.include\.[0-9]+\.css$~', $path);
483-    }
484-
485-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[492]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[489-     * @return boolean
490-     */
491-    function _is_js($path) {
492:        return preg_match('~[a-z0-9\-_]+\.include(-nb)?\.[0-9]+\.js$~', $path);
493-    }
494-
495-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[502]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[499-     * @return boolean
500-     */
501-    function _is_js_body($path) {
502:        return preg_match('~[a-z0-9\-_]+\.include-body(-nb)?\.[0-9]+\.js$~', $path);
503-    }
504-
505-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[512]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[509-     * @return boolean
510-     */
511-    function _is_js_footer($path) {
512:        return preg_match('~[a-z0-9\-_]+\.include-footer(-nb)?\.[0-9]+\.js$~', $path);
513-    }
514-
515-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[70-            return false;
71-        }
72-
73:        set_include_path(get_include_path() . PATH_SEPARATOR . W3TC_LIB_DIR);
74-
75-        require_once 'Microsoft/WindowsAzure/Storage/Blob.php';
76-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[26-
27-/**
28- * Microsoft_Http_Response represents an HTTP 1.0 / 1.1 response message. It
29: * includes easy access to all the response's different elemts, as well as some
30- * convenience methods for parsing and validating HTTP responses.
31- *
32- * @package    Microsoft_Http]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[290]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[287-        $secure  = false;
288-        $parts   = explode(';', $cookieStr);
289-
290:        // If first part does not include '=', fail
291-        if (strpos($parts[0], '=') === false) return false;
292-
293-        // Get the name and value of the cookie]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[26]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[23-
24-/**
25- * Microsoft_Http_Response represents an HTTP 1.0 / 1.1 response message. It
26: * includes easy access to all the response's different elemts, as well as some
27- * convenience methods for parsing and validating HTTP responses.
28- *
29- * @package    Microsoft_Http]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[303]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[300-	 * @param string $prefix     Optional. Filters the results to return only queues whose name begins with the specified prefix.
301-	 * @param int    $maxResults Optional. Specifies the maximum number of queues to return per call to Azure storage. This does NOT affect list size returned by this function. (maximum: 5000)
302-	 * @param string $marker     Optional string value that identifies the portion of the list to be returned with the next list operation.
303:	 * @param string $include    Optional. Include this parameter to specify that the queue's metadata be returned as part of the response body. (allowed values: '', 'metadata')
304-	 * @param int    $currentResultCount Current result count (internal use)
305-	 * @return array
306-	 * @throws Microsoft_WindowsAzure_Exception
307-	 */
308:	public function listQueues($prefix = null, $maxResults = null, $marker = null, $include = null, $currentResultCount = 0)
309-	{
310-	    // Build query string
311-		$queryString = array('comp=list');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[321]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[318-	    if (!is_null($marker)) {
319-	        $queryString[] = 'marker=' . $marker;
320-	    }
321:		if (!is_null($include)) {
322:	        $queryString[] = 'include=' . $include;
323-	    }
324-	    $queryString = self::createQueryStringFromArray($queryString);
325-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[344]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[341-			$currentResultCount = $currentResultCount + count($queues);
342-			if (!is_null($maxResults) && $currentResultCount < $maxResults) {
343-    			if (!is_null($xmlMarker) && $xmlMarker != '') {
344:    			    $queues = array_merge($queues, $this->listQueues($prefix, $maxResults, $xmlMarker, $include, $currentResultCount));
345-    			}
346-			}
347-			if (!is_null($maxResults) && count($queues) > $maxResults) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/TableEntityQuery.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[241]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[238-	/**
239-	 * Assemble from
240-	 * 
241:	 * @param boolean $includeParentheses Include parentheses? ()
242-	 * @return string
243-	 */
244:	public function assembleFrom($includeParentheses = true)
245-	{
246-	    $identifier = '';
247:	    if ($includeParentheses) {
248-	        $identifier .= '(';
249-	        
250-	        if (!is_null($this->_partitionKey)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[548]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[545-	 * @param string $prefix     Optional. Filters the results to return only containers whose name begins with the specified prefix.
546-	 * @param int    $maxResults Optional. Specifies the maximum number of containers to return per call to Azure storage. This does NOT affect list size returned by this function. (maximum: 5000)
547-	 * @param string $marker     Optional string value that identifies the portion of the list to be returned with the next list operation.
548:	 * @param string $include    Optional. Include this parameter to specify that the container's metadata be returned as part of the response body. (allowed values: '', 'metadata')
549-	 * @param int    $currentResultCount Current result count (internal use)
550-	 * @return array
551-	 * @throws Microsoft_WindowsAzure_Exception
552-	 */
553:	public function listContainers($prefix = null, $maxResults = null, $marker = null, $include = null, $currentResultCount = 0)
554-	{
555-		// Build query string
556-		$queryString = array('comp=list');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[566]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[563-		if (!is_null($marker)) {
564-			$queryString[] = 'marker=' . $marker;
565-		}
566:		if (!is_null($include)) {
567:			$queryString[] = 'include=' . $include;
568-		}
569-		$queryString = self::createQueryStringFromArray($queryString);
570-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[591]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[588-			$currentResultCount = $currentResultCount + count($containers);
589-			if (!is_null($maxResults) && $currentResultCount < $maxResults) {
590-				if (!is_null($xmlMarker) && $xmlMarker != '') {
591:					$containers = array_merge($containers, $this->listContainers($prefix, $maxResults, $xmlMarker, $include, $currentResultCount));
592-				}
593-			}
594-			if (!is_null($maxResults) && count($containers) > $maxResults) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1741]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1738-	 * @param string $delimiter  Optional. Delimiter, i.e. '/', for specifying folder hierarchy
1739-	 * @param int    $maxResults Optional. Specifies the maximum number of blobs to return per call to Azure storage. This does NOT affect list size returned by this function. (maximum: 5000)
1740-	 * @param string $marker     Optional string value that identifies the portion of the list to be returned with the next list operation.
1741:	 * @param string $include    Optional. Specifies that the response should include one or more of the following subsets: '', 'metadata', 'snapshots', 'uncommittedblobs'). Multiple values can be added separated with a comma (,)
1742-	 * @param int    $currentResultCount Current result count (internal use)
1743-	 * @return array
1744-	 * @throws Microsoft_WindowsAzure_Exception
1745-	 */
1746:	public function listBlobs($containerName = '', $prefix = '', $delimiter = '', $maxResults = null, $marker = null, $include = null, $currentResultCount = 0)
1747-	{
1748-		if ($containerName === '') {
1749-			throw new Microsoft_WindowsAzure_Exception('Container name is not specified.');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1769]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1766-		if (!is_null($marker)) {
1767-			$queryString[] = 'marker=' . $marker;
1768-		}
1769:		if (!is_null($include)) {
1770:			$queryString[] = 'include=' . $include;
1771-		}
1772-		$queryString = self::createQueryStringFromArray($queryString);
1773-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1838]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1835-			$currentResultCount = $currentResultCount + count($blobs);
1836-			if (!is_null($maxResults) && $currentResultCount < $maxResults) {
1837-				if (!is_null($xmlMarker) && $xmlMarker != '') {
1838:					$blobs = array_merge($blobs, $this->listBlobs($containerName, $prefix, $delimiter, $maxResults, $marker, $include, $currentResultCount));
1839-				}
1840-			}
1841-			if (!is_null($maxResults) && count($blobs) > $maxResults) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[196]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[193-    $this->options['maxObjectDepth'] = 10;
194-    $this->options['maxArrayDepth'] = 20;
195-    $this->options['useNativeJsonEncode'] = true;
196:    $this->options['includeLineNumbers'] = true;
197-  }
198-    
199-  /**
200:   * When the object gets serialized only include specific object members.
201-   * 
202-   * @return array
203-   */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[269]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[266-   *  - maxObjectDepth: The maximum depth to traverse objects (default: 10)
267-   *  - maxArrayDepth: The maximum depth to traverse arrays (default: 20)
268-   *  - useNativeJsonEncode: If true will use json_encode() (default: true)
269:   *  - includeLineNumbers: If true will include line numbers and filenames (default: true)
270-   * 
271-   * @param array $Options The options to be set
272-   * @return void]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[638]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[635-      }
636-    }
637-    
638:    if($this->options['includeLineNumbers']) {
639-      if(!isset($meta['file']) || !isset($meta['line'])) {
640-
641-        $trace = debug_backtrace();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[33]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[30- * of the Software, and to permit persons to whom the Software is furnished to do
31- * so, subject to the following conditions:
32- *
33: * The above copyright notice and this permission notice shall be included in all
34- * copies or substantial portions of the Software.
35- *
36- * The Software shall be used for Good, not Evil.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Solar/Dir.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[27-    
28-    /**
29-     * 
30:     * Hack for [[php::is_dir() | ]] that checks the include_path.
31-     * 
32:     * Use this to see if a directory exists anywhere in the include_path.
33-     * 
34-     * {{code: php
35-     *     $dir = Solar_Dir::exists('path/to/dir')
36-     *     if ($dir) {
37-     *         $files = scandir($dir);
38-     *     } else {
39:     *         echo "Not found in the include-path.";
40-     *     }
41-     * }}
42-     * 
43:     * @param string $dir Check for this directory in the include_path.
44-     * 
45:     * @return mixed If the directory exists in the include_path, returns the
46-     * absolute path; if not, returns boolean false.
47-     * 
48-     */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Solar/Dir.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[66]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[63-        }
64-        
65-        // using a relative path on the file
66:        $path = explode(PATH_SEPARATOR, ini_get('include_path'));
67-        foreach ($path as $base) {
68-            // strip Unix '/' and Windows '\'
69-            $target = rtrim($base, '\\/') . DIRECTORY_SEPARATOR . $dir;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/ConditionalGet.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[44]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[41- * echo $content;
42- * </code>
43- * 
44: * E.g. Static content with some static includes:
45- * <code>
46- * // before content
47- * $cg = new HTTP_ConditionalGet(array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/ImportProcessor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[49-            || in_array($file, self::$filesIncluded)
50-            || false === ($content = @file_get_contents($file))
51-        ) {
52:            // file missing, already included, or failed read
53-            return '';
54-        }
55-        self::$filesIncluded[] = realpath($file);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/ImportProcessor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[102]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[99-            // protocol, leave in place for CSS, comment for JS
100-            return self::$_isCss
101-                ? $m[0]
102:                : "/* Minify_ImportProcessor will not include remote content */";
103-        }
104-        if ('/' === $url[0]) {
105-            // protocol-relative or root path]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSSTidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[23]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[20-            'template' => 'default'
21-        ), $options);
22-
23:        set_include_path(get_include_path() . PATH_SEPARATOR . W3TC_LIB_CSSTIDY_DIR);
24-
25-        require_once 'class.csstidy.php';
26-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Packer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[4- *
5- * To use this class you must first download the PHP port of Packer
6- * and place the file "class.JavaScriptPacker.php" in /lib (or your
7: * include_path).
8- * @link http://joliclic.free.fr/php/javascript-packer/en/
9- *
10- * Be aware that, as long as HTTP encoding is used, scripts minified with JSMin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Packer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[20]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[17-    die();
18-}
19-
20:if (false === (@include W3TC_LIB_MINIFY_DIR . '/class.JavaScriptPacker.php')) {
21-    trigger_error(
22-        'The script "class.JavaScriptPacker.php" is required. Please see: http:'
23-        .'//code.google.com/p/minify/source/browse/trunk/min/lib/Minify/Packer.php']]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[88]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[85-     * via this method. This built-in function will only load classes for
86-     * static method callbacks where the class isn't already defined. It uses
87-     * the PEAR convention, so, given array('Jimmy_Minifier', 'minCss'), this 
88:     * function will include 'Jimmy/Minifier.php'.
89-     * 
90-     * If you need code loaded on demand and this doesn't suit you, you'll need
91-     * to override this function in your subclass.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[246]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[243-	  } else if ($this->io_method() == 'curl') {
244-		if (!extension_loaded('curl')) {
245-//			$this->setError('cURL Extension, or OpenSSL extension w/ PHP version >= 4.3 is required for HTTPS');
246:			$this->setError('The PHP cURL Extension is required for HTTPS or NLTM.  You will need to re-build or update your PHP to include cURL or change php.ini to load the PHP cURL extension.');
247-			return false;
248-		}
249-		// Avoid warnings when PHP does not have these options]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.xmlschema.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[430]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[427-					}
428-				}
429-			break;
430:			case 'include':
431-			    if (isset($attrs['schemaLocation'])) {
432:					$this->xdebug('include into namespace ' . $this->schemaTargetNamespace . ' from ' . $attrs['schemaLocation']);
433-                    $this->imports[$this->schemaTargetNamespace][] = array('location' => $attrs['schemaLocation'], 'loaded' => false);
434-				} else {
435:					$this->xdebug('ignoring invalid XML Schema construct: include without schemaLocation attribute');
436-				}
437-			break;
438-			case 'list':	// simpleType value list]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.xmlschema.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[951]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[948-	/**
949-	* adds an element to the schema
950-	*
951:	* @param array $attrs attributes that must include name and type
952-	* @see nusoap_xmlschema
953-	* @access public
954-	*/]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1509]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1506-					}
1507-				}
1508-			break;
1509:			case 'include':
1510-			    if (isset($attrs['schemaLocation'])) {
1511:					$this->xdebug('include into namespace ' . $this->schemaTargetNamespace . ' from ' . $attrs['schemaLocation']);
1512-                    $this->imports[$this->schemaTargetNamespace][] = array('location' => $attrs['schemaLocation'], 'loaded' => false);
1513-				} else {
1514:					$this->xdebug('ignoring invalid XML Schema construct: include without schemaLocation attribute');
1515-				}
1516-			break;
1517-			case 'list':	// simpleType value list]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2030]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2027-	/**
2028-	* adds an element to the schema
2029-	*
2030:	* @param array $attrs attributes that must include name and type
2031-	* @see nusoap_xmlschema
2032-	* @access public
2033-	*/]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2399]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[2396-	  } else if ($this->io_method() == 'curl') {
2397-		if (!extension_loaded('curl')) {
2398-//			$this->setError('cURL Extension, or OpenSSL extension w/ PHP version >= 4.3 is required for HTTPS');
2399:			$this->setError('The PHP cURL Extension is required for HTTPS or NLTM.  You will need to re-build or update your PHP to include cURL or change php.ini to load the PHP cURL extension.');
2400-			return false;
2401-		}
2402-		// Avoid warnings when PHP does not have these options]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4359]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[4356-	* gets the HTTP body for the current response.
4357-	*
4358-	* @param string $soapmsg The SOAP payload
4359:	* @return string The HTTP body, which includes the SOAP payload
4360-	* @access private
4361-	*/
4362-	function getHTTPBody($soapmsg) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4414]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[4411-	* @param	mixed $soapaction the soapaction for the method or false
4412-	* @param	mixed $style optional (rpc|document) or false Note: when 'document' is specified, parameter and return wrappers are created for you automatically
4413-	* @param	mixed $use optional (encoded|literal) or false
4414:	* @param	string $documentation optional Description to include in WSDL
4415-	* @param	string $encodingStyle optional (usually 'http://schemas.xmlsoap.org/soap/encoding/' for encoded)
4416-	* @access   public
4417-	*/]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[6421]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[6418-	/**
6419-	* adds an element to the WSDL types
6420-	*
6421:	* @param array $attrs attributes that must include name and type
6422-	* @see nusoap_xmlschema
6423-	* @access public
6424-	*/]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[6440]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[6437-	* @param string $soapaction optional The soapaction for the operation
6438-	* @param string $style (rpc|document) optional The style for the operation Note: when 'document' is specified, parameter and return wrappers are created for you automatically
6439-	* @param string $use (encoded|literal) optional The use for the parameters (cannot mix right now)
6440:	* @param string $documentation optional The description to include in the WSDL
6441-	* @param string $encodingStyle optional (usually 'http://schemas.xmlsoap.org/soap/encoding/' for encoded)
6442-	* @access public 
6443-	*/]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7304]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[7301-	*                         is really one parameter, the root of the fragment
7302-	*                         used in the call, which encloses what programmers
7303-	*                         normally think of parameters.  A parameter array
7304:	*                         *must* include the wrapper.
7305-	* @param	string $namespace optional method namespace (WSDL can override)
7306-	* @param	string $soapAction optional SOAPAction value (WSDL can override)
7307-	* @param	mixed $headers optional string of XML with SOAP header content, or array of soapval objects for SOAP headers, or associative array]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7974]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[7971-	* gets the HTTP body for the current request.
7972-	*
7973-	* @param string $soapmsg The SOAP payload
7974:	* @return string The HTTP body, which includes the SOAP payload
7975-	* @access private
7976-	*/
7977-	function getHTTPBody($soapmsg) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1840]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1837-	/**
1838-	* adds an element to the WSDL types
1839-	*
1840:	* @param array $attrs attributes that must include name and type
1841-	* @see nusoap_xmlschema
1842-	* @access public
1843-	*/]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1859]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1856-	* @param string $soapaction optional The soapaction for the operation
1857-	* @param string $style (rpc|document) optional The style for the operation Note: when 'document' is specified, parameter and return wrappers are created for you automatically
1858-	* @param string $use (encoded|literal) optional The use for the parameters (cannot mix right now)
1859:	* @param string $documentation optional The description to include in the WSDL
1860-	* @param string $encodingStyle optional (usually 'http://schemas.xmlsoap.org/soap/encoding/' for encoded)
1861-	* @access public
1862-	*/]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[148]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[145-	*                         is really one parameter, the root of the fragment
146-	*                         used in the call, which encloses what programmers
147-	*                         normally think of parameters.  A parameter array
148:	*                         *must* include the wrapper.
149-	* @param	string $namespace optional method namespace (WSDL can override)
150-	* @param	string $soapAction optional SOAPAction value (WSDL can override)
151-	* @param	mixed $headers optional string of XML with SOAP header content, or array of soapval objects for SOAP headers, or associative array]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[818]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[815-	* gets the HTTP body for the current request.
816-	*
817-	* @param string $soapmsg The SOAP payload
818:	* @return string The HTTP body, which includes the SOAP payload
819-	* @access private
820-	*/
821-	function getHTTPBody($soapmsg) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[335]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[332- * @return array
333- */
334-function w3_load_blognames() {
335:    $blognames = include W3TC_BLOGNAMES_PATH;
336-
337-    return $blognames;
338-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/minify_recommendations.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[49]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[46-            				<?php $selected = (isset($locations_js[$js_group][$js_file]) ? $locations_js[$js_group][$js_file] : ''); ?>
47-                            <select name="recom_js_location">
48-                                <optgroup label="Blocking:">
49:                                    <option value="include"<?php selected($selected, 'include'); ?>>Embed in &lt;head&gt;</option>
50:                                    <option value="include-body"<?php selected($selected, 'include-body'); ?>>Embed after &lt;body&gt;</option>
51:                                    <option value="include-footer"<?php selected($selected, 'include-footer'); ?>>Embed before &lt;/body&gt;</option>
52-                                </optgroup>
53-                                <optgroup label="Non-Blocking:">
54:                                    <option value="include-nb"<?php selected($selected, 'include-nb'); ?>>Embed in &lt;head&gt;</option>
55:                                    <option value="include-body-nb"<?php selected($selected, 'include-body-nb'); ?>>Embed after &lt;body&gt;</option>
56:                                    <option value="include-footer-nb"<?php selected($selected, 'include-footer-nb'); ?>>Embed before &lt;/body&gt;</option>
57-                                </optgroup>
58-                            </select>
59-            			</td>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/objectcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<form action="admin.php?page=<?php echo $this->_page; ?>" method="post">
5-    <p>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/objectcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[71]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[68-    </div>
69-</form>
70-
71:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<div id="install">
5-    <ol>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[263]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[260-                <th colspan="2">
261-                    <ul>
262-                        <li>The provided instructions are for 32-bit CentOS, however we can provide others based on <a href="mailto:wordpressexperts@w3-edge.com">your requests</a>.</li>
263:						<li>Best compatibility with <a href="http://www.iis.net/" target="_blank">IIS</a> is realized via <a href="http://www.microsoft.com/web/webmatrix/" target="_blank">WebMatrix</a>, which also includes the supported <a href="http://www.iis.net/download/wincacheforphp" target="_blank">WinCache</a> opcode cache.</li>
264-                        <li>In the case where Apache is not used, the .htaccess file located in the root directory of the WordPress installation, wp-content/w3tc/pgcache/.htaccess and wp-content/w3tc/min/.htaccess contain directives that must be manually created for your web server software.</li>
265-                        <li>Restarting the web server will empty the opcode cache, which means it will have to be rebuilt over time and your site's performance will suffer during this period. Still, an opcode cache should be installed in any case to maximize WordPress performance.</li>
266-                        <li>Consider using memcached for objects that must persist across web server restarts or that you wish to share amongst your pool of servers (or cluster), e.g.: database objects or page cache.</li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[276]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[273-    </div>
274-</div>
275-
276:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2-<form id="support_form" class="w3tc-ignore-change" action="admin.php?page=<?php echo $this->_page; ?>" method="post" enctype="multipart/form-data">
3-    <div class="metabox-holder">
4:        <?php include W3TC_INC_DIR . '/options/support/form/' . $request_type . '.php'; ?>
5-
6-        <?php echo $this->postbox_header('Note(s):'); ?>
7-        <table class="form-table">]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[34]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[31-<tr>
32-    <th>Replace site's hostname with:</th>
33-    <td>
34:		<?php $cnames = $this->_config->get_array('cdn.cotendo.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
35-        <br /><span class="description">Enter the hostname provided by your <acronym>CDN</acronym> provider, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
36-    </td>
37-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/rscf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[45]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[42-<tr>
43-    <th>Replace site's hostname with:</th>
44-    <td>
45:		<?php $cnames = $this->_config->get_array('cdn.rscf.cname'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
46-        <br /><span class="description">Enter the hostname provided by Rackspace Cloud Files, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
47-    </td>
48-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/netdna.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[25-<tr>
26-    <th>Replace site's hostname with:</th>
27-    <td>
28:		<?php $cnames = $this->_config->get_array('cdn.netdna.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
29-        <br /><span class="description">Enter the hostname provided by your <acronym>CDN</acronym> provider, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
30-    </td>
31-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/mirror.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[16]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[13-<tr>
14-	<th>Replace site's hostname with:</th>
15-	<td>
16:		<?php $cnames = $this->_config->get_array('cdn.mirror.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
17-		<br /><span class="description">Enter the hostname provided by your <acronym>CDN</acronym> provider, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
18-	</td>
19-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cf2.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[37]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[34-	<th><label for="cdn_cf2_id">Replace site's hostname with:</label></th>
35-	<td>
36-		<input id="cdn_cf2_id" type="text" name="cdn.cf2.id" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.cf2.id')); ?>" size="18" style="text-align: right;" />.cloudfront.net or CNAME:
37:		<?php $cnames = $this->_config->get_array('cdn.cf2.cname'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
38-		<br /><span class="description">If you have already added a <a href="http://docs.amazonwebservices.com/AmazonCloudFront/latest/DeveloperGuide/index.html?CNAMEs.html" target="_blank">CNAME</a> to your <acronym title="Domain Name System">DNS</acronym> Zone, enter it here.</span>
39-	</td>
40-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[49]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[46-<tr>
47-	<th>Replace site's hostname with:</th>
48-	<td>
49:		<?php $cnames = $this->_config->get_array('cdn.ftp.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
50-		<br /><span class="description">Enter the hostname or CNAME(s) of your <acronym title="File Transfer Protocol">FTP</acronym> server configured above, these values will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
51-	</td>
52-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/edgecast.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[25-<tr>
26-    <th>Replace site's hostname with:</th>
27-    <td>
28:		<?php $cnames = $this->_config->get_array('cdn.edgecast.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
29-        <br /><span class="description">Enter the hostname provided by your <acronym>CDN</acronym> provider, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
30-    </td>
31-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[36]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[33-	<th><label for="cdn_cf_id">Replace site's hostname with:</label></th>
34-	<td>
35-		<input id="cdn_cf_id" type="text" name="cdn.cf.id" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.cf.id')); ?>" size="18" style="text-align: right;" />.cloudfront.net or CNAME:
36:		<?php $cnames = $this->_config->get_array('cdn.cf.cname'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
37-		<br /><span class="description">If you have already added a <a href="http://docs.amazonwebservices.com/AmazonCloudFront/latest/DeveloperGuide/index.html?CNAMEs.html" target="_blank">CNAME</a> to your <acronym title="Domain Name System">DNS</acronym> Zone, enter it here.</span>
38-	</td>
39-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[38-		<?php else: ?>
39-		    &lt;account name&gt;.blob.core.windows.net
40-		<?php endif; ?> or CNAME:
41:		<?php $cnames = $this->_config->get_array('cdn.azure.cname'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
42-	</td>
43-</tr>
44-<tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/s3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[40]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[37-		<?php else: ?>
38-		    &lt;bucket&gt;.s3.amazonaws.com
39-		<?php endif; ?> or CNAME:
40:		<?php $cnames = $this->_config->get_array('cdn.s3.cname'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
41-        <br /><span class="description">If you have already added a <a href="http://docs.amazonwebservices.com/AmazonS3/latest/DeveloperGuide/VirtualHosting.html#VirtualHostingCustomURLs" target="_blank">CNAME</a> to your <acronym title="Domain Name System">DNS</acronym> Zone, enter it here.</span>
42-	</td>
43-</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/pgcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<form action="admin.php?page=<?php echo $this->_page; ?>" method="post">
5-    <p>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/pgcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[266]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[263-    </div>
264-</form>
265-
266:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/mobile.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<script type="text/javascript">/*<![CDATA[*/
5-var mobile_themes = {};]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/mobile.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[89]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[86-    </div>
87-</form>
88-
89:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/referrer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<script type="text/javascript">/*<![CDATA[*/
5-var referrer_themes = {};]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/referrer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[89]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[86-    </div>
87-</form>
88-
89:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-<p>
4-    Request professional services, suggest a feature or submit a bug using the form below:
5-</p>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[21]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[18-    ?>
19-</div>
20-
21:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<script type="text/javascript">/*<![CDATA[*/
5-var minify_templates = {};]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[98]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[95-                        }
96-
97-                        if (file_exists($html_engine_file)) {
98:                            include $html_engine_file;
99-                        }
100-                    ?>
101-        		</td>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[121]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[118-                }
119-
120-                if (file_exists($html_engine_file2)) {
121:                    include $html_engine_file2;
122-                }
123-            ?>
124-        </table>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[157]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[154-                        }
155-
156-                        if (file_exists($js_engine_file)) {
157:                            include $js_engine_file;
158-                        }
159-                    ?>
160-                </td>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[174]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[171-                }
172-
173-                if (file_exists($js_engine_file2)) {
174:                    include $js_engine_file2;
175-                }
176-            ?>
177-            <?php if (!$auto): ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[220]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[217-                    						<td>
218-                        						<select class="js_file_location js_enabled">
219-                        							<optgroup label="Blocking:">
220:                        								<option value="include"<?php if ($js_location == 'include'): ?> selected="selected"<?php endif; ?>>Embed in &lt;head&gt;</option>
221:                        								<option value="include-body"<?php if ($js_location == 'include-body'): ?> selected="selected"<?php endif; ?>>Embed after &lt;body&gt;</option>
222:                        								<option value="include-footer"<?php if ($js_location == 'include-footer'): ?> selected="selected"<?php endif; ?>>Embed before &lt;/body&gt;</option>
223-                    								</optgroup>
224-                    								<optgroup label="Non-Blocking:">
225:                    									<option value="include-nb"<?php if ($js_location == 'include-nb'): ?> selected="selected"<?php endif; ?>>Embed in &lt;head&gt;</option>
226:                    									<option value="include-body-nb"<?php if ($js_location == 'include-body-nb'): ?> selected="selected"<?php endif; ?>>Embed after &lt;body&gt;</option>
227:                    									<option value="include-footer-nb"<?php if ($js_location == 'include-footer-nb'): ?> selected="selected"<?php endif; ?>>Embed before &lt;/body&gt;</option>
228-                    								</optgroup>
229-                    							</select>
230-                    						</td>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[277]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[274-                        }
275-
276-                        if (file_exists($css_engine_file)) {
277:                            include $css_engine_file;
278-                        }
279-                    ?>
280-        		</td>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[304]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[301-                }
302-
303-                if (file_exists($css_engine_file2)) {
304:                    include $css_engine_file2;
305-                }
306-            ?>
307-            <?php if (!$auto): ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[432]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[429-    </div>
430-</form>
431-
432:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/about.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<div id="about">
5-    <p>User experience is an important aspect of every web site and all web sites can benefit from effective caching and file size reduction. We have applied web site optimization methods typically used with high traffic sites and simplified their implementation. Coupling these methods either <a href="http://www.danga.com/memcached/" target="_blank">memcached</a> and/or opcode caching and the <acronym title="Content Delivery Network">CDN</acronym> of your choosing to provide the following features and benefits:</p>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/about.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[49-    <p>Please reach out to all of these people and support their projects if you're so inclined.</p>
50-</div>
51-
52:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<p>
5-	Content Delivery Network support via]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[48]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[45-            </tr>
46-        	<tr>
47-        		<th<?php if ($cdn_mirror): ?> colspan="2"<?php endif; ?>>
48:        			<input type="hidden" name="cdn.includes.enable" value="0" />
49:        			<label><input type="checkbox" name="cdn.includes.enable" value="1"<?php checked($this->_config->get_boolean('cdn.includes.enable'), true); ?> /> Host wp-includes/ files</label><br />
50:    				<span class="description">If checked, WordPress static core file types specified in the "wp-includes file types to upload" field below will be hosted with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
51-        		</th>
52-        		<?php if (! $cdn_mirror): ?>
53-        		<td>
54:        			<input class="button cdn_export {type: 'includes', nonce: '<?php echo wp_create_nonce('w3tc'); ?>'}" type="button" value="Upload includes files" />
55-        		</td>
56-        		<?php endif; ?>
57-        	</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[122]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[119-        <table class="form-table">
120-    		<?php
121-                if (w3_is_cdn_engine($cdn_engine)) {
122:                    include W3TC_INC_DIR . '/options/cdn/' . $cdn_engine . '.php';
123-    			}
124-    		?>
125-        </table>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[180]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[177-        	</tr>
178-        	<?php endif; ?>
179-        	<tr>
180:        		<th style="width: 300px;"><label for="cdn_includes_files">wp-includes file types to upload:</label></th>
181-        		<td>
182:        			<input id="cdn_includes_files" type="text" name="cdn.includes.files" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.includes.files')); ?>" size="100" /><br />
183-        			<span class="description">Specify the file types within the WordPress core to host with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
184-        		</td>
185-        	</tr>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[251]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[248-    </div>
249-</form>
250-
251:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/faq.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<h4>Table of Contents</h4>
5-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/faq.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[31]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[28-    <?php endforeach; ?>
29-</div>
30-
31:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/dbcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<form action="admin.php?page=<?php echo $this->_page; ?>" method="post">
5-    <p>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/dbcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[86]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[83-    </div>
84-</form>
85-
86:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<p>
5-	The plugin is currently <span class="w3tc-<?php if ($enabled): ?>enabled">enabled<?php else: ?>disabled">disabled<?php endif; ?></span>. If an option is disabled it means that either your current installation is not compatible or software installation is required.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[557]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[554-    </div>
555-</form>
556-
557:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/browsercache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<p>
5-    Browser caching is currently <span class="w3tc-<?php if ($browsercache_enabled): ?>enabled">enabled<?php else: ?>disabled">disabled<?php endif; ?></span>.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/browsercache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[296]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[293-    </div>
294-</form>
295-
296:<?php include W3TC_INC_DIR . '/options/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/common/header.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[16-<html xmlns="http://www.w3.org/1999/xhtml" <?php do_action('admin_xml_ns'); ?> <?php language_attributes(); ?>>
17-	<head>
18-		<link rel="stylesheet" type="text/css" href="<?php echo plugins_url('pub/css/popup.css?ver=' . W3TC_VERSION, W3TC_FILE); ?>" />
19:		<script type="text/javascript" src="<?php echo site_url('wp-includes/js/jquery/jquery.js?ver=' . W3TC_VERSION); ?>"></script>
20-		<script type="text/javascript" src="<?php echo plugins_url('pub/js/metadata.js?ver=' . W3TC_VERSION, W3TC_FILE); ?>"></script>
21-		<script type="text/javascript" src="<?php echo plugins_url('pub/js/popup.js?ver=' . W3TC_VERSION, W3TC_FILE); ?>"></script>
22-		<title><?php echo htmlspecialchars($title); ?> - W3 Total Cache</title>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_export_library.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/popup/common/header.php'; ?>
3-
4-<script type="text/javascript">/*<![CDATA[*/
5-jQuery(function() {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_export_library.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[47]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[44-
45-<div id="cdn_export_library_log" class="log"></div>
46-
47:<?php include W3TC_INC_DIR . '/popup/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_rename_domain.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/popup/common/header.php'; ?>
3-
4-<script type="text/javascript">/*<![CDATA[*/
5-jQuery(function() {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_rename_domain.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[54]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[51-
52-<div id="cdn_rename_domain_log" class="log"></div>
53-
54:<?php include W3TC_INC_DIR . '/popup/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/pagespeed_results.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/popup/common/header.php'; ?>
3-
4-<?php if ($results): ?>
5-<h4>Page Speed Score: <?php echo $results['score']; ?>/100</h4>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/pagespeed_results.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[56]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[53-</p>
54-<?php endif; ?>
55-
56:<?php include W3TC_INC_DIR . '/popup/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_export_file.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/popup/common/header.php'; ?>
3-
4-<script type="text/javascript">/*<![CDATA[*/
5-var files = []]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_export_file.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[54]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[51-
52-<div id="cdn_export_file_log" class="log"></div>
53-
54:<?php include W3TC_INC_DIR . '/popup/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_purge.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/popup/common/header.php'; ?>
3-
4-<p>
5-    Remove objects from the CDN by specifying the relative path on individual lines below and clicking the "Purge" button when done. For example:]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_purge.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[48]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[45-    <?php endforeach; ?>
46-</div>
47-
48:<?php include W3TC_INC_DIR . '/popup/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_import_library.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/popup/common/header.php'; ?>
3-
4-<script type="text/javascript">/*<![CDATA[*/
5-jQuery(function() {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_import_library.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[66]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[63-	<textarea rows="10" cols="90" id="cdn_import_library_rules" class="rules"></textarea>
64-</p>
65-
66:<?php include W3TC_INC_DIR . '/popup/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php include W3TC_INC_DIR . '/popup/common/header.php'; ?>
3-
4-<p>This tool lists the pending file uploads and deletions.</p>
5-<p id="w3tc-options-menu">]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[101]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[98-<?php endif; ?>
99-</div>
100-
101:<?php include W3TC_INC_DIR . '/popup/common/footer.php'; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/mime.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[18]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[15-        /**
16-         * Try to detect by extension (fast)
17-         */
18:        $mime_types = include W3TC_INC_DIR . '/mime/all.php';
19-
20-        foreach ($mime_types as $extension => $type) {
21-            if (preg_match('~\.(' . $extension . ')$~i', $file)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/activation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[include]]></match>
		<name><![CDATA[include]]></name>
		<snippet><![CDATA[38-function w3_activate_error($error) {
39-    w3_activation_cleanup();
40-
41:    include W3TC_INC_DIR . '/error.php';
42-    exit();
43-}
44-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1795]]></line_number>
		<match><![CDATA[include_once]]></match>
		<name><![CDATA[include_once]]></name>
		<snippet><![CDATA[1793-
1794-        if ($wp_version >= 2.8) {
1795:            include_once (ABSPATH . WPINC . '/feed.php');
1796-            $feed = fetch_feed(W3TC_FEED_URL);
1797-
1798-            if (!is_wp_error($feed)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1810]]></line_number>
		<match><![CDATA[include_once]]></match>
		<name><![CDATA[include_once]]></name>
		<snippet><![CDATA[1807-                }
1808-            }
1809-        } else {
1810:            include_once (ABSPATH . WPINC . '/rss.php');
1811-            $rss = fetch_rss(W3TC_FEED_URL);
1812-
1813-            if (is_object($rss)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[701]]></line_number>
		<match><![CDATA[mail(]]></match>
		<name><![CDATA[mail(]]></name>
		<snippet><![CDATA[699-        @set_time_limit($this->_config->get_integer('timelimit.email_send'));
700-
701:        $result = @wp_mail($to_email, 'W3 Total Cache Error Notification', $body, implode("\n", $headers));
702-
703-        return $result;
704-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2521]]></line_number>
		<match><![CDATA[mail(]]></match>
		<name><![CDATA[mail(]]></name>
		<snippet><![CDATA[2518-
2519-        @set_time_limit($this->_config->get_integer('timelimit.email_send'));
2520-
2521:        $result = @wp_mail(W3TC_EMAIL, $subject, $body, implode("\n", $headers), $attachments);
2522-
2523-        /**
2524-         * Remove temporary files]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1285]]></line_number>
		<match><![CDATA[ob_get_contents(]]></match>
		<name><![CDATA[ob_get_contents(]]></name>
		<snippet><![CDATA[1283-            ob_start();
1284-            $result = eval($code);
1285:            $output = ob_get_contents();
1286-            ob_end_clean();
1287-
1288-            if ($result === false) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1315]]></line_number>
		<match><![CDATA[ob_get_contents(]]></match>
		<name><![CDATA[ob_get_contents(]]></name>
		<snippet><![CDATA[1312-            if (file_exists($file) && is_readable($file)) {
1313-                ob_start();
1314-                include $file;
1315:                $output = ob_get_contents();
1316-                ob_end_clean();
1317-            } else {
1318-                $output = sprintf('Unable to open file: %s', htmlspecialchars($file));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[449]]></line_number>
		<match><![CDATA[ob_get_contents(]]></match>
		<name><![CDATA[ob_get_contents(]]></name>
		<snippet><![CDATA[446-
447-            ob_start();
448-            include W3TC_INC_DIR . '/options/common/help.php';
449:            $help = ob_get_contents();
450-            ob_end_clean();
451-
452-            $hook = get_plugin_page_hookname($this->_page, 'w3tc_general');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2418]]></line_number>
		<match><![CDATA[ob_get_contents(]]></match>
		<name><![CDATA[ob_get_contents(]]></name>
		<snippet><![CDATA[2415-         */
2416-        ob_start();
2417-        phpinfo();
2418:        $php_info = ob_get_contents();
2419-        ob_end_clean();
2420-
2421-        $php_info_path = W3TC_TMP_DIR . '/php_info.html';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2432]]></line_number>
		<match><![CDATA[ob_get_contents(]]></match>
		<name><![CDATA[ob_get_contents(]]></name>
		<snippet><![CDATA[2429-         */
2430-        ob_start();
2431-        $this->action_self_test();
2432:        $self_test = ob_get_contents();
2433-        ob_end_clean();
2434-
2435-        $self_test_path = W3TC_TMP_DIR . '/self_test.html';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2498]]></line_number>
		<match><![CDATA[ob_get_contents(]]></match>
		<name><![CDATA[ob_get_contents(]]></name>
		<snippet><![CDATA[2495-         */
2496-        ob_start();
2497-        include W3TC_INC_DIR . '/email/support_request.php';
2498:        $body = ob_get_contents();
2499-        ob_end_clean();
2500-
2501-        /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.nusoap_base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[876]]></line_number>
		<match><![CDATA[ob_get_contents(]]></match>
		<name><![CDATA[ob_get_contents(]]></name>
		<snippet><![CDATA[873-    function varDump($data) {
874-		ob_start();
875-		var_dump($data);
876:		$ret_val = ob_get_contents();
877-		ob_end_clean();
878-		return $ret_val;
879-	}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[876]]></line_number>
		<match><![CDATA[ob_get_contents(]]></match>
		<name><![CDATA[ob_get_contents(]]></name>
		<snippet><![CDATA[873-    function varDump($data) {
874-		ob_start();
875-		var_dump($data);
876:		$ret_val = ob_get_contents();
877-		ob_end_clean();
878-		return $ret_val;
879-	}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[102]]></line_number>
		<match><![CDATA[passthru(]]></match>
		<name><![CDATA[passthru(]]></name>
		<snippet><![CDATA[100-            if ($fp) {
101-                @flock($fp, LOCK_SH);
102:                @fpassthru($fp);
103-                @flock($fp, LOCK_UN);
104-                @fclose($fp);
105-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3740]]></line_number>
		<match><![CDATA[passthru(]]></match>
		<name><![CDATA[passthru(]]></name>
		<snippet><![CDATA[3737-					$filename = substr($this->externalWSDLURL, $pos + 7);
3738-				}
3739-                $fp = fopen($this->externalWSDLURL, 'r');
3740:                fpassthru($fp);
3741-              }
3742-			} elseif ($this->wsdl) {
3743-				$this->debug("In service, serialize WSDL");]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/ClosureCompiler.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[78]]></line_number>
		<match><![CDATA[proc_open(]]></match>
		<name><![CDATA[proc_open(]]></name>
		<snippet><![CDATA[76-
77-        $pipes = null;
78:        $process = proc_open($cmd, $descriptors, $pipes);
79-
80-        if (!$process) {
81-            throw new Exception(sprintf('Unable to open process (%s).', $cmd));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/YUICompressor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[121]]></line_number>
		<match><![CDATA[proc_open(]]></match>
		<name><![CDATA[proc_open(]]></name>
		<snippet><![CDATA[118-        );
119-
120-        $pipes = null;
121:        $process = proc_open($cmd, $descriptors, $pipes);
122-
123-        if (!$process) {
124-            throw new Exception(sprintf('Unable to open process (%s).', $cmd));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2060]]></line_number>
		<match><![CDATA[readfile(]]></match>
		<name><![CDATA[readfile(]]></name>
		<snippet><![CDATA[2058-    function action_config_export() {
2059-        @header(sprintf('Content-Disposition: attachment; filename=%s', basename(W3TC_CONFIG_PATH)));
2060:        @readfile(W3TC_CONFIG_PATH);
2061-        die();
2062-    }
2063-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[109]]></line_number>
		<match><![CDATA[readfile(]]></match>
		<name><![CDATA[readfile(]]></name>
		<snippet><![CDATA[106-                return true;
107-            }
108-        } else {
109:            return @readfile($path);
110-        }
111-
112-        return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2060]]></line_number>
		<match><![CDATA[readfile(]]></match>
		<name><![CDATA[readfile(]]></name>
		<snippet><![CDATA[2058-    function action_config_export() {
2059-        @header(sprintf('Content-Disposition: attachment; filename=%s', basename(W3TC_CONFIG_PATH)));
2060:        @readfile(W3TC_CONFIG_PATH);
2061-        die();
2062-    }
2063-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[109]]></line_number>
		<match><![CDATA[readfile(]]></match>
		<name><![CDATA[readfile(]]></name>
		<snippet><![CDATA[106-                return true;
107-            }
108-        } else {
109:            return @readfile($path);
110-        }
111-
112-        return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./w3-total-cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-     * Require plugin configuration
40-     */
41:    require_once dirname(__FILE__) . '/inc/define.php';
42-
43-    /**
44-     * Load plugins]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/advanced-cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[21]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[18-            die(sprintf('<strong>W3 Total Cache Error:</strong> some files appear to be missing or out of place. Please re-install plugin or remove <strong>%s</strong>.', __FILE__));
19-        }
20-    } else {
21:        require_once W3TC_DIR . '/inc/define.php';
22-
23-        $redirect = & w3_instance('W3_Redirect');
24-        $redirect->process();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[16]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[13-
14-if (!@is_dir(W3TC_DIR) || !file_exists(W3TC_DIR . '/inc/define.php')) {
15-    if (!defined('WP_ADMIN')) { // lets don't show error on front end
16:        require_once (ABSPATH . WPINC . '/wp-db.php');
17-    } else {
18-        @header('HTTP/1.1 503 Service Unavailable');
19-        die(sprintf('<strong>W3 Total Cache Error:</strong> some files appear to be missing or out of place. Please re-install plugin or remove <strong>%s</strong>.', __FILE__));
20-    }
21-} else {
22:    require_once W3TC_DIR . '/inc/define.php';
23-
24-    $config = & w3_instance('W3_Config');
25-    if ($config->get_boolean('dbcache.enabled')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[27-            $db_driver_path = sprintf('%s/Db/%s.php', W3TC_LIB_W3_DIR, DB_TYPE);
28-
29-            if (file_exists($db_driver_path)) {
30:                require_once $db_driver_path;
31-            } else {
32-                die(sprintf('<strong>W3 Total Cache Error:</strong> database driver doesn\'t exist: %s.', $db_driver_path));
33-            }
34-        }
35-
36:        require_once W3TC_LIB_W3_DIR . '/Db.php';
37-
38-        @$GLOBALS['wpdb'] = & W3_Db::instance();
39-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/object-cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[16]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[13-
14-if (!@is_dir(W3TC_DIR) || !file_exists(W3TC_DIR . '/inc/define.php')) {
15-    if (!defined('WP_ADMIN')) { // lets don't show error on front end
16:        require_once (ABSPATH . WPINC . '/cache.php');
17-    } else {
18-        @header('HTTP/1.1 503 Service Unavailable');
19-        die(sprintf('<strong>W3 Total Cache Error:</strong> some files appear to be missing or out of place. Please re-install plugin or remove <strong>%s</strong>.', __FILE__));
20-    }
21-} else {
22:    require_once W3TC_DIR . '/inc/define.php';
23-
24-    /**
25-     * Init cache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/w3tc/min/index.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[10-define('W3TC_IN_MINIFY', true);
11-
12-if (!defined('ABSPATH')) {
13:    require_once dirname(__FILE__) . '/../../../wp-load.php';
14-}
15-
16-if (!defined('W3TC_DIR')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/w3tc/min/index.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[25]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[22-    die(sprintf('<strong>W3 Total Cache Error:</strong> some files appear to be missing or out of place. Please re-install plugin or remove <strong>%s</strong>.', dirname(__FILE__)));
23-}
24-
25:require_once W3TC_DIR . '/inc/define.php';
26-
27-$w3_minify = & w3_instance('W3_Minify');
28-$w3_minify->process();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[33]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[30- *
31- * @version 1.3
32- */
33:require('data.inc.php');
34-
35-/**
36- * Contains a class for printing CSS code
37- *
38- * @version 1.0
39- */
40:require('class.csstidy_print.php');
41-
42-/**
43- * Contains a class for optimising CSS code
44- *
45- * @version 1.0
46- */
47:require('class.csstidy_optimise.php');
48-
49-/**
50- * CSS Parser class]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[27-
28-/**
29- */
30:require_once("cloudfiles_exceptions.php");
31-
32-define("PHP_CF_VERSION", "1.7.6");
33-define("USER_AGENT", sprintf("PHP-CloudFiles/%s", PHP_CF_VERSION));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[74]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[71-
72-/**
73- */
74:require_once("cloudfiles_exceptions.php");
75:require("cloudfiles_http.php");
76-define("DEFAULT_CF_API_VERSION", 1);
77-define("MAX_CONTAINER_NAME_LEN", 256);
78-define("MAX_OBJECT_NAME_LEN", 1024);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1675]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1672-        if ($this->content_type)
1673-            return;
1674-
1675:        require_once W3TC_INC_DIR . '/functions/mime.php';
1676-
1677-        $this->content_type = w3_get_mime_type($handle);
1678-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1880]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1877-     * </code>
1878-     *
1879-     * @param string|resource $data string or open resource
1880:     * @param float $bytes amount of data to upload (required for resources)
1881-     * @param boolean $verify generate, send, and compare MD5 checksums
1882-     * @return boolean <kbd>True</kbd> when data uploaded successfully
1883:     * @throws SyntaxException missing required parameters
1884-     * @throws BadContentTypeException if no Content-Type was/could be set
1885-     * @throws MisMatchedChecksumException $verify is set and checksums unequal
1886-     * @throws InvalidResponseException unexpected response]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1978]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1975-     * @param string $filename full path to local file
1976-     * @param boolean $verify enable local/remote MD5 checksum validation
1977-     * @return boolean <kbd>True</kbd> if data uploaded successfully
1978:     * @throws SyntaxException missing required parameters
1979-     * @throws BadContentTypeException if no Content-Type was/could be set
1980-     * @throws MisMatchedChecksumException $verify is set and checksums unequal
1981-     * @throws InvalidResponseException unexpected response]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Varnish.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[57]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[54-     * @return boolean
55-     */
56-    function purge($uri) {
57:        require_once W3TC_INC_DIR . '/functions/http.php';
58-
59-        @set_time_limit($this->_timeout);
60-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[47]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[44-     * @return void
45-     */
46-    function process() {
47:        require_once W3TC_LIB_W3_DIR . '/Request.php';
48-
49-        /**
50-         * Check for rewrite test request]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[78]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[75-            return;
76-        }
77-
78:        require_once W3TC_LIB_MINIFY_DIR . '/Minify.php';
79:        require_once W3TC_LIB_MINIFY_DIR . '/HTTP/Encoder.php';
80-
81-        /**
82-         * Fix DOCUMENT_ROOT]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[101]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[98-        /**
99-         * Set logger
100-         */
101:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/Logger.php';
102-        Minify_Logger::setLogger(array(
103-                                      &$this,
104-                                      'error')]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[566]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[563-        $cache_path = sprintf('%s/minify_%s.%s', W3TC_CACHE_FILE_MINIFY_DIR, md5($url), $type);
564-
565-        if (!file_exists($cache_path) || @filemtime($cache_path) < (time() - $lifetime)) {
566:            require_once W3TC_INC_DIR . '/functions/http.php';
567-            w3_download($url, $cache_path);
568-        }
569-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[581]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[578-     * @return Minify_Source
579-     */
580-    function _get_minify_source($file_path, $url) {
581:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/Source.php';
582-
583-        return new Minify_Source(array(
584-                                      'filepath' => $file_path,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[602]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[599-        if (!isset($cache[0])) {
600-            switch ($this->_config->get_string('minify.engine')) {
601-                case 'memcached':
602:                    require_once W3TC_LIB_W3_DIR . '/Cache/Memcached.php';
603:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/Memcache.php';
604-                    @$w3_cache_memcached = & new W3_Cache_Memcached(array(
605-                                                                         'servers' => $this->_config->get_array('minify.memcached.servers'),
606-                                                                         'persistant' => $this->_config->get_boolean('minify.memcached.persistant')]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[612]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[609-                    break;
610-
611-                case 'apc':
612:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/APC.php';
613-                    @$cache[0] = & new Minify_Cache_APC();
614-                    break;
615-
616-                case 'eaccelerator':
617:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/Eaccelerator.php';
618-                    @$cache[0] = & new Minify_Cache_Eaccelerator();
619-                    break;
620-
621-                case 'xcache':
622:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/XCache.php';
623-                    @$cache[0] = & new Minify_Cache_XCache();
624-                    break;
625-
626-                case 'wincache':
627:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/Wincache.php';
628-                    @$cache[0] = & new Minify_Cache_Wincache();
629-                    break;
630-
631-                case 'file':
632-                default:
633:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/File.php';
634-
635-                    @$cache[0] = & new Minify_Cache_File(
636-                        W3TC_CACHE_FILE_MINIFY_DIR,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[651]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[648-                    $engineConfig = array();
649-            }
650-
651:            require_once W3TC_LIB_W3_DIR . '/Cache.php';
652-            @$cache[0] = & W3_Cache::instance($engine, $engineConfig);
653-        }
654-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[694]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[691-     * @return boolean
692-     */
693-    function _check_ua() {
694:        require_once W3TC_LIB_W3_DIR . '/Request.php';
695-
696-        $uas = $this->_config->get_array('pgcache.reject.ua');
697-        $preload = W3_Request::get_boolean('w3tc_preload');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1250]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1247-        }
1248-
1249-        if ($bb_file) {
1250:            require_once $bb_file;
1251-        }
1252-    }
1253-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[37]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[34-        if (!isset($instances[$instance_key])) {
35-            switch ($engine) {
36-                case W3TC_CACHE_MEMCACHED:
37:                    require_once W3TC_LIB_W3_DIR . '/Cache/Memcached.php';
38-                    @$instances[$instance_key] = & new W3_Cache_Memcached($config);
39-                    break;
40-
41-                case W3TC_CACHE_APC:
42:                    require_once W3TC_LIB_W3_DIR . '/Cache/Apc.php';
43-                    @$instances[$instance_key] = & new W3_Cache_Apc();
44-                    break;
45-
46-                case W3TC_CACHE_EACCELERATOR:
47:                    require_once W3TC_LIB_W3_DIR . '/Cache/Eaccelerator.php';
48-                    @$instances[$instance_key] = & new W3_Cache_Eaccelerator();
49-                    break;
50-
51-                case W3TC_CACHE_XCACHE:
52:                    require_once W3TC_LIB_W3_DIR . '/Cache/Xcache.php';
53-                    @$instances[$instance_key] = & new W3_Cache_Xcache();
54-                    break;
55-
56-                case W3TC_CACHE_WINCACHE:
57:                    require_once W3TC_LIB_W3_DIR . '/Cache/Wincache.php';
58-                    @$instances[$instance_key] = & new W3_Cache_Wincache();
59-                    break;
60-
61-                case W3TC_CACHE_FILE:
62:                    require_once W3TC_LIB_W3_DIR . '/Cache/File.php';
63-                    @$instances[$instance_key] = & new W3_Cache_File($config);
64-                    break;
65-
66-                case W3TC_CACHE_FILE_GENERIC:
67:                    require_once W3TC_LIB_W3_DIR . '/Cache/File/Generic.php';
68-                    @$instances[$instance_key] = & new W3_Cache_File_Generic($config);
69-                    break;
70-
71-                default:
72-                    trigger_error('Incorrect cache engine', E_USER_WARNING);
73:                    require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
74-                    @$instances[$instance_key] = & new W3_Cache_Base();
75-                    break;
76-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PageSpeed.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[70-     * @return string
71-     */
72-    function _request($url) {
73:        require_once W3TC_INC_DIR . '/functions/http.php';
74:        require_once W3TC_INC_DIR . '/functions/url.php';
75-
76-        $request_url = w3_url_format(W3TC_PAGESPEED_API_URL, array(
77-            'url' => $url,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[36]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[33-        if (!isset($instances[$instance_key])) {
34-            switch (true) {
35-                case ($engine == W3TC_CDN_FTP):
36:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Ftp.php';
37-                    @$instances[$instance_key] = & new W3_Cdn_Ftp($config);
38-                    break;
39-
40-                case (W3TC_PHP5 && $engine == W3TC_CDN_S3):
41:                    require_once W3TC_LIB_W3_DIR . '/Cdn/S3.php';
42-                    @$instances[$instance_key] = & new W3_Cdn_S3($config);
43-                    break;
44-
45-                case (W3TC_PHP5 && $engine == W3TC_CDN_CF_S3):
46:                    require_once W3TC_LIB_W3_DIR . '/Cdn/S3/Cf/S3.php';
47-                    @$instances[$instance_key] = & new W3_Cdn_S3_Cf_S3($config);
48-                    break;
49-
50-                case (W3TC_PHP5 && $engine == W3TC_CDN_CF_CUSTOM):
51:                    require_once W3TC_LIB_W3_DIR . '/Cdn/S3/Cf/Custom.php';
52-                    @$instances[$instance_key] = & new W3_Cdn_S3_Cf_Custom($config);
53-                    break;
54-
55-                case (W3TC_PHP5 && $engine == W3TC_CDN_RSCF):
56:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Rscf.php';
57-                    @$instances[$instance_key] = & new W3_Cdn_Rscf($config);
58-                    break;
59-
60-                case (W3TC_PHP5 && $engine == W3TC_CDN_AZURE):
61:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Azure.php';
62-                    @$instances[$instance_key] = & new W3_Cdn_Azure($config);
63-                    break;
64-
65-                case ($engine == W3TC_CDN_MIRROR):
66:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror.php';
67-                    @$instances[$instance_key] = & new W3_Cdn_Mirror($config);
68-                    break;
69-
70-                case ($engine == W3TC_CDN_NETDNA):
71:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror/Netdna.php';
72-                    @$instances[$instance_key] = & new W3_Cdn_Mirror_Netdna($config);
73-                    break;
74-
75-                case ($engine == W3TC_CDN_COTENDO):
76:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror/Cotendo.php';
77-                    @$instances[$instance_key] = & new W3_Cdn_Mirror_Cotendo($config);
78-                    break;
79-
80-                case ($engine == W3TC_CDN_EDGECAST):
81:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror/Edgecast.php';
82-                    @$instances[$instance_key] = & new W3_Cdn_Mirror_Edgecast($config);
83-                    break;
84-
85-                default :
86-                    trigger_error('Incorrect CDN engine', E_USER_WARNING);
87:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
88-                    @$instances[$instance_key] = & new W3_Cdn_Base();
89-                    break;
90-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1633]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1630-        }
1631-
1632-        /**
1633:         * Whether MySQL database is at least the required minimum version.
1634-         *
1635-         * @since 2.5.0
1636-         * @uses $wp_version
1637:         * @uses $required_mysql_version
1638-         *
1639-         * @return WP_Error
1640-         */
1641-        function check_database_version() {
1642:                global $wp_version, $required_mysql_version;
1643:                // Make sure the server has the required MySQL version
1644:                //if ( version_compare($this->db_version(), $required_mysql_version, '<') )
1645:                        //return new WP_Error('database_version', sprintf( __( '<strong>ERROR</strong>: WordPress %1$s requires MySQL %2$s or higher' ), $wp_version, $required_mysql_version ));
1646-        }
1647-
1648-        /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1916]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1913-    function read() {
1914-        if (empty($this->fields_map)) {
1915-            if (file_exists($this->filepath)) {
1916:                $this->fields_map = require($this->filepath);
1917-            } else {
1918-                $this->fields_map = array();
1919-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Xcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Xcache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Apc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Apc]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Memcached.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Memcached]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[9-
10-define('W3TC_CACHE_FILE_EXPIRE_MAX', 2592000);
11-
12:require_once W3TC_INC_DIR . '/functions/file.php';
13:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
14-
15-/**
16- * Class W3_Cache_File]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Wincache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Wincache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Eaccelerator.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Eaccelerator]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_LIB_W3_DIR . '/Cache/File.php';
12-
13-/**
14- * Class W3_Cache_File_Generic]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Cleaner/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner.php';
11-
12-/**
13- * Class W3_Cache_File_Cleaner_Generic]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Cleaner.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/File.php';
11-
12-/**
13- * Class W3_Cache_File_Cleaner]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[8-}
9-
10-if (!class_exists('W3_Db_Driver')) {
11:    require_once ABSPATH . 'wp-includes/wp-db.php';
12-
13-    class W3_Db_Driver extends wpdb {
14-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[325]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[322-                    $engineConfig = array();
323-            }
324-        $engineConfig['module'] = 'dbcache';
325:            require_once W3TC_LIB_W3_DIR . '/Cache.php';
326-            @$cache[0] = & W3_Cache::instance($engine, $engineConfig);
327-        }
328-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[737]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[734-        $this->_object_doing_query = $object_doing_query;
735-
736-        # _real_escape is called on that object, 
737:        # which requires those inst. vars
738-        if (isset($object_doing_query->real_escape)) {
739-            $this->real_escape = $object_doing_query->real_escape;
740-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1208]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1205-     * Reads config from request
1206-     */
1207-    function read_request() {
1208:        require_once W3TC_LIB_W3_DIR . '/Request.php';
1209-
1210-        $request = W3_Request::get_request();
1211-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/rule.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_MinifyAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[21]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[18-     * Activate plugin action
19-     */
20-    function activate() {
21:        require_once W3TC_INC_DIR . '/functions/activation.php';
22-
23-        if (!@is_dir(W3TC_CONTENT_MINIFY_DIR) && !@mkdir(W3TC_CONTENT_MINIFY_DIR)) {
24-            w3_writable_error(W3TC_CONTENT_MINIFY_DIR);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[91]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[88-     * @return void
89-     */
90-    function cleanup() {
91:        require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner/Generic.php';
92-
93-        @$w3_cache_file_cleaner_generic = & new W3_Cache_File_Cleaner_Generic(array(
94-            'exclude' => array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_BrowserCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_Minify]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[278]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[275-     * @return array
276-     */
277-    function get_files_js(&$buffer) {
278:        require_once W3TC_INC_DIR . '/functions/extract.php';
279-
280-        $files = w3_extract_js($buffer);
281-        $files = $this->filter_files($files);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[293]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[290-     * @return array
291-     */
292-    function get_files_css(&$buffer) {
293:        require_once W3TC_INC_DIR . '/functions/extract.php';
294-
295-        $files = w3_extract_css($buffer);
296-        $files = $this->filter_files($files);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[462]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[459-        $ignored_comments = $this->_config->get_array('minify.html.comments.ignore');
460-
461-        if (count($ignored_comments)) {
462:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/IgnoredCommentPreserver.php';
463-
464-            @$ignored_comments_preserver =& new Minify_IgnoredCommentPreserver();
465-            $ignored_comments_preserver->setIgnoredComments($ignored_comments);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[482]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[479-
480-            $w3_minifier->init($js_engine);
481-
482:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline.php';
483:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline/JavaScript.php';
484-
485-            $html = Minify_Inline_JavaScript::minify($html, $js_minifier, $js_options);
486-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[500]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[497-
498-            $w3_minifier->init($css_engine);
499-
500:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline.php';
501:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline/CSS.php';
502-
503-            $html = Minify_Inline_CSS::minify($html, $css_minifier, $css_options);
504-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_INC_DIR . '/functions/http.php';
12:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
13-
14-/**
15- * Class W3_Plugin_CdnAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[31]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[28-     * Activation action
29-     */
30-    function activate() {
31:        require_once W3TC_INC_DIR . '/functions/activation.php';
32-
33-        global $wpdb;
34-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[537]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[534-                                         * Check if download or copy was successful
535-                                         */
536-                                        if ($download_result) {
537:                                            require_once W3TC_INC_DIR . '/functions/mime.php';
538-
539-                                            $title = $dst_basename;
540-                                            $guid = ltrim($upload_info['baseurlpath'] . $title, ',');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[560]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[557-                                                /**
558-                                                 * Generate attachment metadata and upload to CDN
559-                                                 */
560:                                                require_once ABSPATH . 'wp-admin/includes/image.php';
561-                                                wp_update_attachment_metadata($id, wp_generate_attachment_metadata($id, $dst));
562-
563-                                                $attachments[$src] = array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_PgCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/rule.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_BrowserCacheAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[9-
10-define('W3TC_PLUGIN_TOTALCACHE_REGEXP_COOKIEDOMAIN', '~define\s*\(\s*[\'"]COOKIE_DOMAIN[\'"]\s*,.*?\)~is');
11-
12:require_once W3TC_INC_DIR . '/functions/rule.php';
13:require_once W3TC_INC_DIR . '/functions/http.php';
14:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
15-
16-/**
17- * Class W3_Plugin_TotalCacheAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[234]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[231-     * @return void
232-     */
233-    function load() {
234:        require_once W3TC_LIB_W3_DIR . '/Request.php';
235-
236-        $this->_page = W3_Request::get_string('page');
237-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[677]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[674-            'cdn_purge_attachment' => 'Unable to purge attachment.',
675-            'pgcache_purge_post' => 'Unable to purge post.',
676-            'pgcache_purge_page' => 'Unable to purge page.',
677:            'enable_cookie_domain' => sprintf('<strong>%swp-config.php</strong> could not be written, please edit config and add:<br /><strong style="color:#f00;">define(\'COOKIE_DOMAIN\', \'%s\');</strong> before <strong style="color:#f00;">require_once(ABSPATH . \'wp-settings.php\');</strong>.', ABSPATH, addslashes($cookie_domain)),
678:            'disable_cookie_domain' => sprintf('<strong>%swp-config.php</strong> could not be written, please edit config and add:<br /><strong style="color:#f00;">define(\'COOKIE_DOMAIN\', false);</strong> before <strong style="color:#f00;">require_once(ABSPATH . \'wp-settings.php\');</strong>.', ABSPATH),
679-            'cloudflare_api_request' => 'Unable to make CloudFlare API request.'
680-        );
681-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[720]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[717-        */
718-        $this->_check_cloudflare_lasterror();
719-
720:        require_once W3TC_LIB_W3_DIR . '/Request.php';
721-
722-        $request_errors = W3_Request::get_string('w3tc_error');
723-        $request_notes = W3_Request::get_string('w3tc_note');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1159]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1156-         * Check PHP version
1157-         */
1158-        if (!W3TC_PHP5 && $this->_config->get_boolean('notes.php_is_old')) {
1159:            $this->_notes[] = sprintf('Unfortunately, <strong>PHP5</strong> is required for full functionality of this plugin; incompatible features are automatically disabled. Please upgrade if possible. %s', $this->button_hide_note('Hide this message', 'php_is_old'));
1160-        }
1161-
1162-        /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1199]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1196-         * Check permalinks
1197-         */
1198-        if ($this->_config->get_boolean('notes.no_permalink_rules') && (($this->_config->get_boolean('pgcache.enabled') && $this->_config->get_string('pgcache.engine') == 'file_generic') || ($this->_config->get_boolean('browsercache.enabled') && $this->_config->get_boolean('browsercache.no404wp'))) && !w3_is_permalink_rules()) {
1199:            $this->_errors[] = sprintf('The required directives for fancy permalinks could not be detected, please confirm they are available: <a href="http://codex.wordpress.org/Using_Permalinks#Creating_and_editing_.28.htaccess.29">Creating and editing</a> %s', $this->button_hide_note('Hide this message', 'no_permalink_rules'));
1200-        }
1201-
1202-        /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1519]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1516-
1517-        $auto = $this->_config->get_boolean('minify.auto');
1518-
1519:        require_once W3TC_LIB_W3_DIR . '/Request.php';
1520-
1521-        $js_theme = W3_Request::get_string('js_theme', $current_theme_key);
1522-        $js_groups = $this->_config->get_array('minify.js.groups');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1639]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1636-     * @return void
1637-     */
1638-    function options_support() {
1639:        require_once W3TC_LIB_W3_DIR . '/Request.php';
1640-
1641-        $request_type = W3_Request::get_string('request_type');
1642-        $payment = W3_Request::get_boolean('payment');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1834]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1831-     */
1832-    function widget_latest_control($widget_id, $form_inputs = array()) {
1833-        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
1834:            require_once W3TC_LIB_W3_DIR . '/Request.php';
1835-
1836-            $this->_config->set('widget.latest.items', W3_Request::get_integer('w3tc_widget_latest_items', 3));
1837-            $this->_config->save();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1849]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1846-     * @return void
1847-     */
1848-    function widget_pagespeed() {
1849:        require_once W3TC_LIB_W3_DIR . '/PageSpeed.php';
1850:        require_once W3TC_LIB_W3_DIR . '/Request.php';
1851-
1852-        $key = $this->_config->get_string('widget.pagespeed.key');
1853-        $force = W3_Request::get_boolean('w3tc_widget_pagespeed_force');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1873]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1870-     */
1871-    function widget_pagespeed_control($widget_id, $form_inputs = array()) {
1872-        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
1873:            require_once W3TC_LIB_W3_DIR . '/Request.php';
1874-
1875-            $this->_config->set('widget.pagespeed.key', W3_Request::get_string('w3tc_widget_pagespeed_key'));
1876-            $this->_config->save();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2092]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2089-     * @return void
2090-     */
2091-    function action_preview_save() {
2092:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2093-
2094-        $preview = W3_Request::get_boolean('preview');
2095-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2155]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2152-     * @return void
2153-     */
2154-    function action_support_payment() {
2155:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2156-
2157-        $request_type = W3_Request::get_string('request_type');
2158-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2178]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2175-    function action_support_form() {
2176-        global $current_user;
2177-
2178:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2179-
2180-        $name = '';
2181-        $email = '';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2236]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2233-     * @return void
2234-     */
2235-    function action_support_request() {
2236:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2237-
2238-        $request_type = W3_Request::get_string('request_type');
2239-        $payment = W3_Request::get_boolean('payment');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2285]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2282-            )));
2283-        }
2284-
2285:        $required = array(
2286-            'bug_report' => 'url,name,email,subject,description',
2287-            'new_feature' => 'url,name,email,subject,description',
2288-            'email_support' => 'url,name,email,subject,description',]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2295]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2292-            'linux_config' => 'url,name,email,subject,description,wp_login,wp_password,ftp_host,ftp_login,ftp_password'
2293-        );
2294-
2295:        if (strstr($required[$request_type], 'url') !== false && $url == '') {
2296-            $this->redirect(array_merge($params, array(
2297-                'w3tc_error' => 'support_request_url'
2298-            )));
2299-        }
2300-
2301:        if (strstr($required[$request_type], 'name') !== false && $name == '') {
2302-            $this->redirect(array_merge($params, array(
2303-                'w3tc_error' => 'support_request_name'
2304-            )));
2305-        }
2306-
2307:        if (strstr($required[$request_type], 'email') !== false && !preg_match('~^[a-z0-9_\-\.]+@[a-z0-9-\.]+\.[a-z]{2,5}$~', $email)) {
2308-            $this->redirect(array_merge($params, array(
2309-                'w3tc_error' => 'support_request_email'
2310-            )));
2311-        }
2312-
2313:        if (strstr($required[$request_type], 'phone') !== false && !preg_match('~^[0-9\-\.\ \(\)\+]+$~', $phone)) {
2314-            $this->redirect(array_merge($params, array(
2315-                'w3tc_error' => 'support_request_phone'
2316-            )));
2317-        }
2318-
2319:        if (strstr($required[$request_type], 'subject') !== false && $subject == '') {
2320-            $this->redirect(array_merge($params, array(
2321-                'w3tc_error' => 'support_request_subject'
2322-            )));
2323-        }
2324-
2325:        if (strstr($required[$request_type], 'description') !== false && $description == '') {
2326-            $this->redirect(array_merge($params, array(
2327-                'w3tc_error' => 'support_request_description'
2328-            )));
2329-        }
2330-
2331:        if (strstr($required[$request_type], 'wp_login') !== false && $wp_login == '') {
2332-            $this->redirect(array_merge($params, array(
2333-                'w3tc_error' => 'support_request_wp_login'
2334-            )));
2335-        }
2336-
2337:        if (strstr($required[$request_type], 'wp_password') !== false && $wp_password == '') {
2338-            $this->redirect(array_merge($params, array(
2339-                'w3tc_error' => 'support_request_wp_password'
2340-            )));
2341-        }
2342-
2343:        if (strstr($required[$request_type], 'ftp_host') !== false && $ftp_host == '') {
2344-            $this->redirect(array_merge($params, array(
2345-                'w3tc_error' => 'support_request_ftp_host'
2346-            )));
2347-        }
2348-
2349:        if (strstr($required[$request_type], 'ftp_login') !== false && $ftp_login == '') {
2350-            $this->redirect(array_merge($params, array(
2351-                'w3tc_error' => 'support_request_ftp_login'
2352-            )));
2353-        }
2354-
2355:        if (strstr($required[$request_type], 'ftp_password') !== false && $ftp_password == '') {
2356-            $this->redirect(array_merge($params, array(
2357-                'w3tc_error' => 'support_request_ftp_password'
2358-            )));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2551]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2548-     * @return void
2549-     */
2550-    function action_cdn_queue() {
2551:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2552-
2553-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnAdmin');
2554-        $cdn_queue_action = W3_Request::get_string('cdn_queue_action');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2614]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2611-     * @return void
2612-     */
2613-    function action_cdn_export_library_process() {
2614:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2615-
2616-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnAdmin');
2617-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2663]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2660-     * @return void
2661-     */
2662-    function action_cdn_import_library_process() {
2663:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2664-
2665-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnAdmin');
2666-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2708]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2705-     * @return void
2706-     */
2707-    function action_cdn_rename_domain_process() {
2708:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2709-
2710-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnAdmin');
2711-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2739]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2736-     * @return void
2737-     */
2738-    function action_cdn_export() {
2739:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2740-
2741-        $w3_plugin_cdn = & w3_instance('W3_Plugin_Cdn');
2742-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2777]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2774-     * @return void
2775-     */
2776-    function action_cdn_export_process() {
2777:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2778-
2779-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnCommon');
2780-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2822]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2819-        $title = 'Content Delivery Network (CDN): Purge Tool';
2820-        $results = array();
2821-
2822:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2823-
2824-        $files = W3_Request::get_array('files');
2825-        $document_root = w3_get_document_root();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2850]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2847-     * @return void
2848-     */
2849-    function action_cdn_purge_attachment() {
2850:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2851-
2852-        $results = array();
2853-        $attachment_id = W3_Request::get_integer('attachment_id');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2874]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2871-     * @return void
2872-     */
2873-    function action_cdn_test() {
2874:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2875:        require_once W3TC_LIB_W3_DIR . '/Cdn.php';
2876-
2877-        $engine = W3_Request::get_string('engine');
2878-        $config = W3_Request::get_array('config');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2920]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2917-     * @return void
2918-     */
2919-    function action_cdn_create_container() {
2920:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2921:        require_once W3TC_LIB_W3_DIR . '/Cdn.php';
2922-
2923-        $engine = W3_Request::get_string('engine');
2924-        $config = W3_Request::get_array('config');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2973]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2970-     * @return void
2971-     */
2972-    function action_cdn_s3_bucket_location() {
2973:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2974-
2975-        $type = W3_Request::get_string('type', 's3');
2976-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2993]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2990-     * @return void
2991-     */
2992-    function action_test_memcached() {
2993:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2994-
2995-        $servers = W3_Request::get_array('servers');
2996-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3020]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3017-     */
3018-    function action_test_minifier() {
3019-        if (W3TC_PHP5) {
3020:            require_once W3TC_LIB_W3_DIR . '/Request.php';
3021-
3022-            $engine = W3_Request::get_string('engine');
3023-            $path_java = W3_Request::get_string('path_java');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3036]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3033-            } else {
3034-                switch ($engine) {
3035-                    case 'yuijs':
3036:                        require_once W3TC_LIB_MINIFY_DIR . '/Minify/YUICompressor.php';
3037-
3038-                        Minify_YUICompressor::setPathJava($path_java);
3039-                        Minify_YUICompressor::setPathJar($path_jar);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3045]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3042-                        break;
3043-
3044-                    case 'yuicss':
3045:                        require_once W3TC_LIB_MINIFY_DIR . '/Minify/YUICompressor.php';
3046-
3047-                        Minify_YUICompressor::setPathJava($path_java);
3048-                        Minify_YUICompressor::setPathJar($path_jar);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3054]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3051-                        break;
3052-
3053-                    case 'ccjs':
3054:                        require_once W3TC_LIB_MINIFY_DIR . '/Minify/ClosureCompiler.php';
3055-
3056-                        Minify_ClosureCompiler::setPathJava($path_java);
3057-                        Minify_ClosureCompiler::setPathJar($path_jar);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3116]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3113-     * @return void
3114-     */
3115-    function action_save_options() {
3116:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3117-
3118-        /**
3119-         * Redirect params]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3478]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3475-                     * Handle CloudFlare changes
3476-                     */
3477-                    if ($this->_config->get_boolean('cloudflare.enabled')) {
3478:                        require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
3479-                        W3_CloudFlare::clear_last_error('');
3480-
3481-                        $cloudflare_seclvl_old = W3_Request::get_string('cloudflare_seclvl_old');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3580]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3577-     * @return void
3578-     */
3579-    function action_pgcache_purge_post() {
3580:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3581-
3582-        $post_id = W3_Request::get_integer('post_id');
3583-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3603]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3600-     * @return void
3601-     */
3602-    function action_pgcache_purge_page() {
3603:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3604-
3605-        $post_id = W3_Request::get_integer('post_id');
3606-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3735]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3732-        $current_theme = get_current_theme();
3733-        $current_theme_key = array_search($current_theme, $themes);
3734-
3735:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3736-
3737-        $theme_key = W3_Request::get_string('theme_key', $current_theme_key);
3738-        $theme_name = (isset($themes[$theme_key]) ? $themes[$theme_key] : $current_theme);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3804]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3801-            'fpurge_ts'
3802-        );
3803-
3804:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3805-
3806-        $email = W3_Request::get_string('email');
3807-        $key = W3_Request::get_string('key');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3827]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3824-                'zone' => $zone
3825-            );
3826-
3827:            require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
3828-            @$w3_cloudflare =& new W3_CloudFlare($config);
3829-
3830-            @set_time_limit($this->_config->get_integer('timelimit.cloudflare_api_request'));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3879]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3876-     * @return void
3877-     */
3878-    function action_pagespeed_results() {
3879:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3880:        require_once W3TC_LIB_W3_DIR . '/PageSpeed.php';
3881-
3882-        $force = W3_Request::get_boolean('force');
3883-        $title = 'Google Page Speed';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4506]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[4503-     * @return void
4504-     */
4505-    function flush_dbcache() {
4506:        require_once W3TC_LIB_W3_DIR . '/Db.php';
4507-        @$w3_db = & W3_Db::instance();
4508-
4509-        $w3_db->flush_cache();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5117]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[5114-     * @return array
5115-     */
5116-    function get_recommendations_js(&$content) {
5117:        require_once W3TC_INC_DIR . '/functions/extract.php';
5118-
5119-        $files = w3_extract_js($content);
5120-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5134]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[5131-     * @return array
5132-     */
5133-    function get_recommendations_css(&$content) {
5134:        require_once W3TC_INC_DIR . '/functions/extract.php';
5135-
5136-        $files = w3_extract_css($content);
5137-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5321]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[5318-        $key = md5(implode('', $servers));
5319-
5320-        if (!isset($results[$key])) {
5321:            require_once W3TC_LIB_W3_DIR . '/Cache/Memcached.php';
5322-
5323-            @$memcached = & new W3_Cache_Memcached(array(
5324-                'servers' => $servers,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5560]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[5557-        $support = $this->_config->get_string('common.support');
5558-        $matches = null;
5559-        if ($support != '' && preg_match('~^link_category_(\d+)$~', $support, $matches)) {
5560:            require_once ABSPATH . 'wp-admin/includes/bookmark.php';
5561-
5562-            wp_insert_link(array(
5563-                'link_url' => W3TC_LINK_URL,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5587]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[5584-            }
5585-        }
5586-        if ($link_id) {
5587:            require_once ABSPATH . 'wp-admin/includes/bookmark.php';
5588-            wp_delete_link($link_id);
5589-        }
5590-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5723]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[5720-     * @return void
5721-     */
5722-    function redirect($params = array(), $check_referrer = false) {
5723:        require_once W3TC_LIB_W3_DIR . '/Request.php';
5724-
5725-        $url = W3_Request::get_string('redirect');
5726-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5826]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[5823-            'zone' => $this->_config->get_string('cloudflare.zone')
5824-        );
5825-
5826:        require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
5827-        @$w3_cloudflare =& new W3_CloudFlare($config);
5828-
5829-        $response = $w3_cloudflare->api_request('stats');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_CdnCommon]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[50]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[47-     * @return array
48-     */
49-    function get_files_for_upload($file) {
50:        require_once W3TC_INC_DIR . '/functions/http.php';
51-
52-        $files = array();
53-        $upload_info = w3_upload_info();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[248]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[245-     * @return string
246-     */
247-    function normalize_attachment_file($file) {
248:        require_once W3TC_INC_DIR . '/functions/http.php';
249-
250-        $upload_info = w3_upload_info();
251-        if ($upload_info) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[391]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[388-                'debug' => $this->_config->get_boolean('cdn.debug')
389-            ));
390-
391:            require_once W3TC_LIB_W3_DIR . '/Cdn.php';
392-            @$cdn[0] = & W3_Cdn::instance($engine, $engine_config);
393-
394-            /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/rule.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_PgCacheAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[21]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[18-     * Activate plugin action
19-     */
20-    function activate() {
21:        require_once W3TC_INC_DIR . '/functions/activation.php';
22-
23-        if ($this->_config->get_boolean('pgcache.enabled') && $this->_config->get_string('pgcache.engine') == 'file_generic') {
24-            /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[51]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[48-            if ((!defined('WP_CACHE') || !WP_CACHE) && !$this->enable_wp_cache()) {
49-                $reactivate_url = wp_nonce_url('plugins.php?action=activate&plugin=' . W3TC_FILE, 'activate-plugin_' . W3TC_FILE);
50-                $reactivate_button = sprintf('<input type="button" value="re-activate plugin" onclick="top.location.href = \'%s\'" />', addslashes($reactivate_url));
51:                $error = sprintf('<strong>%swp-config.php</strong> could not be written, please edit config and add:<br /><strong style="color:#f00;">define(\'WP_CACHE\', true);</strong> before <strong style="color:#f00;">require_once(ABSPATH . \'wp-settings.php\');</strong><br />then %s.', ABSPATH, $reactivate_button);
52-
53-                w3_activate_error($error);
54-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[134]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[131-
132-        switch ($engine) {
133-            case 'file':
134:                require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner.php';
135-
136-                @$w3_cache_file_cleaner = & new W3_Cache_File_Cleaner(array(
137-                    'cache_dir' => W3TC_CACHE_FILE_PGCACHE_DIR,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[145]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[142-                break;
143-
144-            case 'file_generic':
145:                require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner/Generic.php';
146-
147-                @$w3_cache_file_cleaner_generic = & new W3_Cache_File_Cleaner_Generic(array(
148-                    'exclude' => array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[210]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[207-        /**
208-         * Make HTTP requests and prime cache
209-         */
210:        require_once W3TC_INC_DIR . '/functions/http.php';
211:        require_once W3TC_INC_DIR . '/functions/url.php';
212-
213-        foreach ($queue as $url) {
214-            $url = w3_url_format($url, array('w3tc_preload' => 1));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[227]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[224-     * @return array
225-     */
226-    function parse_sitemap($url) {
227:        require_once W3TC_INC_DIR . '/functions/http.php';
228-
229-        $urls = array();
230-        $response = w3_http_get($url);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_Cdn]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[251]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[248-                $domain_url_regexp = w3_get_domain_url_regexp();
249-
250-                if ($this->_config->get_boolean('cdn.uploads.enable')) {
251:                    require_once W3TC_INC_DIR . '/functions/http.php';
252-
253-                    $upload_info = w3_upload_info();
254-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[399]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[396-        $files = array();
397-
398-        if (W3TC_PHP5 && $this->_config->get_boolean('minify.rewrite') && (!$this->_config->get_boolean('minify.auto') || w3_is_cdn_mirror($this->_config->get_string('cdn.engine')))) {
399:            require_once W3TC_INC_DIR . '/functions/http.php';
400-
401-            $minify = & w3_instance('W3_Plugin_Minify');
402-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/DbCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_DbCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/DbCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[94-     * Activate plugin action (called by W3_PluginProxy)
95-     */
96-    function activate() {
97:        require_once W3TC_INC_DIR . '/functions/activation.php';
98-        
99-        if (!$this->locked() && !@copy(W3TC_INSTALL_FILE_DB, W3TC_ADDIN_FILE_DB)) {
100-            w3_writable_error(W3TC_ADDIN_FILE_DB);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/DbCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[145]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[142-     * @return void
143-     */
144-    function cleanup() {
145:        require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner.php';
146-        
147-        @$w3_cache_file_cleaner = & new W3_Cache_File_Cleaner(array(
148-            'cache_dir' => W3TC_CACHE_FILE_DBCACHE_DIR,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/DbCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[179]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[176-        static $flushed = false;
177-
178-        if (!$flushed) {
179:            require_once W3TC_LIB_W3_DIR . '/Db.php';
180-            @$w3_db = & W3_Db::instance();
181-
182-            $w3_db->flush_cache();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/file.php';
11-
12-/**
13- * Class W3_Plugin_CdnEnabled]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[94-     * Activation action
95-     */
96-    function activate() {
97:        require_once W3TC_INC_DIR . '/functions/activation.php';
98-
99-        global $wpdb;
100-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1039]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1036-                                             * Download file
1037-                                             */
1038-                                            if ($import_external) {
1039:                                                require_once W3TC_INC_DIR . '/http.php';
1040-
1041-                                                $download_result = w3_download($src, $dst);
1042-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1070]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1067-                                         * Check if download or copy was successful
1068-                                         */
1069-                                        if ($download_result) {
1070:                                            require_once W3TC_INC_DIR . '/functions/mime.php';
1071-
1072-                                            $title = $dst_basename;
1073-                                            $guid = ltrim($upload_info['baseurlpath'] . $title, ',');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1093]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1090-                                                /**
1091-                                                 * Generate attachment metadata and upload to CDN
1092-                                                 */
1093:                                                require_once ABSPATH . 'wp-admin/includes/image.php';
1094-                                                wp_update_attachment_metadata($id, wp_generate_attachment_metadata($id, $dst));
1095-
1096-                                                $attachments[$src] = array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1369]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1366-        $files = array();
1367-
1368-        if (W3TC_PHP5 && $this->_config->get_boolean('minify.rewrite') && (!$this->_config->get_boolean('minify.auto') || w3_is_cdn_mirror($this->_config->get_string('cdn.engine')))) {
1369:            require_once W3TC_INC_DIR . '/http.php';
1370-
1371-            $minify = & w3_instance('/Plugin/MinifyEnabled.php');
1372-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1736]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1733-                'debug' => $this->_config->get_boolean('cdn.debug')
1734-            ));
1735-
1736:            require_once W3TC_LIB_W3_DIR . '/Cdn.php';
1737-            $cdn[0] = & W3_Cdn::instance($engine, $engine_config);
1738-
1739-            /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11:require_once W3TC_LIB_W3_DIR . '/PluginProxy.php';
12-
13-/**
14- * Class W3_Plugin_TotalCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[75]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[72-                'cloudflare_set_comment_status'
73-            ), 1, 2);
74-
75:            require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
76-            @$w3_cloudflare =& new W3_CloudFlare();
77-
78-            $w3_cloudflare->fix_remote_addr();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[176]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[173-        /**
174-         * Check for rewrite test request
175-         */
176:        require_once W3TC_LIB_W3_DIR . '/Request.php';
177-
178-        $rewrite_test = W3_Request::get_boolean('w3tc_rewrite_test');
179-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[314]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[311-     * @return string
312-     */
313-    function template_preview($template) {
314:        require_once W3TC_LIB_W3_DIR . '/Request.php';
315-        $theme_name = W3_Request::get_string('w3tc_theme');
316-
317-        $theme = get_theme($theme_name);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[333]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[330-     * @return string
331-     */
332-    function stylesheet_preview($stylesheet) {
333:        require_once W3TC_LIB_W3_DIR . '/Request.php';
334-        $theme_name = W3_Request::get_string('w3tc_theme');
335-
336-        $theme = get_theme($theme_name);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[557]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[554-            $key = $this->_config->get_string('cloudflare.key');
555-
556-            if ($email && $key) {
557:                require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
558-                @$w3_cloudflare =& new W3_CloudFlare(array(
559-                    'email' => $email,
560-                    'key' => $key]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheActivation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_TotalCacheActivation]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheActivation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[23]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[20-     * @return void
21-     */
22-    function activate() {
23:        require_once W3TC_INC_DIR . '/functions/activation.php';
24-
25-        /**
26-         * Disable buggy sitewide activation in WPMU and WP 3.0]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_ObjectCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[94-     * Activate plugin action (called by W3_PluginProxy)
95-     */
96-    function activate() {
97:        require_once W3TC_INC_DIR . '/functions/activation.php';
98-
99-        if (!$this->locked() && !@copy(W3TC_INSTALL_FILE_OBJECT_CACHE, W3TC_ADDIN_FILE_OBJECT_CACHE)) {
100-            w3_writable_error(W3TC_ADDIN_FILE_OBJECT_CACHE);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[145]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[142-     * @return void
143-     */
144-    function cleanup() {
145:        require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner.php';
146-
147-        @$w3_cache_file_cleaner = & new W3_Cache_File_Cleaner(array(
148-            'cache_dir' => W3TC_CACHE_FILE_OBJECTCACHE_DIR,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_Minify]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[89]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[86-     * Activate plugin action
87-     */
88-    function activate() {
89:        require_once W3TC_INC_DIR . '/functions/activation.php';
90-
91-        if (!@is_dir(W3TC_CONTENT_MINIFY_DIR) && !@mkdir(W3TC_CONTENT_MINIFY_DIR)) {
92-            w3_writable_error(W3TC_CONTENT_MINIFY_DIR);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[159]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[156-     * @return void
157-     */
158-    function cleanup() {
159:        require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner/Generic.php';
160-
161-        $w3_cache_file_cleaner_generic = & new W3_Cache_File_Cleaner_Generic(array(
162-            'exclude' => array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[336]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[333-     * @return array
334-     */
335-    function get_files_js(&$buffer) {
336:        require_once W3TC_INC_DIR . '/functions/extract.php';
337-
338-        $files = w3_extract_js($buffer);
339-        $files = $this->filter_files($files);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[351]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[348-     * @return array
349-     */
350-    function get_files_css(&$buffer) {
351:        require_once W3TC_INC_DIR . '/functions/extract.php';
352-
353-        $files = w3_extract_css($buffer);
354-        $files = $this->filter_files($files);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[520]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[517-        $ignored_comments = $this->_config->get_array('minify.html.comments.ignore');
518-
519-        if (count($ignored_comments)) {
520:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/IgnoredCommentPreserver.php';
521-
522-            $ignored_comments_preserver =& new Minify_IgnoredCommentPreserver();
523-            $ignored_comments_preserver->setIgnoredComments($ignored_comments);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[540]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[537-
538-            $w3_minifier->init($js_engine);
539-
540:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline.php';
541:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline/JavaScript.php';
542-
543-            $html = Minify_Inline_JavaScript::minify($html, $js_minifier, $js_options);
544-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[558]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[555-
556-            $w3_minifier->init($css_engine);
557-
558:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline.php';
559:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline/CSS.php';
560-
561-            $html = Minify_Inline_CSS::minify($html, $css_minifier, $css_options);
562-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PluginProxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_PluginProxy]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[343]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[340-     * @return array
341-     */
342-    function _get_headers($file) {
343:        require_once W3TC_INC_DIR . '/functions/mime.php';
344-
345-        $mime_type = w3_get_mime_type($file);
346-        $last_modified = time();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/EdgeCast.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[17]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[14-define('W3TC_CDN_EDGECAST_MEDIATYPE_HTTP_SMALL_OBJECT', 8);
15-define('W3TC_CDN_EDGECAST_MEDIATYPE_APPLICATION_DELIVERY_NETWORK', 14);
16-
17:require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror.php';
18-
19-/**
20- * Class W3_Cdn_Mirror_Edgecast]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Netdna.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[10-define('W3TC_CDN_MIRROR_NETDNA_TZ', 'America/Los_Angeles');
11-define('W3TC_CDN_MIRROR_NETDNA_URL', 'http://api.netdna.com/xmlrpc/cache');
12-
13:require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror.php';
14-
15-/**
16- * Class W3_Cdn_Mirror_Netdna]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Netdna.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[69]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[66-        }
67-
68-        if (!class_exists('IXR_Client')) {
69:            require_once (ABSPATH . WPINC . '/class-IXR.php');
70-        }
71-
72-        if (function_exists('date_default_timezone_set')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[11-define('W3TC_CDN_MIRROR_COTENDO_ENDPOINT', 'http://api.cotendo.net/cws?ver=1.0');
12-define('W3TC_CDN_MIRROR_COTENDO_NAMESPACE', 'http://api.cotendo.net/');
13-
14:require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror.php';
15-
16-/**
17- * Class W3_Cdn_Mirror_Cotendo]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[70]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[67-            return false;
68-        }
69-
70:        require_once W3TC_LIB_NUSOAP_DIR . '/nusoap.php';
71-
72-        $client = new nusoap_client(
73-            W3TC_CDN_MIRROR_COTENDO_WSDL,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Rscf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
11:require_once W3TC_LIB_CF_DIR . '/cloudfiles.php';
12-
13-/**
14- * Class W3_Cdn_Rscf]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[9-
10-define('W3TC_CDN_FTP_CONNECT_TIMEOUT', 30);
11-
12:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
13-
14-/**
15- * Class W3_Cdn_Ftp]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
11-
12-/**
13- * Class W3_Cdn_Azure]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[75]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[72-
73-        set_include_path(get_include_path() . PATH_SEPARATOR . W3TC_LIB_DIR);
74-
75:        require_once 'Microsoft/WindowsAzure/Storage/Blob.php';
76-
77-        $this->_client = new Microsoft_WindowsAzure_Storage_Blob(
78-            Microsoft_WindowsAzure_Storage::URL_CLOUD_BLOB,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
11-
12-/**
13- * Class W3_Cdn_Mirror]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[8-}
9-
10-if (!class_exists('S3')) {
11:    require_once W3TC_LIB_DIR . '/S3.php';
12-}
13-
14:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
15-
16-/**
17- * Class W3_Cdn_S3]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3/Cf/Custom.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/S3/Cf.php';
11-
12-class W3_Cdn_S3_Cf_Custom extends W3_Cdn_S3_Cf {
13-    var $type = W3TC_CDN_CF_TYPE_CUSTOM;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3/Cf/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/S3/Cf.php';
11-
12-class W3_Cdn_S3_Cf_S3 extends W3_Cdn_S3_Cf {
13-    var $type = W3TC_CDN_CF_TYPE_S3;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3/Cf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[10-define('W3TC_CDN_CF_TYPE_S3', 's3');
11-define('W3TC_CDN_CF_TYPE_CUSTOM', 'custom');
12-
13:require_once W3TC_LIB_W3_DIR . '/Cdn/S3.php';
14-
15-/**
16- * Class W3_Cdn_S3_Cf]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCacheFlush.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[4- * W3 PgCache flushing
5- */
6-
7:require_once W3TC_LIB_W3_DIR . '/PgCache.php';
8-
9-/**
10- * Class W3_PgCacheFlush]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/CloudFlare.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[62-     * @return array
63-     */
64-    function api_request($action, $value = null) {
65:        require_once W3TC_INC_DIR . '/functions/http.php';
66-
67-        $url = sprintf('%s?email=%s&tkn=%s&z=%s&a=%s', W3TC_CLOUDFLARE_API_URL, urlencode($this->_config['email']), urlencode($this->_config['key']), urlencode($this->_config['zone']), urlencode($action));
68-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/CloudFlare.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[98]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[95-     * @return array
96-     */
97-    function external_event($type, $value) {
98:        require_once W3TC_INC_DIR . '/functions/http.php';
99-
100-        $url = sprintf('%s?u=%s&tkn=%s&evnt_t=%s&evnt_v=%s', W3TC_CLOUDFLARE_EXTERNAL_EVENT_URL, urlencode($this->_config['email']), urlencode($this->_config['key']), urlencode($type), urlencode($value));
101-        $response = w3_http_get($url);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minifier.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[130]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[127-    function init($engine) {
128-        switch ($engine) {
129-            case 'js':
130:                require_once W3TC_LIB_MINIFY_DIR . '/JSMin.php';
131-                break;
132-
133-            case 'css':
134:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS.php';
135-                break;
136-
137-            case 'yuijs':
138:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/YUICompressor.php';
139-
140-                Minify_YUICompressor::setPathJava($this->_config->get_string('minify.yuijs.path.java'));
141-                Minify_YUICompressor::setPathJar($this->_config->get_string('minify.yuijs.path.jar'));
142-                break;
143-
144-            case 'yuicss':
145:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/YUICompressor.php';
146-
147-                Minify_YUICompressor::setPathJava($this->_config->get_string('minify.yuicss.path.java'));
148-                Minify_YUICompressor::setPathJar($this->_config->get_string('minify.yuicss.path.jar'));
149-                break;
150-
151-            case 'ccjs':
152:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/ClosureCompiler.php';
153-
154-                Minify_ClosureCompiler::setPathJava($this->_config->get_string('minify.ccjs.path.java'));
155-                Minify_ClosureCompiler::setPathJar($this->_config->get_string('minify.ccjs.path.jar'));
156-                break;
157-
158-            case 'csstidy':
159:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSSTidy.php';
160-                break;
161-
162-            case 'html':
163-            case 'htmlxml':
164:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/HTML.php';
165-                break;
166-
167-            case 'htmltidy':
168-            case 'htmltidyxml':
169:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/HTMLTidy.php';
170-                break;
171-        }
172-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[486]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[483-                    $engineConfig = array();
484-            }
485-
486:            require_once W3TC_LIB_W3_DIR . '/Cache.php';
487-            @$cache[0] = & W3_Cache::instance($engine, $engineConfig);
488-        }
489-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[94-        $schemeSpecific = isset($uri[1]) === true ? $uri[1] : '';
95-
96-        if (strlen($scheme) === 0) {
97:            require_once 'Microsoft/Uri/Exception.php';
98-            throw new Microsoft_Uri_Exception('An empty string was supplied for the scheme');
99-        }
100-
101-        // Security check: $scheme is used to load a class file, so only alphanumerics are allowed.
102-        if (ctype_alnum($scheme) === false) {
103:            require_once 'Microsoft/Uri/Exception.php';
104-            throw new Microsoft_Uri_Exception('Illegal scheme supplied, only alphanumeric characters are permitted');
105-        }
106-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[121]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[118-            case 'mailto':
119-                // TODO
120-            default:
121:                require_once 'Microsoft/Uri/Exception.php';
122-                throw new Microsoft_Uri_Exception("Scheme \"$scheme\" is not supported");
123-                break;
124-        }
125-
126-        if (!class_exists($className)) {
127:            require_once str_replace('_', '/', $className) . '.php';
128-        }
129-        $schemeHandler = new $className($scheme, $schemeSpecific);
130-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[26-/**
27- * @see Microsoft_Uri
28- */
29:require_once "Microsoft/Uri.php";
30-/**
31- * @see Microsoft_Http_Cookie
32- */
33:require_once "Microsoft/Http/Cookie.php";
34-/**
35- * @see Microsoft_Http_Response
36- */
37:require_once "Microsoft/Http/Response.php";
38-
39-/**
40- * A Microsoft_Http_CookieJar object is designed to contain and maintain HTTP cookies, and should]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[137]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[134-            $this->cookies[$domain][$path][$cookie->getName()] = $cookie;
135-            $this->_rawCookies[] = $cookie;
136-        } else {
137:            require_once 'Microsoft/Http/Exception.php';
138-            throw new Microsoft_Http_Exception('Supplient argument is not a valid cookie string or object');
139-        }
140-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[152]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[149-    public function addCookiesFromResponse($response, $ref_uri)
150-    {
151-        if (! $response instanceof Microsoft_Http_Response) {
152:            require_once 'Microsoft/Http/Exception.php';
153-            throw new Microsoft_Http_Exception('$response is expected to be a Response object, ' .
154-                gettype($response) . ' was passed');
155-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[196]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[193-    {
194-        if (is_string($uri)) $uri = Microsoft_Uri::factory($uri);
195-        if (! $uri instanceof Microsoft_Uri_Http) {
196:            require_once 'Microsoft/Http/Exception.php';
197-            throw new Microsoft_Http_Exception("Invalid URI string or object passed");
198-        }
199-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[232]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[229-        }
230-
231-        if (! $uri instanceof Microsoft_Uri_Http) {
232:            require_once 'Microsoft/Http/Exception.php';
233-            throw new Microsoft_Http_Exception('Invalid URI specified');
234-        }
235-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[255]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[252-                    break;
253-
254-                default:
255:                    require_once 'Microsoft/Http/Exception.php';
256-                    throw new Microsoft_Http_Exception("Invalid value passed for \$ret_as: {$ret_as}");
257-                    break;
258-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri_Http
29- */
30:require_once 'Microsoft/Uri/Http.php';
31-
32-
33-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[109]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[106-    public function __construct($name, $value, $domain, $expires = null, $path = null, $secure = false)
107-    {
108-        if (preg_match("/[=,; \t\r\n\013\014]/", $name)) {
109:            require_once 'Microsoft/Http/Exception.php';
110-            throw new Microsoft_Http_Exception("Cookie name cannot contain these characters: =,; \\t\\r\\n\\013\\014 ({$name})");
111-        }
112-
113-        if (! $this->name = (string) $name) {
114:            require_once 'Microsoft/Http/Exception.php';
115-            throw new Microsoft_Http_Exception('Cookies must have a name');
116-        }
117-
118-        if (! $this->domain = (string) $domain) {
119:            require_once 'Microsoft/Http/Exception.php';
120-            throw new Microsoft_Http_Exception('Cookies must have a domain');
121-        }
122-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[233]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[230-
231-        // Make sure we have a valid Microsoft_Uri_Http object
232-        if (! ($uri->valid() && ($uri->getScheme() == 'http' || $uri->getScheme() =='https'))) {
233:            require_once 'Microsoft/Http/Exception.php';
234-            throw new Microsoft_Http_Exception('Passed URI is not a valid HTTP or HTTPS URI');
235-        }
236-
237:        // Check that the cookie is secure (if required) and not expired
238-        if ($this->secure && $uri->getScheme() != 'https') return false;
239-        if ($this->isExpired($now)) return false;
240-        if ($this->isSessionCookie() && ! $matchSessionCookies) return false;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[326]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[323-                             *
324-                             * @see Microsoft_Date
325-                             */
326:                            require_once 'Microsoft/Date.php';
327-
328-                            $expireDate = new Microsoft_Date($v);
329-                            $expires = $expireDate->getTimestamp();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[367]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[364-    public static function matchCookieDomain($cookieDomain, $host)
365-    {
366-        if (! $cookieDomain) {
367:            require_once 'Microsoft/Http/Exception.php';
368-            throw new Microsoft_Http_Exception("\$cookieDomain is expected to be a cookie domain");
369-        }
370-
371-        if (! $host) {
372:            require_once 'Microsoft/Http/Exception.php';
373-            throw new Microsoft_Http_Exception("\$host is expected to be a host name");
374-        }
375-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[400]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[397-    public static function matchCookiePath($cookiePath, $path)
398-    {
399-        if (! $cookiePath) {
400:            require_once 'Microsoft/Http/Exception.php';
401-            throw new Microsoft_Http_Exception("\$cookiePath is expected to be a cookie path");
402-        }
403-
404-        if (! $path) {
405:            require_once 'Microsoft/Http/Exception.php';
406-            throw new Microsoft_Http_Exception("\$path is expected to be a host name");
407-        }
408-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_Exception
41- */
42:require_once 'Microsoft/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri
29- */
30:require_once 'Microsoft/Uri.php';
31-
32-
33-/**
34- * @see Microsoft_Http_Client_Adapter_Interface
35- */
36:require_once 'Microsoft/Http/Client/Adapter/Interface.php';
37-
38-
39-/**
40- * @see Microsoft_Http_Response
41- */
42:require_once 'Microsoft/Http/Response.php';
43-
44-/**
45- * @see Microsoft_Http_Response_Stream
46- */
47:require_once 'Microsoft/Http/Response/Stream.php';
48-
49-/**
50- * Microsoft_Http_Client is an implemetation of an HTTP client in PHP. The client]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[270]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[267-
268-        if (!$uri instanceof Microsoft_Uri_Http) {
269-            /** @see Microsoft_Http_Client_Exception */
270:            require_once 'Microsoft/Http/Client/Exception.php';
271-            throw new Microsoft_Http_Client_Exception('Passed parameter is not a valid HTTP URI.');
272-        }
273-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[318]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[315-
316-        } elseif (! is_array($config)) {
317-            /** @see Microsoft_Http_Client_Exception */
318:            require_once 'Microsoft/Http/Client/Exception.php';
319-            throw new Microsoft_Http_Client_Exception('Array expected, got ' . gettype($config));
320-        }
321-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[349]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[346-    {
347-        if (! preg_match('/^[^\x00-\x1f\x7f-\xff\(\)<>@,;:\\\\"\/\[\]\?={}\s]+$/', $method)) {
348-            /** @see Microsoft_Http_Client_Exception */
349:            require_once 'Microsoft/Http/Client/Exception.php';
350-            throw new Microsoft_Http_Client_Exception("'{$method}' is not a valid HTTP request method.");
351-        }
352-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[401]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[398-            // Make sure the name is valid if we are in strict mode
399-            if ($this->config['strict'] && (! preg_match('/^[a-zA-Z0-9-]+$/', $name))) {
400-                /** @see Microsoft_Http_Client_Exception */
401:                require_once 'Microsoft/Http/Client/Exception.php';
402-                throw new Microsoft_Http_Client_Exception("{$name} is not a valid HTTP header name");
403-            }
404-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[558]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[555-            // Check we got a proper authentication type
556-            if (! defined('self::AUTH_' . strtoupper($type))) {
557-                /** @see Microsoft_Http_Client_Exception */
558:                require_once 'Microsoft/Http/Client/Exception.php';
559-                throw new Microsoft_Http_Client_Exception("Invalid or not supported authentication type: '$type'");
560-            }
561-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[585]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[582-    public function setCookieJar($cookiejar = true)
583-    {
584-        if (! class_exists('Microsoft_Http_CookieJar')) {
585:            require_once 'Microsoft/Http/CookieJar.php';
586-        }
587-
588-        if ($cookiejar instanceof Microsoft_Http_CookieJar) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[596]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[593-            $this->cookiejar = null;
594-        } else {
595-            /** @see Microsoft_Http_Client_Exception */
596:            require_once 'Microsoft/Http/Client/Exception.php';
597-            throw new Microsoft_Http_Client_Exception('Invalid parameter type passed as CookieJar');
598-        }
599-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[625]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[622-    public function setCookie($cookie, $value = null)
623-    {
624-        if (! class_exists('Microsoft_Http_Cookie')) {
625:            require_once 'Microsoft/Http/Cookie.php';
626-        }
627-
628-        if (is_array($cookie)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[660]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[657-
658-            if (preg_match("/[=,; \t\r\n\013\014]/", $cookie)) {
659-                /** @see Microsoft_Http_Client_Exception */
660:                require_once 'Microsoft/Http/Client/Exception.php';
661-                throw new Microsoft_Http_Client_Exception("Cookie name cannot contain these characters: =,; \t\r\n\013\014 ({$cookie})");
662-            }
663-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[700]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[697-        if ($data === null) {
698-            if (($data = @file_get_contents($filename)) === false) {
699-                /** @see Microsoft_Http_Client_Exception */
700:                require_once 'Microsoft/Http/Client/Exception.php';
701-                throw new Microsoft_Http_Client_Exception("Unable to read file '{$filename}' for upload");
702-            }
703-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[837]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[834-    {
835-        if (is_string($adapter)) {
836-            if (!class_exists($adapter)) {
837:            	@require_once( str_replace('_', '/', $adapter) . '.php' );
838-            }
839-
840-            $adapter = new $adapter;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[845]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[842-
843-        if (! $adapter instanceof Microsoft_Http_Client_Adapter_Interface) {
844-            /** @see Microsoft_Http_Client_Exception */
845:            require_once 'Microsoft/Http/Client/Exception.php';
846-            throw new Microsoft_Http_Client_Exception('Passed adapter is not a HTTP connection adapter');
847-        }
848-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[903]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[900-        $fp = fopen($this->_stream_name, "w+b");
901-        if(!$fp) {
902-                $this->close();
903:                require_once 'Microsoft/Http/Client/Exception.php';
904-                throw new Microsoft_Http_Client_Exception("Could not open temp file $name");
905-
906-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[921]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[918-    {
919-        if (! $this->uri instanceof Microsoft_Uri_Http) {
920-            /** @see Microsoft_Http_Client_Exception */
921:            require_once 'Microsoft/Http/Client/Exception.php';
922-            throw new Microsoft_Http_Client_Exception('No valid URI has been passed to the client');
923-        }
924-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[956]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[953-            // check that adapter supports streaming before using it
954-            if(is_resource($body) && !($this->adapter instanceof Microsoft_Http_Client_Adapter_Stream)) {
955-                /** @see Microsoft_Http_Client_Exception */
956:                require_once 'Microsoft/Http/Client/Exception.php';
957-                throw new Microsoft_Http_Client_Exception('Adapter does not support streaming');
958-            }
959-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[970]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[967-                    $this->adapter->setOutputStream($stream);
968-                } else {
969-                    /** @see Microsoft_Http_Client_Exception */
970:                    require_once 'Microsoft/Http/Client/Exception.php';
971-                    throw new Microsoft_Http_Client_Exception('Adapter does not support streaming');
972-                }
973-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[981]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[978-            $response = $this->adapter->read();
979-            if (! $response) {
980-                /** @see Microsoft_Http_Client_Exception */
981:                require_once 'Microsoft/Http/Client/Exception.php';
982-                throw new Microsoft_Http_Client_Exception('Unable to read response, or response is empty');
983-            }
984-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1217]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1214-                    }
1215-
1216-                    /** @see Microsoft_Http_Client_Exception */
1217:                    require_once 'Microsoft/Http/Client/Exception.php';
1218-                    throw new Microsoft_Http_Client_Exception("Cannot handle content type '{$this->enctype}' automatically." .
1219-                        " Please use Microsoft_Http_Client::setRawData to send this kind of content.");
1220-                    break;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1378]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1375-                // In basic authentication, the user name cannot contain ":"
1376-                if (strpos($user, ':') !== false) {
1377-                    /** @see Microsoft_Http_Client_Exception */
1378:                    require_once 'Microsoft/Http/Client/Exception.php';
1379-                    throw new Microsoft_Http_Client_Exception("The user name cannot contain ':' in 'Basic' HTTP authentication");
1380-                }
1381-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1393]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1390-
1391-            default:
1392-                /** @see Microsoft_Http_Client_Exception */
1393:                require_once 'Microsoft/Http/Client/Exception.php';
1394-                throw new Microsoft_Http_Client_Exception("Not a supported HTTP authentication type: '$type'");
1395-        }
1396-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[155]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[152-    {
153-        // Make sure the response code is valid and set it
154-        if (self::responseCodeAsText($code) === null) {
155:            require_once 'Microsoft/Http/Exception.php';
156-            throw new Microsoft_Http_Exception("{$code} is not a valid HTTP response code");
157-        }
158-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[163]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[160-
161-        // Make sure we got valid headers and set them
162-        if (! is_array($headers)) {
163:            require_once 'Microsoft/Http/Exception.php';
164-            throw new Microsoft_Http_Exception('No valid headers were passed');
165-    }
166-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[179]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[176-
177-        // Set the HTTP version
178-        if (! preg_match('|^\d\.\d$|', $version)) {
179:            require_once 'Microsoft/Http/Exception.php';
180-            throw new Microsoft_Http_Exception("Invalid HTTP response version: $version");
181-        }
182-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[575]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[572-
573-        while (trim($body)) {
574-            if (! preg_match("/^([\da-fA-F]+)[^\r\n]*\r\n/sm", $body, $m)) {
575:                require_once 'Microsoft/Http/Exception.php';
576-                throw new Microsoft_Http_Exception("Error parsing body - doesn't seem to be a chunked message");
577-            }
578-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[595]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[592-    /**
593-     * Decode a gzip encoded message (when Content-encoding = gzip)
594-     *
595:     * Currently requires PHP with zlib support
596-     *
597-     * @param string $body
598-     * @return string]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[603]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[600-    public static function decodeGzip($body)
601-    {
602-        if (! function_exists('gzinflate')) {
603:            require_once 'Microsoft/Http/Exception.php';
604-            throw new Microsoft_Http_Exception(
605:                'zlib extension is required in order to decode "gzip" encoding'
606-            );
607-        }
608-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[615]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[612-    /**
613-     * Decode a zlib deflated message (when Content-encoding = deflate)
614-     *
615:     * Currently requires PHP with zlib support
616-     *
617-     * @param string $body
618-     * @return string]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[623]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[620-    public static function decodeDeflate($body)
621-    {
622-        if (! function_exists('gzuncompress')) {
623:            require_once 'Microsoft/Http/Exception.php';
624-            throw new Microsoft_Http_Exception(
625:                'zlib extension is required in order to decode "deflate" encoding'
626-            );
627-        }
628-
629-        /**
630-         * Some servers (IIS ?) send a broken deflate response, without the
631:         * RFC-required zlib header.
632-         *
633-         * We try to detect the zlib header, and if it does not exsit we
634-         * teat the body is plain DEFLATE content.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[26-/**
27- * @see Microsoft_Http_Exception
28- */
29:require_once 'Microsoft/Http/Exception.php';
30-
31-/**
32- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri_Http
29- */
30:require_once 'Microsoft/Uri/Http.php';
31-/**
32- * @see Microsoft_Http_Client
33- */
34:require_once 'Microsoft/Http/Client.php';
35-/**
36- * @see Microsoft_Http_Client_Adapter_Socket
37- */
38:require_once 'Microsoft/Http/Client/Adapter/Socket.php';
39-
40-/**
41- * HTTP Proxy-supporting Microsoft_Http_Client adapter class, based on the default
42- * socket based adapter.
43- *
44: * Should be used if proxy HTTP access is required. If no proxy is set, will
45- * fall back to Microsoft_Http_Client_Adapter_Socket behavior. Just like the
46: * default Socket adapter, this adapter does not require any special extensions
47- * installed.
48- *
49- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[123]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[120-
121-        // Make sure we're properly connected
122-        if (! $this->socket) {
123:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
124-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are not connected");
125-        }
126-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[131]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[128-        $port = $this->config['proxy_port'];
129-
130-        if ($this->connected_to[0] != "tcp://$host" || $this->connected_to[1] != $port) {
131:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
132-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are connected to the wrong proxy server");
133-        }
134-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[173]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[170-
171-        // Send the request
172-        if (! @fwrite($this->socket, $request)) {
173:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
174-            throw new Microsoft_Http_Client_Adapter_Exception("Error writing request to proxy server");
175-        }
176-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[209]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[206-
207-        // Send the request
208-        if (! @fwrite($this->socket, $request)) {
209:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
210-            throw new Microsoft_Http_Client_Adapter_Exception("Error writing request to proxy server");
211-        }
212-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[226]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[223-
224-        // Check that the response from the proxy is 200
225-        if (Microsoft_Http_Response::extractCode($response) != 200) {
226:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
227-            throw new Microsoft_Http_Client_Adapter_Exception("Unable to connect to HTTPS proxy. Server response: " . $response);
228-        }
229-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[246]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[243-        }
244-
245-        if (! $success) {
246:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
247-                throw new Microsoft_Http_Client_Adapter_Exception("Unable to connect to" .
248-                    " HTTPS server through proxy: could not negotiate secure connection.");
249-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[26-/**
27- * @see Microsoft_Http_Client_Exception
28- */
29:require_once 'Microsoft/Http/Client/Exception.php';
30-
31-/**
32- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri_Http
29- */
30:require_once 'Microsoft/Uri/Http.php';
31-
32-/**
33- * @see Microsoft_Http_Client_Adapter_Interface
34- */
35:require_once 'Microsoft/Http/Client/Adapter/Interface.php';
36-/**
37- * @see Microsoft_Http_Client_Adapter_Stream
38- */
39:require_once 'Microsoft/Http/Client/Adapter/Stream.php';
40-
41-/**
42- * An adapter class for Microsoft_Http_Client based on the curl extension.
43: * Curl requires libcurl. See for full requirements the PHP manual: http://php.net/curl
44- *
45- * @category   Microsoft
46- * @package    Microsoft_Http]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[122]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[119-    public function __construct()
120-    {
121-        if (!extension_loaded('curl')) {
122:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
123-            throw new Microsoft_Http_Client_Adapter_Exception('cURL extension has to be loaded to use this Microsoft_Http_Client adapter.');
124-        }
125-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[137]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[134-    public function setConfig($config = array())
135-    {
136-        if (! is_array($config)) {
137:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
138-            throw new Microsoft_Http_Client_Adapter_Exception(
139-                'Array expected, got ' . gettype($config)
140-            );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[232]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[229-        if (!$this->_curl) {
230-            $this->close();
231-
232:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
233-            throw new Microsoft_Http_Client_Adapter_Exception('Unable to Connect to ' .  $host . ':' . $port);
234-        }
235-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[265]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[262-    {
263-        // Make sure we're properly connected
264-        if (!$this->_curl) {
265:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
266-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are not connected");
267-        }
268-
269-        if ($this->_connected_to[0] != $uri->getHost() || $this->_connected_to[1] != $uri->getPort()) {
270:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
271-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are connected to the wrong host");
272-        }
273-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[307]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[304-                    }
305-
306-                    if (!isset($this->_config['curloptions'][CURLOPT_INFILESIZE])) {
307:                        require_once 'Microsoft/Http/Client/Adapter/Exception.php';
308-                        throw new Microsoft_Http_Client_Adapter_Exception("Cannot set a file-handle for cURL option CURLOPT_INFILE without also setting its size in CURLOPT_INFILESIZE.");
309-                    }
310-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[339]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[336-
337-            default:
338-                // For now, through an exception for unsupported request methods
339:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
340-                throw new Microsoft_Http_Client_Adapter_Exception("Method currently not supported");
341-        }
342-
343-        if(is_resource($body) && $curlMethod != CURLOPT_PUT) {
344:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
345-            throw new Microsoft_Http_Client_Adapter_Exception("Streaming requests are allowed only with PUT");
346-        }
347-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[397]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[394-            foreach ((array)$this->_config['curloptions'] as $k => $v) {
395-                if (!in_array($k, $this->_invalidOverwritableCurlOptions)) {
396-                    if (@curl_setopt($this->_curl, $k, $v) == false) {
397:                        require_once 'Microsoft/Http/Client/Exception.php';
398-                        throw new Microsoft_Http_Client_Exception(sprintf("Unknown or erroreous cURL option '%s' set", $k));
399-                    }
400-                }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[416]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[413-        $request .= $body;
414-
415-        if (empty($this->_response)) {
416:            require_once 'Microsoft/Http/Client/Exception.php';
417-            throw new Microsoft_Http_Client_Exception("Error in cURL request: " . curl_error($this->_curl));
418-        }
419-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri_Http
29- */
30:require_once 'Microsoft/Uri/Http.php';
31-/**
32- * @see Microsoft_Http_Client_Adapter_Interface
33- */
34:require_once 'Microsoft/Http/Client/Adapter/Interface.php';
35-/**
36- * @see Microsoft_Http_Client_Adapter_Stream
37- */
38:require_once 'Microsoft/Http/Client/Adapter/Stream.php';
39-
40-/**
41- * A sockets based (stream_socket_client) adapter class for Microsoft_Http_Client. Can be used
42: * on almost every PHP environment, and does not require any special extensions.
43- *
44- * @category   Microsoft
45- * @package    Microsoft_Http]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[115]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[112-    public function setConfig($config = array())
113-    {
114-        if (! is_array($config)) {
115:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
116-            throw new Microsoft_Http_Client_Adapter_Exception(
117-                'Array expected, got ' . gettype($config)
118-            );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[159]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[156-
157-        } else {
158-            // Invalid parameter
159:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
160-            throw new Microsoft_Http_Client_Adapter_Exception(
161-                "Expecting either a stream context resource or array, got " . gettype($context)
162-            );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[208]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[205-                if ($this->config['sslcert'] !== null) {
206-                    if (! stream_context_set_option($context, 'ssl', 'local_cert',
207-                                                    $this->config['sslcert'])) {
208:                        require_once 'Microsoft/Http/Client/Adapter/Exception.php';
209-                        throw new Microsoft_Http_Client_Adapter_Exception('Unable to set sslcert option');
210-                    }
211-                }
212-                if ($this->config['sslpassphrase'] !== null) {
213-                    if (! stream_context_set_option($context, 'ssl', 'passphrase',
214-                                                    $this->config['sslpassphrase'])) {
215:                        require_once 'Microsoft/Http/Client/Adapter/Exception.php';
216-                        throw new Microsoft_Http_Client_Adapter_Exception('Unable to set sslpassphrase option');
217-                    }
218-                }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[233]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[230-
231-            if (! $this->socket) {
232-                $this->close();
233:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
234-                throw new Microsoft_Http_Client_Adapter_Exception(
235-                    'Unable to Connect to ' . $host . ':' . $port . '. Error #' . $errno . ': ' . $errstr);
236-            }
237-
238-            // Set the stream timeout
239-            if (! stream_set_timeout($this->socket, (int) $this->config['timeout'])) {
240:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
241-                throw new Microsoft_Http_Client_Adapter_Exception('Unable to set the connection timeout');
242-            }
243-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[263]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[260-    {
261-        // Make sure we're properly connected
262-        if (! $this->socket) {
263:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
264-            throw new Microsoft_Http_Client_Adapter_Exception('Trying to write but we are not connected');
265-        }
266-
267-        $host = $uri->getHost();
268-        $host = (strtolower($uri->getScheme()) == 'https' ? $this->config['ssltransport'] : 'tcp') . '://' . $host;
269-        if ($this->connected_to[0] != $host || $this->connected_to[1] != $uri->getPort()) {
270:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
271-            throw new Microsoft_Http_Client_Adapter_Exception('Trying to write but we are connected to the wrong host');
272-        }
273-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[295]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[292-
293-        // Send the request
294-        if (! @fwrite($this->socket, $request)) {
295:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
296-            throw new Microsoft_Http_Client_Adapter_Exception('Error writing request to server');
297-        }
298-
299-        if(is_resource($body)) {
300-            if(stream_copy_to_stream($body, $this->socket) == 0) {
301:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
302-                throw new Microsoft_Http_Client_Adapter_Exception('Error writing request to server');
303-            }
304-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[368]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[365-                    $chunksize = trim($line);
366-                    if (! ctype_xdigit($chunksize)) {
367-                        $this->close();
368:                        require_once 'Microsoft/Http/Client/Adapter/Exception.php';
369-                        throw new Microsoft_Http_Client_Adapter_Exception('Invalid chunk size "' .
370-                            $chunksize . '" unable to read chunked body');
371-                    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[501]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[498-            $timedout = $info['timed_out'];
499-            if ($timedout) {
500-                $this->close();
501:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
502-                throw new Microsoft_Http_Client_Adapter_Exception(
503-                    "Read timed out after {$this->config['timeout']} seconds",
504-                    Microsoft_Http_Client_Adapter_Exception::READ_TIMEOUT]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/SessionHandler.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[40]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[37-}
38-
39-/** Microsoft_WindowsAzure_Storage_Table */
40:require_once 'Microsoft/WindowsAzure/Storage/Table.php';
41-
42-/**
43- * @see Microsoft_WindowsAzure_Exception
44- */
45:require_once 'Microsoft/WindowsAzure/Exception.php';
46-
47-/**
48- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
41- */
42:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Credentials_SharedKey
46- */
47:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
51- */
52:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
53-
54-/**
55- * @see Microsoft_WindowsAzure_Exception
56- */
57:require_once 'Microsoft/WindowsAzure/Exception.php';
58-
59-/**
60- * @see Microsoft_Http_Client
61- */
62:require_once 'Microsoft/Http/Client.php';
63-
64-/**
65- * @see Microsoft_Http_Response
66- */
67:require_once 'Microsoft/Http/Response.php';
68-
69-/**
70- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[372]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[369-	 * @param boolean $forTableStorage Is the request for table storage?
370-	 * @param mixed $rawData Optional RAW HTTP data to be sent over the wire
371-	 * @param string $resourceType Resource type
372:	 * @param string $requiredPermission Required permission
373-	 * @return Microsoft_Http_Response
374-	 */
375-	protected function _performRequest(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[383]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[380-		$forTableStorage = false,
381-		$rawData = null,
382-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
383:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ
384-	) {
385-	    // Clean path
386-		if (strpos($path, '/') !== 0) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[396]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[393-		}
394-
395-		// Ensure cUrl will also work correctly:
396:		//  - disable Content-Type if required
397-		//  - disable Expect: 100 Continue
398-		if (!isset($headers["Content-Type"])) {
399-			$headers["Content-Type"] = '';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[412]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[409-
410-		// Generate URL and sign request
411-		$requestUrl     = $this->_credentials
412:						  ->signRequestUrl($this->getBaseUrl() . $path . $queryString, $resourceType, $requiredPermission);
413-		$requestHeaders = $this->_credentials
414:						  ->signRequestHeaders($httpVerb, $path, $queryString, $headers, $forTableStorage, $resourceType, $requiredPermission, $rawData);
415-
416-		// Prepare request
417-		$this->_httpClientChannel->resetParameters(true);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationDataSources
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationDataSources.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationLogs.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_LogLevel
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/LogLevel.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationWindowsEventLog.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_LogLevel
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/LogLevel.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Storage_Blob
41- */
42:require_once 'Microsoft/WindowsAzure/Storage/Blob.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_Exception
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationInstance.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationDataSources.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationLogs
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationLogs.php';
53-
54-/**
55- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationDiagnosticInfrastructureLogs
56- */
57:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationDiagnosticInfrastructureLogs.php';
58-
59-/**
60- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationPerformanceCounters
61- */
62:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationPerformanceCounters.php';
63-
64-/**
65- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationWindowsEventLog
66- */
67:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationWindowsEventLog.php';
68-
69-/**
70- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationDirectories
71- */
72:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationDirectories.php';
73-
74-/**
75- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationPerformanceCounters.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_PerformanceCounterSubscription
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/PerformanceCounterSubscription.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/PerformanceCounterSubscription.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/DirectoryConfigurationSubscription.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationDirectories.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_DirectoryConfigurationSubscription
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/DirectoryConfigurationSubscription.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationDiagnosticInfrastructureLogs.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_LogLevel
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/LogLevel.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/RetryPolicy/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_RetryPolicy_NoRetry
46- */
47:require_once 'Microsoft/WindowsAzure/RetryPolicy/NoRetry.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_RetryPolicy_RetryN
51- */
52:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryN.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/RetryPolicy/RetryN.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
41- */
42:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_RetryPolicy_Exception
46- */
47:require_once 'Microsoft/WindowsAzure/RetryPolicy/Exception.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/RetryPolicy/NoRetry.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
41- */
42:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_Exception
41- */
42:require_once 'Microsoft/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Credentials_SharedKey
41- */
42:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
48-
49-/**
50- * @see Microsoft_Http_Client
51- */
52:require_once 'Microsoft/Http/Client.php';
53-
54-/**
55- * @see Microsoft_Http_Response
56- */
57:require_once 'Microsoft/Http/Response.php';
58-
59-/**
60- * @see Microsoft_WindowsAzure_Storage
61- */
62:require_once 'Microsoft/WindowsAzure/Storage.php';
63-
64-/**
65- * Microsoft_WindowsAzure_Storage_QueueInstance
66- */
67:require_once 'Microsoft/WindowsAzure/Storage/QueueInstance.php';
68-
69-/**
70- * Microsoft_WindowsAzure_Storage_QueueMessage
71- */
72:require_once 'Microsoft/WindowsAzure/Storage/QueueMessage.php';
73-
74-/**
75- * @see Microsoft_WindowsAzure_Exception
76- */
77:require_once 'Microsoft/WindowsAzure/Exception.php';
78-
79-
80-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/BlobContainer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/DynamicTableEntity.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_TableEntity
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/TableEntity.php';
48-
49-
50-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/BatchStorageAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Storage
41- */
42:require_once 'Microsoft/WindowsAzure/Storage.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Exception
51- */
52:require_once 'Microsoft/WindowsAzure/Exception.php';
53-
54-/**
55- * @see Microsoft_WindowsAzure_Storage_Batch
56- */
57:require_once 'Microsoft/WindowsAzure/Storage/Batch.php';
58-
59-/**
60- * @see Microsoft_Http_Client
61- */
62:require_once 'Microsoft/Http/Client.php';
63-
64-/**
65- * @see Microsoft_Http_Response
66- */
67:require_once 'Microsoft/Http/Response.php';
68-
69-/**
70- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/BatchStorageAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[138]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[135-	 * @param boolean $forTableStorage Is the request for table storage?
136-	 * @param boolean $isSingleSelect Is the request a single select statement?
137-	 * @param string $resourceType Resource type
138:	 * @param string $requiredPermission Required permission
139-	 * @return Microsoft_Http_Response
140-	 */
141:	public function performBatch($operations = array(), $forTableStorage = false, $isSingleSelect = false, $resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN, $requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ)
142-	{
143-	    // Generate boundaries
144-	    $batchBoundary = 'batch_' . md5(time() . microtime());]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/BatchStorageAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[196]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[193-		}
194-
195-		// Generate URL and sign request
196:		$requestUrl     = $this->_credentials->signRequestUrl($this->getBaseUrl() . $path . $queryString, $resourceType, $requiredPermission);
197:		$requestHeaders = $this->_credentials->signRequestHeaders($httpVerb, $path, $queryString, $headers, $forTableStorage, $resourceType, $requiredPermission);
198-
199-		// Prepare request
200-		$this->_httpClientChannel->resetParameters(true);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/QueueMessage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-
45-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/QueueInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/PageRegionInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/TableEntity.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-
45-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/LeaseInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract_SharedKey
41- */
42:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Credentials_SharedAccessSignature
46- */
47:require_once 'Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
51- */
52:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
53-
54-/**
55- * @see Microsoft_Http_Client
56- */
57:require_once 'Microsoft/Http/Client.php';
58-
59-/**
60- * @see Microsoft_Http_Response
61- */
62:require_once 'Microsoft/Http/Response.php';
63-
64-/**
65- * @see Microsoft_WindowsAzure_Storage
66- */
67:require_once 'Microsoft/WindowsAzure/Storage.php';
68-
69-/**
70- * @see Microsoft_WindowsAzure_Storage_BlobContainer
71- */
72:require_once 'Microsoft/WindowsAzure/Storage/BlobContainer.php';
73-
74-/**
75- * @see Microsoft_WindowsAzure_Storage_BlobInstance
76- */
77:require_once 'Microsoft/WindowsAzure/Storage/BlobInstance.php';
78-
79-/**
80- * @see Microsoft_WindowsAzure_Storage_PageRegionInstance
81- */
82:require_once 'Microsoft/WindowsAzure/Storage/PageRegionInstance.php';
83-
84-/**
85- * @see Microsoft_WindowsAzure_Storage_LeaseInstance
86- */
87:require_once 'Microsoft/WindowsAzure/Storage/LeaseInstance.php';
88-
89-/**
90- * @see Microsoft_WindowsAzure_Storage_SignedIdentifier
91- */
92:require_once 'Microsoft/WindowsAzure/Storage/SignedIdentifier.php';
93-
94-/**
95- * @see Microsoft_WindowsAzure_Exception
96- */
97:require_once 'Microsoft/WindowsAzure/Exception.php';
98-
99-
100-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1691]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1688-	 * @param string $containerName      Container name
1689-	 * @param string $blobName           Blob name
1690-	 * @param string $leaseAction        Lease action (Microsoft_WindowsAzure_Storage_Blob::LEASE_*)
1691:	 * @param string $leaseId            Lease identifier, required to renew the lease or to release the lease.
1692-	 * @return Microsoft_WindowsAzure_Storage_LeaseInstance Lease instance
1693-	 * @throws Microsoft_WindowsAzure_Exception
1694-	 */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1932]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1929-		/**
1930-		 * @see Microsoft_WindowsAzure_Storage_Blob_Stream
1931-		 */
1932:		require_once 'Microsoft/WindowsAzure/Storage/Blob/Stream.php';
1933-
1934-		stream_register_wrapper($name, 'Microsoft_WindowsAzure_Storage_Blob_Stream');
1935-		$this->registerAsClient($name);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/BlobInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Batch.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_BatchStorageAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/BatchStorageAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
41- */
42:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Credentials_SharedKey
46- */
47:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Credentials_SharedKeyLite
51- */
52:require_once 'Microsoft/WindowsAzure/Credentials/SharedKeyLite.php';
53-
54-/**
55- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
56- */
57:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
58-
59-/**
60- * @see Microsoft_Http_Client
61- */
62:require_once 'Microsoft/Http/Client.php';
63-
64-/**
65- * @see Microsoft_Http_Response
66- */
67:require_once 'Microsoft/Http/Response.php';
68-
69-/**
70- * @see Microsoft_WindowsAzure_Storage
71- */
72:require_once 'Microsoft/WindowsAzure/Storage.php';
73-
74-/**
75- * @see Microsoft_WindowsAzure_Storage_BatchStorageAbstract
76- */
77:require_once 'Microsoft/WindowsAzure/Storage/BatchStorageAbstract.php';
78-
79-/**
80- * @see Microsoft_WindowsAzure_Storage_TableInstance
81- */
82:require_once 'Microsoft/WindowsAzure/Storage/TableInstance.php';
83-
84-/**
85- * @see Microsoft_WindowsAzure_Storage_TableEntity
86- */
87:require_once 'Microsoft/WindowsAzure/Storage/TableEntity.php';
88-
89-/**
90- * @see Microsoft_WindowsAzure_Storage_DynamicTableEntity
91- */
92:require_once 'Microsoft/WindowsAzure/Storage/DynamicTableEntity.php';
93-
94-/**
95- * @see Microsoft_WindowsAzure_Storage_TableEntityQuery
96- */
97:require_once 'Microsoft/WindowsAzure/Storage/TableEntityQuery.php';
98-
99-/**
100- * @see Microsoft_WindowsAzure_Exception
101- */
102:require_once 'Microsoft/WindowsAzure/Exception.php';
103-
104-
105-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[488]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[485-		if (strlen($partitionKey . $rowKey) >= 256) {
486-		    // Start a batch if possible
487-		    if ($this->isInBatch()) {
488:		        throw new Microsoft_WindowsAzure_Exception('Entity cannot be retrieved. A transaction is required to retrieve the entity, but another transaction is already active.');
489-		    }
490-
491-		    $this->startBatch();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[893]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[890-	 * @param boolean $forTableStorage Is the request for table storage?
891-	 * @param mixed $rawData Optional RAW HTTP data to be sent over the wire
892-	 * @param string $resourceType Resource type
893:	 * @param string $requiredPermission Required permission
894-	 * @return Microsoft_Http_Response
895-	 */
896-	protected function _performRequest(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[904]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[901-		$forTableStorage = false,
902-		$rawData = null,
903-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
904:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ
905-	) {
906-		// Add headers
907-		$headers['DataServiceVersion'] = '1.0;NetFx';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[919]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[916-			$forTableStorage,
917-			$rawData,
918-			$resourceType,
919:			$requiredPermission
920-		);
921-	}
922-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Storage_Blob
41- */
42:require_once 'Microsoft/WindowsAzure/Storage/Blob.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Exception
46- */
47:require_once 'Microsoft/WindowsAzure/Exception.php';
48-
49-
50-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/SignedIdentifier.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/TableInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[38-/**
39- * @see Microsoft_Http_Client
40- */
41:require_once 'Microsoft/Http/Client.php';
42-
43-/**
44- * @see Microsoft_WindowsAzure_Credentials_Exception
45- */
46:require_once 'Microsoft/WindowsAzure/Credentials/Exception.php';
47-
48-/**
49- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[156]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[153-	 *
154-	 * @param string $requestUrl Request URL
155-	 * @param string $resourceType Resource type
156:	 * @param string $requiredPermission Required permission
157-	 * @return string Signed request URL
158-	 */
159-	abstract public function signRequestUrl(
160-		$requestUrl = '',
161-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
162:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ
163-	);
164-
165-	/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[174]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[171-	 * @param array $headers x-ms headers to add
172-	 * @param boolean $forTableStorage Is the request for table storage?
173-	 * @param string $resourceType Resource type
174:	 * @param string $requiredPermission Required permission
175-	 * @param mixed  $rawData Raw post data
176-	 * @return array Array of headers
177-	 */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[185]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[182-		$headers = null,
183-		$forTableStorage = false,
184-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
185:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ,
186-		$rawData = null
187-	);
188-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[38-/**
39- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
40- */
41:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
42-
43-/**
44- * @see Microsoft_WindowsAzure_Storage
45- */
46:require_once 'Microsoft/WindowsAzure/Storage.php';
47-
48-/**
49- * @see Microsoft_Http_Client
50- */
51:require_once 'Microsoft/Http/Client.php';
52-
53-/**
54- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[217]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[214-	 * @param string $permissionUrl Permission URL
215-	 * @param string $requestUrl Request URL
216-	 * @param string $resourceType Resource type
217:	 * @param string $requiredPermission Required permission
218-	 * @return string Signed request URL
219-	 */
220-    public function permissionMatchesRequest(
221-    	$permissionUrl = '',
222-    	$requestUrl = '',
223-    	$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
224:    	$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ
225-    ) {
226:        // Build requirements
227:        $requiredResourceType = $resourceType;
228:        if ($requiredResourceType == Microsoft_WindowsAzure_Storage::RESOURCE_BLOB) {
229:            $requiredResourceType .= Microsoft_WindowsAzure_Storage::RESOURCE_CONTAINER;
230-        }
231-
232-        // Parse permission url]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[247]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[244-	        list($property, $value) = explode('=', $part, 2);
245-
246-	        if ($property == 'sr') {
247:	            $matches = $matches && (strpbrk($value, $requiredResourceType) !== false);
248-	        }
249-
250-	    	if ($property == 'sp') {
251:	            $matches = $matches && (strpbrk($value, $requiredPermission) !== false);
252-	        }
253-	    }
254-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[267]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[264-	 *
265-	 * @param string $requestUrl Request URL
266-	 * @param string $resourceType Resource type
267:	 * @param string $requiredPermission Required permission
268-	 * @return string Signed request URL
269-	 */
270-	public function signRequestUrl(
271-		$requestUrl = '',
272-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
273:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ
274-	) {
275-	    // Look for a matching permission
276-	    foreach ($this->getPermissionSet() as $permittedUrl) {
277:	        if ($this->permissionMatchesRequest($permittedUrl, $requestUrl, $resourceType, $requiredPermission)) {
278-	            // This matches, append signature data
279-	            $parsedPermittedUrl = parse_url($permittedUrl);
280-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[307]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[304-	 * @param array $headers x-ms headers to add
305-	 * @param boolean $forTableStorage Is the request for table storage?
306-	 * @param string $resourceType Resource type
307:	 * @param string $requiredPermission Required permission
308-	 * @param mixed  $rawData Raw post data
309-	 * @return array Array of headers
310-	 */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[318]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[315-		$headers = null,
316-		$forTableStorage = false,
317-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
318:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ,
319-		$rawData = null
320-	) {
321-	    return $headers;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKeyLite.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[38-/**
39- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
40- */
41:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
42-
43-/**
44- * @see Microsoft_WindowsAzure_Storage
45- */
46:require_once 'Microsoft/WindowsAzure/Storage.php';
47-
48-/**
49- * @see Microsoft_WindowsAzure_Credentials_SharedKey
50- */
51:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
52-
53-/**
54- * @see Microsoft_WindowsAzure_Credentials_Exception
55- */
56:require_once 'Microsoft/WindowsAzure/Credentials/Exception.php';
57-
58-/**
59- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKeyLite.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[72]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[69-	 *
70-	 * @param string $requestUrl Request URL
71-	 * @param string $resourceType Resource type
72:	 * @param string $requiredPermission Required permission
73-	 * @return string Signed request URL
74-	 */
75-	public function signRequestUrl(
76-		$requestUrl = '',
77-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
78:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ
79-	) {
80-	    return $requestUrl;
81-	}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKeyLite.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[92]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[89-	 * @param array $headers x-ms headers to add
90-	 * @param boolean $forTableStorage Is the request for table storage?
91-	 * @param string $resourceType Resource type
92:	 * @param string $requiredPermission Required permission
93-	 * @param mixed  $rawData Raw post data
94-	 * @return array Array of headers
95-	 */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKeyLite.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[103]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[100-		$headers = null,
101-		$forTableStorage = false,
102-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
103:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ,
104-		$rawData = null
105-	) {
106-		// Table storage?]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[38-/**
39- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
40- */
41:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
42-
43-/**
44- * @see Microsoft_WindowsAzure_Storage
45- */
46:require_once 'Microsoft/WindowsAzure/Storage.php';
47-
48-/**
49- * @see Microsoft_Http_Client
50- */
51:require_once 'Microsoft/Http/Client.php';
52-
53-/**
54- * @see Microsoft_WindowsAzure_Credentials_Exception
55- */
56:require_once 'Microsoft/WindowsAzure/Credentials/Exception.php';
57-
58-/**
59- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[72]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[69-	 *
70-	 * @param string $requestUrl Request URL
71-	 * @param string $resourceType Resource type
72:	 * @param string $requiredPermission Required permission
73-	 * @return string Signed request URL
74-	 */
75-	public function signRequestUrl(
76-		$requestUrl = '',
77-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
78:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ
79-	) {
80-	    return $requestUrl;
81-	}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[92]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[89-	 * @param array $headers x-ms headers to add
90-	 * @param boolean $forTableStorage Is the request for table storage?
91-	 * @param string $resourceType Resource type
92:	 * @param string $requiredPermission Required permission
93-	 * @param mixed  $rawData Raw post data
94-	 * @return array Array of headers
95-	 */]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[103]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[100-		$headers = null,
101-		$forTableStorage = false,
102-		$resourceType = Microsoft_WindowsAzure_Storage::RESOURCE_UNKNOWN,
103:		$requiredPermission = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_READ,
104-		$rawData = null
105-	) {
106-		// http://github.com/sriramk/winazurestorage/blob/214010a2f8931bac9c96dfeb337d56fe084ca63b/winazurestorage.py]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[25-/**
26- * @see Microsoft_Exception
27- */
28:require_once 'Microsoft/Exception.php';
29-
30-/**
31- * Exceptions for Microsoft_Uri]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[25-/**
26- * @see Microsoft_Uri
27- */
28:require_once 'Microsoft/Uri.php';
29-
30-/**
31- * HTTP(S) URI handler]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[143]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[140-            (self::$_config['allow_unwise'] ? self::CHAR_UNWISE : '') . '])';
141-
142-        // If no scheme-specific part was supplied, the user intends to create
143:        // a new URI with this object.  No further parsing is required.
144-        if (strlen($schemeSpecific) === 0) {
145-            return;
146-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[153]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[150-
151-        // Validate the URI
152-        if ($this->valid() === false) {
153:            require_once 'Microsoft/Uri/Exception.php';
154-            throw new Microsoft_Uri_Exception('Invalid URI supplied');
155-        }
156-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[171]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[168-    public static function fromString($uri)
169-    {
170-        if (is_string($uri) === false) {
171:            require_once 'Microsoft/Uri/Exception.php';
172-            throw new Microsoft_Uri_Exception('$uri is not a string');
173-        }
174-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[180]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[177-        $schemeSpecific = isset($uri[1]) === true ? $uri[1] : '';
178-
179-        if (in_array($scheme, array('http', 'https')) === false) {
180:            require_once 'Microsoft/Uri/Exception.php';
181-            throw new Microsoft_Uri_Exception("Invalid scheme: '$scheme'");
182-        }
183-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[202]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[199-        $pattern = '~^((//)([^/?#]*))([^?#]*)(\?([^#]*))?(#(.*))?$~';
200-        $status  = @preg_match($pattern, $schemeSpecific, $matches);
201-        if ($status === false) {
202:            require_once 'Microsoft/Uri/Exception.php';
203-            throw new Microsoft_Uri_Exception('Internal error: scheme-specific decomposition failed');
204-        }
205-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[221]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[218-        $pattern = '~^(([^:@]*)(:([^@]*))?@)?([^:]+)(:(.*))?$~';
219-        $status  = @preg_match($pattern, $combo, $matches);
220-        if ($status === false) {
221:            require_once 'Microsoft/Uri/Exception.php';
222-            throw new Microsoft_Uri_Exception('Internal error: authority decomposition failed');
223-        }
224-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[248]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[245-    public function getUri()
246-    {
247-        if ($this->valid() === false) {
248:            require_once 'Microsoft/Uri/Exception.php';
249-            throw new Microsoft_Uri_Exception('One or more parts of the URI are invalid');
250-        }
251-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[321]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[318-            self::CHAR_ALNUM . self::CHAR_MARK . ';:&=+$,' . '])+$/', $username);
319-
320-        if ($status === false) {
321:            require_once 'Microsoft/Uri/Exception.php';
322-            throw new Microsoft_Uri_Exception('Internal error: username validation failed');
323-        }
324-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[338]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[335-    public function setUsername($username)
336-    {
337-        if ($this->validateUsername($username) === false) {
338:            require_once 'Microsoft/Uri/Exception.php';
339-            throw new Microsoft_Uri_Exception("Username \"$username\" is not a valid HTTP username");
340-        }
341-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[388]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[385-            self::CHAR_ALNUM . self::CHAR_MARK . ';:&=+$,' . '])+$/', $password);
386-
387-        if ($status === false) {
388:            require_once 'Microsoft/Uri/Exception.php';
389-            throw new Microsoft_Uri_Exception('Internal error: password validation failed.');
390-        }
391-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[405]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[402-    public function setPassword($password)
403-    {
404-        if ($this->validatePassword($password) === false) {
405:            require_once 'Microsoft/Uri/Exception.php';
406-            throw new Microsoft_Uri_Exception("Password \"$password\" is not a valid HTTP password.");
407-        }
408-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[457]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[454-    public function setHost($host)
455-    {
456-        if ($this->validateHost($host) === false) {
457:            require_once 'Microsoft/Uri/Exception.php';
458-            throw new Microsoft_Uri_Exception("Host \"$host\" is not a valid HTTP host");
459-        }
460-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[509]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[506-    public function setPort($port)
507-    {
508-        if ($this->validatePort($port) === false) {
509:            require_once 'Microsoft/Uri/Exception.php';
510-            throw new Microsoft_Uri_Exception("Port \"$port\" is not a valid HTTP port.");
511-        }
512-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[552]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[549-        $pattern = '/^' . $this->_regex['path'] . '$/';
550-        $status  = @preg_match($pattern, $path);
551-        if ($status === false) {
552:            require_once 'Microsoft/Uri/Exception.php';
553-            throw new Microsoft_Uri_Exception('Internal error: path validation failed');
554-        }
555-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[569]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[566-    public function setPath($path)
567-    {
568-        if ($this->validatePath($path) === false) {
569:            require_once 'Microsoft/Uri/Exception.php';
570-            throw new Microsoft_Uri_Exception("Path \"$path\" is not a valid HTTP path");
571-        }
572-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[630]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[627-        $pattern = '/^' . $this->_regex['uric'] . '*$/';
628-        $status  = @preg_match($pattern, $query);
629-        if ($status === false) {
630:            require_once 'Microsoft/Uri/Exception.php';
631-            throw new Microsoft_Uri_Exception('Internal error: query validation failed');
632-        }
633-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[695]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[692-
693-        // Make sure the query is valid, and set it
694-        if ($this->validateQuery($query) === false) {
695:            require_once 'Microsoft/Uri/Exception.php';
696-            throw new Microsoft_Uri_Exception("'$query' is not a valid query string");
697-        }
698-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[738]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[735-        $pattern = '/^' . $this->_regex['uric'] . '*$/';
736-        $status  = @preg_match($pattern, $fragment);
737-        if ($status === false) {
738:            require_once 'Microsoft/Uri/Exception.php';
739-            throw new Microsoft_Uri_Exception('Internal error: fragment validation failed');
740-        }
741-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[755]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[752-    public function setFragment($fragment)
753-    {
754-        if ($this->validateFragment($fragment) === false) {
755:            require_once 'Microsoft/Uri/Exception.php';
756-            throw new Microsoft_Uri_Exception("Fragment \"$fragment\" is not a valid HTTP fragment");
757-        }
758-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[10-/**
11- * Minify_Source
12- */
13:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Source.php';
14-
15-/**
16- * Minify - Combines, minifies, and caches JavaScript and CSS files on demand.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[167]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[164-            // make $controller into object
165-            $class = 'Minify_Controller_' . $controller;
166-            if (! class_exists($class, false)) {
167:                require_once W3TC_LIB_MINIFY_DIR . "/Minify/Controller/"
168-                    . str_replace('_', '/', $controller) . ".php";
169-            }
170-            $controller = new $class();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[211]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[208-                $contentEncoding = self::$_options['encodeMethod'];
209-            } else {
210-                // sniff request header
211:                require_once W3TC_LIB_MINIFY_DIR . '/HTTP/Encoder.php';
212-                // depending on what the client accepts, $contentEncoding may be
213-                // 'x-gzip' while our internal encodeMethod is 'gzip'. Calling
214-                // getAcceptedEncoding(false, false) leaves out compress and deflate as options.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[222]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[219-        }
220-
221-        // check client cache
222:        require_once W3TC_LIB_MINIFY_DIR . '/HTTP/ConditionalGet.php';
223-        $cgOptions = array(
224-            'cacheHeaders' => self::$_options['cacheHeaders']
225-            ,'lastModifiedTime' => self::$_options['lastModifiedTime']]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[271]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[268-        if (null !== self::$_cache) {
269-            // using cache
270-            // the goal is to use only the cache methods to sniff the length and
271:            // output the content, as they do not require ever loading the file into
272-            // memory.
273-            $cacheId = self::_getCacheId();
274-            $fullCacheId = (self::$_options['encodeMethod'])]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[394]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[391-            if ($unsetPathInfo) {
392-                unset($_SERVER['PATH_INFO']);
393-            }
394:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Logger.php';
395-            Minify_Logger::log("setDocRoot() set DOCUMENT_ROOT to \"{$_SERVER['DOCUMENT_ROOT']}\"");
396-        }
397-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[496]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[493-
494-        // do any post-processing (esp. for editing build URIs)
495-        if (self::$_options['postprocessorRequire']) {
496:            require_once self::$_options['postprocessorRequire'];
497-        }
498-        if (self::$_options['postprocessor']) {
499-            $content = call_user_func(self::$_options['postprocessor'], $content, $type);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[18]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[15- * comments that begin with "/*!" (for documentation purposes). In the latter case
16- * newlines are inserted around the comment to enhance readability.
17- *
18: * PHP 5 or higher is required.
19- *
20- * Permission is hereby granted to use this version of the library under the
21- * same terms as jsmin.c, which has the following license:]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMinPlus.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[56]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[53- * under the terms of either the GPL or the LGPL, and not to allow others to
54- * use your version of this file under the terms of the MPL, indicate your
55- * decision by deleting the provisions above and replace them with the notice
56: * and other provisions required by the GPL or the LGPL. If you do not delete
57- * the provisions above, a recipient may use your version of this file under
58- * the terms of any one of the MPL, the GPL or the LGPL.
59- *]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMinPlus.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[896]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[893-		return $n;
894-	}
895-
896:	private function FunctionDefinition($x, $requireName, $functionForm)
897-	{
898-		$f = new JSNode($this->t);
899-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMinPlus.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[905]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[902-
903-		if ($this->t->match(TOKEN_IDENTIFIER))
904-			$f->name = $this->t->currentToken()->value;
905:		elseif ($requireName)
906-			throw $this->t->newSyntaxError('Missing function identifier');
907-
908-		$this->t->mustMatch(OP_LEFT_PAREN);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/Encoder.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[80]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[77-     * 
78-     * @param array $spec options
79-     * 
80:     * 'content': (string required) content to be encoded
81-     * 
82-     * 'type': (string) if set, the Content-Type header will have this value.
83-     *]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Lines.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[61]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[58-        $content = implode("\n", $newLines) . "\n";
59-
60-        // check for desired URI rewriting
61:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
62-
63-        $content = Minify_CSS_UriRewriter::rewrite($content, $options);
64-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Build.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Source.php';
11-
12-/**
13- * Maintain a single last modification time for a group of Minify sources to]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[49-     * @return string
50-     */
51-    public static function minify($css, $options = array()) {
52:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/Compressor.php';
53-
54-        if (isset($options['preserveComments']) && $options['preserveComments']) {
55:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/CommentPreserver.php';
56-
57-            $css = Minify_CommentPreserver::process(
58-                $css,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[66]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[63-            $css = Minify_CSS_Compressor::process($css, $options);
64-        }
65-
66:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
67-
68-        $css = Minify_CSS_UriRewriter::rewrite($css, $options);
69-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1-<?php
2-
3:require_once W3TC_INC_DIR . '/functions/file.php';
4-
5-/**
6- * Class Minify_Cache_File]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[11-
12-    public function __construct($path = '', $exclude = array(), $locking = false, $flushTimeLimit = 0) {
13-        if (!$path) {
14:            require_once W3TC_LIB_MINIFY_DIR . '/Solar/Dir.php';
15-            $path = rtrim(Solar_Dir::tmp(), DIRECTORY_SEPARATOR);
16-        }
17-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CombineOnly.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[11-     * @return string
12-     */
13-    public static function minify($content, $options = array()) {
14:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
15-
16-        $content = Minify_CSS_UriRewriter::rewrite($content, $options);
17-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSSTidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[25]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[22-
23-        set_include_path(get_include_path() . PATH_SEPARATOR . W3TC_LIB_CSSTIDY_DIR);
24-
25:        require_once 'class.csstidy.php';
26-
27-        $csstidy = new csstidy();
28-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSSTidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[35-
36-        $css = $csstidy->print->plain();
37-
38:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
39-
40-        $css = Minify_CSS_UriRewriter::rewrite($css, $options);
41-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Packer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[22]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[19-
20-if (false === (@include W3TC_LIB_MINIFY_DIR . '/class.JavaScriptPacker.php')) {
21-    trigger_error(
22:        'The script "class.JavaScriptPacker.php" is required. Please see: http:'
23-        .'//code.google.com/p/minify/source/browse/trunk/min/lib/Minify/Packer.php'
24-        ,E_USER_ERROR
25-    );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/YUICompressor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[9-    }
10-
11-    public static function minifyCss($css, $options = array()) {
12:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
13-
14-        $css = self::_minify('css', $css, $options);
15-        $css = Minify_CSS_UriRewriter::rewrite($css, $options);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Source.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[39]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[36-    public $filepath = null;
37-    
38-    /**
39:     * @var string HTTP Content Type (Minify requires one of the constants Minify::TYPE_*)
40-     */
41-    public $contentType = null;
42-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Source.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[75]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[72-            }
73-            $this->filepath = $spec['filepath'];
74-            $this->_id = $spec['filepath'];
75:            require_once W3TC_LIB_MINIFY_DIR . '/Minify.php';
76-            $this->lastModified = filemtime($spec['filepath'])
77-                // offset for Windows uploaders with out of sync clocks
78-                + round(Minify::$uploaderHoursBehind * 3600);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Source.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[109]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[106-    public function getContent()
107-    {
108-        if (isset($this->minifyOptions['processCssImports']) && $this->minifyOptions['processCssImports']) {
109:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/ImportProcessor.php';
110-
111-            $content = Minify_ImportProcessor::process($this->filepath);
112-        } else {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[62]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[59-            
60-            // callback function to see/modify content of all sources
61-            ,'postprocessor' => null
62:            // file to require to load preprocessor
63-            ,'postprocessorRequire' => null
64-        );
65-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[104]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[101-            && is_string($minifierCallback[0])
102-            && !class_exists($minifierCallback[0], false)) {
103-            
104:            require W3TC_LIB_MINIFY_DIR . '/' . str_replace('_', '/', $minifierCallback[0]) . '.php';
105-        }
106-    }
107-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[200]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[197-     * @return null
198-     */
199-    protected function log($msg) {
200:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/Logger.php';
201-        Minify_Logger::log($msg);
202-    }
203-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Version1.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for emulating version 1 of minify.php]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Groups.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for serving predetermined groups of minimized sets, selected]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Groups.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[44]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[41-     *
42-     * Controller options:
43-     *
44:     * 'groups': (required) array mapping PATH_INFO strings to arrays
45-     * of complete file paths. @see Minify_Controller_Groups
46-     */
47-    public function setupSources($options) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Page.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for serving a single HTML page]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Page.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[26-     *
27-     * Controller options:
28-     *
29:     * 'content': (required) HTML markup
30-     *
31:     * 'id': (required) id of page (string for use in server-side caching)
32-     *
33-     * 'lastModifiedTime': timestamp of when this content changed. This
34-     * is recommended to allow both server and client-side caching.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Page.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[79]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[76-        if ($this->_loadCssJsMinifiers) {
77-            // Minify will not call for these so we must manually load
78-            // them when Minify/HTML.php is called for.
79:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS.php';
80:            require_once W3TC_LIB_MINIFY_DIR . '/JSMin.php';
81-        }
82-        parent::loadMinifier($minifierCallback); // load Minify/HTML.php
83-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Files.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for minifying a set of files]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Files.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[39-     *
40-     * Controller options:
41-     *
42:     * 'files': (required) array of complete file paths, or a single path
43-     */
44-    public function setupSources($options) {
45-        // strip controller options]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/MinApp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for requests to /min/index.php]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[340]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[337-		elseif (isset($input['data']))
338-			$rest->data = $input['data'];
339-
340:		// Content-Length (required)
341-		if (isset($input['size']) && $input['size'] >= 0)
342-			$rest->size = $input['size'];
343-		else {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[889]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[886-	* @return array | false
887-	*/
888-	public static function createDistribution($dnsName, $originType = self::ORIGIN_TYPE_S3, $enabled = true, $cnames = array(), $comment = '') {
889:		self::$useSSL = true; // CloudFront requires SSL
890-		$rest = new S3Request('POST', '', '2010-11-01/distribution', 'cloudfront.amazonaws.com');
891-		$rest->data = self::__getCloudFrontDistributionConfigXML($dnsName, $originType, $enabled, $comment, (string)microtime(true), $cnames);
892-		$rest->size = strlen($rest->data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[921]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[918-	* @return array | false
919-	*/
920-	public static function getDistribution($distributionId) {
921:		self::$useSSL = true; // CloudFront requires SSL
922-		$rest = new S3Request('GET', '', '2010-11-01/distribution/'.$distributionId, 'cloudfront.amazonaws.com');
923-		$rest = self::__getCloudFrontResponse($rest);
924-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[950]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[947-	* @return array | false
948-	*/
949-	public static function updateDistribution($dist) {
950:		self::$useSSL = true; // CloudFront requires SSL
951-		$rest = new S3Request('PUT', '', '2010-11-01/distribution/'.$dist['id'].'/config', 'cloudfront.amazonaws.com');
952-		$rest->data = self::__getCloudFrontDistributionConfigXML($dist['origin'], $dist['type'], $dist['enabled'], $dist['comment'], $dist['callerReference'], $dist['cnames']);
953-		$rest->size = strlen($rest->data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[982]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[979-	* @return boolean
980-	*/
981-	public static function deleteDistribution($dist) {
982:		self::$useSSL = true; // CloudFront requires SSL
983-		$rest = new S3Request('DELETE', '', '2010-11-01/distribution/'.$dist['id'], 'cloudfront.amazonaws.com');
984-		$rest->setHeader('If-Match', $dist['hash']);
985-		$rest = self::__getCloudFrontResponse($rest);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1007]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1004-	* @return array
1005-	*/
1006-	public static function listDistributions() {
1007:		self::$useSSL = true; // CloudFront requires SSL
1008-		$rest = new S3Request('GET', '', '2010-11-01/distribution', 'cloudfront.amazonaws.com');
1009-		$rest = self::__getCloudFrontResponse($rest);
1010-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1158]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1155-     * @return array|bool
1156-     */
1157-    public static function createInvalidation($distributionId, $paths) {
1158:        self::$useSSL = true; // CloudFront requires SSL
1159-
1160-        $rest = new S3Request('POST', '', '2010-11-01/distribution/' . $distributionId . '/invalidation', 'cloudfront.amazonaws.com');
1161-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1280]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1277-	* @return string
1278-	*/
1279-	public static function __getMimeType(&$file) {
1280:		require_once W3TC_INC_DIR . '/functions/mime.php';
1281-
1282-		$type = w3_get_mime_type($file);
1283-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[245]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[242-		return true;
243-	  } else if ($this->io_method() == 'curl') {
244-		if (!extension_loaded('curl')) {
245://			$this->setError('cURL Extension, or OpenSSL extension w/ PHP version >= 4.3 is required for HTTPS');
246:			$this->setError('The PHP cURL Extension is required for HTTPS or NLTM.  You will need to re-build or update your PHP to include cURL or change php.ini to load the PHP cURL extension.');
247-			return false;
248-		}
249-		// Avoid warnings when PHP does not have these options]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1104]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1101-    			// if decoding works, use it. else assume data wasn't gzencoded
1102-    			if(function_exists('gzinflate')){
1103-					//$timer->setMarker('starting decoding of gzip/deflated content');
1104:					// IIS 5 requires gzinflate instead of gzuncompress (similar to IE 5 and gzdeflate v. gzcompress)
1105-					// this means there are no Zlib headers, although there should be
1106-					$this->debug('The gzinflate function exists');
1107-					$datalen = strlen($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.nusoap_base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[57]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[54-/* load classes
55-
56-// necessary classes
57:require_once('class.soapclient.php');
58:require_once('class.soap_val.php');
59:require_once('class.soap_parser.php');
60:require_once('class.soap_fault.php');
61-
62-// transport classes
63:require_once('class.soap_transport_http.php');
64-
65-// optional add-on classes
66:require_once('class.xmlschema.php');
67:require_once('class.wsdl.php');
68-
69-// server class
70:require_once('class.soap_server.php');*/
71-
72-// class variable emulation
73-// cf. http://www.webkreator.com/php/techniques/php-static-class-variables.html]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[57]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[54-/* load classes
55-
56-// necessary classes
57:require_once('class.soapclient.php');
58:require_once('class.soap_val.php');
59:require_once('class.soap_parser.php');
60:require_once('class.soap_fault.php');
61-
62-// transport classes
63:require_once('class.soap_transport_http.php');
64-
65-// optional add-on classes
66:require_once('class.xmlschema.php');
67:require_once('class.wsdl.php');
68-
69-// server class
70:require_once('class.soap_server.php');*/
71-
72-// class variable emulation
73-// cf. http://www.webkreator.com/php/techniques/php-static-class-variables.html]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2398]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2395-		return true;
2396-	  } else if ($this->io_method() == 'curl') {
2397-		if (!extension_loaded('curl')) {
2398://			$this->setError('cURL Extension, or OpenSSL extension w/ PHP version >= 4.3 is required for HTTPS');
2399:			$this->setError('The PHP cURL Extension is required for HTTPS or NLTM.  You will need to re-build or update your PHP to include cURL or change php.ini to load the PHP cURL extension.');
2400-			return false;
2401-		}
2402-		// Avoid warnings when PHP does not have these options]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3257]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3254-    			// if decoding works, use it. else assume data wasn't gzencoded
3255-    			if(function_exists('gzinflate')){
3256-					//$timer->setMarker('starting decoding of gzip/deflated content');
3257:					// IIS 5 requires gzinflate instead of gzuncompress (similar to IE 5 and gzdeflate v. gzcompress)
3258-					// this means there are no Zlib headers, although there should be
3259-					$this->debug('The gzinflate function exists');
3260-					$datalen = strlen($data);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4252]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[4249-					}
4250-				}
4251-			} elseif (strstr($this->headers['accept-encoding'], 'deflate')) {
4252:				// Note: MSIE requires gzdeflate output (no Zlib header and checksum),
4253-				// instead of gzcompress output,
4254-				// which conflicts with HTTP 1.1 spec (http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5)
4255-				if (function_exists('gzdeflate')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[94]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[91-define('W3TC_ADDIN_FILE_DB', WP_CONTENT_DIR . '/db.php');
92-define('W3TC_ADDIN_FILE_OBJECT_CACHE', WP_CONTENT_DIR . '/object-cache.php');
93-
94:require_once W3TC_INC_DIR . '/functions/compat.php';
95:require_once W3TC_INC_DIR . '/functions/plugin.php';
96-
97-@ini_set('pcre.backtrack_limit', 4194304);
98-@ini_set('pcre.recursion_limit', 4194304);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1030]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1027- * @return string
1028- */
1029-function w3_redirect($url = '', $params = array()) {
1030:    require_once W3TC_INC_DIR . '/functions/url.php';
1031-
1032-    $url = w3_url_format($url, $params);
1033-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1219]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1216-    static $instances = array();
1217-
1218-    if (!isset($instances[$class])) {
1219:        require_once W3TC_LIB_W3_DIR . '/' .
1220-                str_replace('_', '/', substr($class, 3)) . '.php';
1221-        @$instances[$class] = & new $class();
1222-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1239]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1236-    if ($dir) {
1237-        while (($entry = @readdir($dir)) !== false) {
1238-            if (strrchr($entry, '.') === '.php') {
1239:                require_once W3TC_PLUGINS_DIR . '/' . $entry;
1240-            }
1241-        }
1242-        @closedir($dir);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[6]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3-if (!defined('W3TC')) 
4-    die();
5-
6:require_once W3TC_INC_DIR . '/functions/file.php';
7:require_once W3TC_INC_DIR . '/functions/rule.php';
8- 
9-?>
10-<h3>Compatibility Test</h3>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[35-            <?php else: ?>
36-            <code><?php echo PHP_VERSION; ?></code>;
37-            <?php endif; ?>
38:            <span class="w3tc-self-test-hint">(PHP5 required for Minify, Rackspace CloudFiles, Microsoft Azure support)</span>
39-        </li>
40-
41-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[62-            <?php else: ?>
63-            <code>Not installed</code>
64-            <?php endif; ?>
65:            <span class="w3tc-self-test-hint">(required for Self-hosted (FTP) CDN support)</span>
66-        </li>
67-
68-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[75]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[72-            <?php else: ?>
73-            <code>Not installed</code>
74-            <?php endif; ?>
75:            <span class="w3tc-self-test-hint">(required for Rackspace Cloud Files support)</span>
76-        </li>
77-
78-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[85]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[82-            <?php else: ?>
83-            <code>Not installed</code>
84-            <?php endif; ?>
85:            <span class="w3tc-self-test-hint">(required for Amazon S3, Amazon CloudFront, Rackspace CloudFiles support)</span>
86-        </li>
87-
88-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[95]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[92-            <?php else: ?>
93-            <code>Not installed</code>
94-            <?php endif; ?>
95:            <span class="w3tc-self-test-hint">(required for compression support)</span>
96-        </li>
97-
98-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[129]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[126-            <?php else: ?>
127-            <code>Not installed</code>
128-            <?php endif; ?>
129:            <span class="w3tc-self-test-hint">(required for HTML Tidy minifier suppport)</span>
130-        </li>
131-
132-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[141]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[138-            <?php else:  ?>
139-            <code>Not installed</code>
140-            <?php endif; ?>
141:            <span class="w3tc-self-test-hint">(required for CDN support)</span>
142-        </li>
143-
144-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[153]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[150-            <?php else: ?>
151-            <code>Not installed</code>
152-            <?php endif; ?>
153:            <span class="w3tc-self-test-hint">(required for NetDNA purge support)</span>
154-        </li>
155-
156-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[218]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[215-                    <?php else: ?>
216-                    <code>Not detected</code>
217-                    <?php endif; ?>
218:                    <span class="w3tc-self-test-hint">(required for Page Cache (enhanced mode) and Browser Cache)</span>
219-                </li>
220-            <?php endforeach; ?>
221-        <?php endif; ?>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/minify_recommendations.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[132]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[129-
130-        <ul>
131-            <li>Typically minification of advertiser code, analytics/statistics or any other types of tracking code is not recommended.</li>
132:            <li>Scripts that were not already detected above may require <a href="admin.php?page=w3tc_support&amp;request_type=plugin_config">professional consultation</a> to implement.</li>
133-        </ul>
134-    </fieldset>
135-</div>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[35-
36-    <h3>Software Installation for Dedicated / Virtual Dedicated / Multiple Servers (Optional)</h3>
37-
38:	<p><strong>Server Preparation:</strong><br /><em>Time required: ~1 minute</em></p>
39-
40-    <ol>
41-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[70-
71-	<hr />
72-
73:    <p id="memcached"><strong>Memcached (Daemon) Installation:</strong><br /><em>Time required: 2 minutes</em></p>
74-
75-    <ol>
76-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[121]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[118-
119-	<hr />
120-
121:	<p id="memcache"><strong><acronym title="PHP Extension Community Library">PECL</acronym> Memcache Module Installation:</strong><br /><em>Time required: 1 minute</em></p>
122-
123-    <ol>
124-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[152]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[149-
150-	<hr />
151-
152:	<p id="APC"><strong><acronym title="PHP Extension Community Library">PECL</acronym> Alternative PHP Cache (<acronym title="Alternative PHP Cache">APC</acronym>) Installation (Recommended):</strong><br /><em>Time required: 1 minute</em></p>
153-
154-    <ol>
155-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[190]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[187-
188-	<hr />
189-
190:	<p id="XCache"><strong>XCache Installation:</strong><br /><em>Time required: 1 minute</em></p>
191-
192-    <ol>
193-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[223]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[220-
221-	<hr />
222-
223:	<p id="eAccelerator"><strong>eAccelerator Installation:</strong><br /><em>Time required: 1 minute</em></p>
224-
225-    <ol>
226-        <li>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/new_feature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php echo $this->postbox_header('Required information', 'required'); ?>
3-<table class="form-table">
4-    <tr>
5-        <th>Request type:</th>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/email_support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php echo $this->postbox_header('Required information', 'required'); ?>
3-<table class="form-table">
4-    <tr>
5-        <th>Request type:</th>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/linux_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php echo $this->postbox_header('Required information', 'required'); ?>
3-<table class="form-table">
4-    <tr>
5-        <th>Request type:</th>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/bug_report.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php echo $this->postbox_header('Required information', 'required'); ?>
3-<table class="form-table">
4-    <tr>
5-        <th>Request type:</th>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/phone_support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php echo $this->postbox_header('Required information', 'required'); ?>
3-<table class="form-table">
4-    <tr>
5-        <th>Request type:</th>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/plugin_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2:<?php echo $this->postbox_header('Required information', 'required'); ?>
3-<table class="form-table">
4-    <tr>
5-        <th>Request type:</th>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[2-<?php include W3TC_INC_DIR . '/options/common/header.php'; ?>
3-
4-<p>
5:	The plugin is currently <span class="w3tc-<?php if ($enabled): ?>enabled">enabled<?php else: ?>disabled">disabled<?php endif; ?></span>. If an option is disabled it means that either your current installation is not compatible or software installation is required.
6-</p>
7-
8-<form action="admin.php?page=<?php echo $this->_page; ?>" method="post">]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/widget/latest.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[6]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[3-	<?php echo __( 'Loading&#8230;' ) ?>
4-</p>
5-<p class="hide-if-js">
6:	<?php echo __( 'This widget requires JavaScript.' ) ?>
7-</p>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/plugin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[62- * @return boolean
63- */
64-function w3tc_dbcache_flush() {
65:    require_once W3TC_LIB_W3_DIR . '/Db.php';
66-
67-    @$w3_db = & W3_Db::instance();
68-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/activation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[55]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[52-    $reactivate_url = wp_nonce_url('plugins.php?action=activate&plugin=' . W3TC_FILE, 'activate-plugin_' . W3TC_FILE);
53-    $reactivate_button = sprintf('<input type="button" value="re-activate plugin" onclick="top.location.href = \'%s\'" />', addslashes($reactivate_url));
54-
55:    require_once W3TC_INC_DIR . '/functions/file.php';
56-
57-    if (w3_check_open_basedir($path)) {
58-        $error = sprintf('<strong>%s</strong> could not be created, please run following command:<br /><strong style="color: #f00;">chmod 777 %s</strong><br />then %s.', $path, (file_exists($path) ? $path : dirname($path)), $reactivate_button);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/compat.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[27]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[24-        global $json;
25-
26-        if (!is_a($json, 'Services_JSON')) {
27:            require_once W3TC_LIB_DIR . '/JSON.php';
28-            $json = new Services_JSON();
29-        }
30-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/compat.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[40]]></line_number>
		<match><![CDATA[require]]></match>
		<name><![CDATA[require]]></name>
		<snippet><![CDATA[37-        global $json;
38-
39-        if (!is_a($json, 'Services_JSON')) {
40:            require_once W3TC_LIB_DIR . '/JSON.php';
41-            $json = new Services_JSON();
42-        }
43-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./w3-total-cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-     * Require plugin configuration
40-     */
41:    require_once dirname(__FILE__) . '/inc/define.php';
42-
43-    /**
44-     * Load plugins]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/advanced-cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[21]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[18-            die(sprintf('<strong>W3 Total Cache Error:</strong> some files appear to be missing or out of place. Please re-install plugin or remove <strong>%s</strong>.', __FILE__));
19-        }
20-    } else {
21:        require_once W3TC_DIR . '/inc/define.php';
22-
23-        $redirect = & w3_instance('W3_Redirect');
24-        $redirect->process();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[16]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[13-
14-if (!@is_dir(W3TC_DIR) || !file_exists(W3TC_DIR . '/inc/define.php')) {
15-    if (!defined('WP_ADMIN')) { // lets don't show error on front end
16:        require_once (ABSPATH . WPINC . '/wp-db.php');
17-    } else {
18-        @header('HTTP/1.1 503 Service Unavailable');
19-        die(sprintf('<strong>W3 Total Cache Error:</strong> some files appear to be missing or out of place. Please re-install plugin or remove <strong>%s</strong>.', __FILE__));
20-    }
21-} else {
22:    require_once W3TC_DIR . '/inc/define.php';
23-
24-    $config = & w3_instance('W3_Config');
25-    if ($config->get_boolean('dbcache.enabled')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[27-            $db_driver_path = sprintf('%s/Db/%s.php', W3TC_LIB_W3_DIR, DB_TYPE);
28-
29-            if (file_exists($db_driver_path)) {
30:                require_once $db_driver_path;
31-            } else {
32-                die(sprintf('<strong>W3 Total Cache Error:</strong> database driver doesn\'t exist: %s.', $db_driver_path));
33-            }
34-        }
35-
36:        require_once W3TC_LIB_W3_DIR . '/Db.php';
37-
38-        @$GLOBALS['wpdb'] = & W3_Db::instance();
39-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/object-cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[16]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[13-
14-if (!@is_dir(W3TC_DIR) || !file_exists(W3TC_DIR . '/inc/define.php')) {
15-    if (!defined('WP_ADMIN')) { // lets don't show error on front end
16:        require_once (ABSPATH . WPINC . '/cache.php');
17-    } else {
18-        @header('HTTP/1.1 503 Service Unavailable');
19-        die(sprintf('<strong>W3 Total Cache Error:</strong> some files appear to be missing or out of place. Please re-install plugin or remove <strong>%s</strong>.', __FILE__));
20-    }
21-} else {
22:    require_once W3TC_DIR . '/inc/define.php';
23-
24-    /**
25-     * Init cache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/w3tc/min/index.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[10-define('W3TC_IN_MINIFY', true);
11-
12-if (!defined('ABSPATH')) {
13:    require_once dirname(__FILE__) . '/../../../wp-load.php';
14-}
15-
16-if (!defined('W3TC_DIR')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/w3tc/min/index.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[25]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[22-    die(sprintf('<strong>W3 Total Cache Error:</strong> some files appear to be missing or out of place. Please re-install plugin or remove <strong>%s</strong>.', dirname(__FILE__)));
23-}
24-
25:require_once W3TC_DIR . '/inc/define.php';
26-
27-$w3_minify = & w3_instance('W3_Minify');
28-$w3_minify->process();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[27-
28-/**
29- */
30:require_once("cloudfiles_exceptions.php");
31-
32-define("PHP_CF_VERSION", "1.7.6");
33-define("USER_AGENT", sprintf("PHP-CloudFiles/%s", PHP_CF_VERSION));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[74]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[71-
72-/**
73- */
74:require_once("cloudfiles_exceptions.php");
75-require("cloudfiles_http.php");
76-define("DEFAULT_CF_API_VERSION", 1);
77-define("MAX_CONTAINER_NAME_LEN", 256);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1675]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1672-        if ($this->content_type)
1673-            return;
1674-
1675:        require_once W3TC_INC_DIR . '/functions/mime.php';
1676-
1677-        $this->content_type = w3_get_mime_type($handle);
1678-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Varnish.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[57]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[54-     * @return boolean
55-     */
56-    function purge($uri) {
57:        require_once W3TC_INC_DIR . '/functions/http.php';
58-
59-        @set_time_limit($this->_timeout);
60-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[47]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[44-     * @return void
45-     */
46-    function process() {
47:        require_once W3TC_LIB_W3_DIR . '/Request.php';
48-
49-        /**
50-         * Check for rewrite test request]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[78]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[75-            return;
76-        }
77-
78:        require_once W3TC_LIB_MINIFY_DIR . '/Minify.php';
79:        require_once W3TC_LIB_MINIFY_DIR . '/HTTP/Encoder.php';
80-
81-        /**
82-         * Fix DOCUMENT_ROOT]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[101]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[98-        /**
99-         * Set logger
100-         */
101:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/Logger.php';
102-        Minify_Logger::setLogger(array(
103-                                      &$this,
104-                                      'error')]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[566]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[563-        $cache_path = sprintf('%s/minify_%s.%s', W3TC_CACHE_FILE_MINIFY_DIR, md5($url), $type);
564-
565-        if (!file_exists($cache_path) || @filemtime($cache_path) < (time() - $lifetime)) {
566:            require_once W3TC_INC_DIR . '/functions/http.php';
567-            w3_download($url, $cache_path);
568-        }
569-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[581]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[578-     * @return Minify_Source
579-     */
580-    function _get_minify_source($file_path, $url) {
581:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/Source.php';
582-
583-        return new Minify_Source(array(
584-                                      'filepath' => $file_path,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[602]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[599-        if (!isset($cache[0])) {
600-            switch ($this->_config->get_string('minify.engine')) {
601-                case 'memcached':
602:                    require_once W3TC_LIB_W3_DIR . '/Cache/Memcached.php';
603:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/Memcache.php';
604-                    @$w3_cache_memcached = & new W3_Cache_Memcached(array(
605-                                                                         'servers' => $this->_config->get_array('minify.memcached.servers'),
606-                                                                         'persistant' => $this->_config->get_boolean('minify.memcached.persistant')]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[612]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[609-                    break;
610-
611-                case 'apc':
612:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/APC.php';
613-                    @$cache[0] = & new Minify_Cache_APC();
614-                    break;
615-
616-                case 'eaccelerator':
617:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/Eaccelerator.php';
618-                    @$cache[0] = & new Minify_Cache_Eaccelerator();
619-                    break;
620-
621-                case 'xcache':
622:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/XCache.php';
623-                    @$cache[0] = & new Minify_Cache_XCache();
624-                    break;
625-
626-                case 'wincache':
627:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/Wincache.php';
628-                    @$cache[0] = & new Minify_Cache_Wincache();
629-                    break;
630-
631-                case 'file':
632-                default:
633:                    require_once W3TC_LIB_MINIFY_DIR . '/Minify/Cache/File.php';
634-
635-                    @$cache[0] = & new Minify_Cache_File(
636-                        W3TC_CACHE_FILE_MINIFY_DIR,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[651]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[648-                    $engineConfig = array();
649-            }
650-
651:            require_once W3TC_LIB_W3_DIR . '/Cache.php';
652-            @$cache[0] = & W3_Cache::instance($engine, $engineConfig);
653-        }
654-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[694]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[691-     * @return boolean
692-     */
693-    function _check_ua() {
694:        require_once W3TC_LIB_W3_DIR . '/Request.php';
695-
696-        $uas = $this->_config->get_array('pgcache.reject.ua');
697-        $preload = W3_Request::get_boolean('w3tc_preload');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1250]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1247-        }
1248-
1249-        if ($bb_file) {
1250:            require_once $bb_file;
1251-        }
1252-    }
1253-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[37]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[34-        if (!isset($instances[$instance_key])) {
35-            switch ($engine) {
36-                case W3TC_CACHE_MEMCACHED:
37:                    require_once W3TC_LIB_W3_DIR . '/Cache/Memcached.php';
38-                    @$instances[$instance_key] = & new W3_Cache_Memcached($config);
39-                    break;
40-
41-                case W3TC_CACHE_APC:
42:                    require_once W3TC_LIB_W3_DIR . '/Cache/Apc.php';
43-                    @$instances[$instance_key] = & new W3_Cache_Apc();
44-                    break;
45-
46-                case W3TC_CACHE_EACCELERATOR:
47:                    require_once W3TC_LIB_W3_DIR . '/Cache/Eaccelerator.php';
48-                    @$instances[$instance_key] = & new W3_Cache_Eaccelerator();
49-                    break;
50-
51-                case W3TC_CACHE_XCACHE:
52:                    require_once W3TC_LIB_W3_DIR . '/Cache/Xcache.php';
53-                    @$instances[$instance_key] = & new W3_Cache_Xcache();
54-                    break;
55-
56-                case W3TC_CACHE_WINCACHE:
57:                    require_once W3TC_LIB_W3_DIR . '/Cache/Wincache.php';
58-                    @$instances[$instance_key] = & new W3_Cache_Wincache();
59-                    break;
60-
61-                case W3TC_CACHE_FILE:
62:                    require_once W3TC_LIB_W3_DIR . '/Cache/File.php';
63-                    @$instances[$instance_key] = & new W3_Cache_File($config);
64-                    break;
65-
66-                case W3TC_CACHE_FILE_GENERIC:
67:                    require_once W3TC_LIB_W3_DIR . '/Cache/File/Generic.php';
68-                    @$instances[$instance_key] = & new W3_Cache_File_Generic($config);
69-                    break;
70-
71-                default:
72-                    trigger_error('Incorrect cache engine', E_USER_WARNING);
73:                    require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
74-                    @$instances[$instance_key] = & new W3_Cache_Base();
75-                    break;
76-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PageSpeed.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[70-     * @return string
71-     */
72-    function _request($url) {
73:        require_once W3TC_INC_DIR . '/functions/http.php';
74:        require_once W3TC_INC_DIR . '/functions/url.php';
75-
76-        $request_url = w3_url_format(W3TC_PAGESPEED_API_URL, array(
77-            'url' => $url,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[36]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[33-        if (!isset($instances[$instance_key])) {
34-            switch (true) {
35-                case ($engine == W3TC_CDN_FTP):
36:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Ftp.php';
37-                    @$instances[$instance_key] = & new W3_Cdn_Ftp($config);
38-                    break;
39-
40-                case (W3TC_PHP5 && $engine == W3TC_CDN_S3):
41:                    require_once W3TC_LIB_W3_DIR . '/Cdn/S3.php';
42-                    @$instances[$instance_key] = & new W3_Cdn_S3($config);
43-                    break;
44-
45-                case (W3TC_PHP5 && $engine == W3TC_CDN_CF_S3):
46:                    require_once W3TC_LIB_W3_DIR . '/Cdn/S3/Cf/S3.php';
47-                    @$instances[$instance_key] = & new W3_Cdn_S3_Cf_S3($config);
48-                    break;
49-
50-                case (W3TC_PHP5 && $engine == W3TC_CDN_CF_CUSTOM):
51:                    require_once W3TC_LIB_W3_DIR . '/Cdn/S3/Cf/Custom.php';
52-                    @$instances[$instance_key] = & new W3_Cdn_S3_Cf_Custom($config);
53-                    break;
54-
55-                case (W3TC_PHP5 && $engine == W3TC_CDN_RSCF):
56:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Rscf.php';
57-                    @$instances[$instance_key] = & new W3_Cdn_Rscf($config);
58-                    break;
59-
60-                case (W3TC_PHP5 && $engine == W3TC_CDN_AZURE):
61:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Azure.php';
62-                    @$instances[$instance_key] = & new W3_Cdn_Azure($config);
63-                    break;
64-
65-                case ($engine == W3TC_CDN_MIRROR):
66:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror.php';
67-                    @$instances[$instance_key] = & new W3_Cdn_Mirror($config);
68-                    break;
69-
70-                case ($engine == W3TC_CDN_NETDNA):
71:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror/Netdna.php';
72-                    @$instances[$instance_key] = & new W3_Cdn_Mirror_Netdna($config);
73-                    break;
74-
75-                case ($engine == W3TC_CDN_COTENDO):
76:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror/Cotendo.php';
77-                    @$instances[$instance_key] = & new W3_Cdn_Mirror_Cotendo($config);
78-                    break;
79-
80-                case ($engine == W3TC_CDN_EDGECAST):
81:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror/Edgecast.php';
82-                    @$instances[$instance_key] = & new W3_Cdn_Mirror_Edgecast($config);
83-                    break;
84-
85-                default :
86-                    trigger_error('Incorrect CDN engine', E_USER_WARNING);
87:                    require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
88-                    @$instances[$instance_key] = & new W3_Cdn_Base();
89-                    break;
90-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Xcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Xcache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Apc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Apc]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Memcached.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Memcached]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[9-
10-define('W3TC_CACHE_FILE_EXPIRE_MAX', 2592000);
11-
12:require_once W3TC_INC_DIR . '/functions/file.php';
13:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
14-
15-/**
16- * Class W3_Cache_File]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Wincache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Wincache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Eaccelerator.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/Base.php';
11-
12-/**
13- * Class W3_Cache_Eaccelerator]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_LIB_W3_DIR . '/Cache/File.php';
12-
13-/**
14- * Class W3_Cache_File_Generic]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Cleaner/Generic.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner.php';
11-
12-/**
13- * Class W3_Cache_File_Cleaner_Generic]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File/Cleaner.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cache/File.php';
11-
12-/**
13- * Class W3_Cache_File_Cleaner]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[8-}
9-
10-if (!class_exists('W3_Db_Driver')) {
11:    require_once ABSPATH . 'wp-includes/wp-db.php';
12-
13-    class W3_Db_Driver extends wpdb {
14-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[325]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[322-                    $engineConfig = array();
323-            }
324-        $engineConfig['module'] = 'dbcache';
325:            require_once W3TC_LIB_W3_DIR . '/Cache.php';
326-            @$cache[0] = & W3_Cache::instance($engine, $engineConfig);
327-        }
328-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1208]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1205-     * Reads config from request
1206-     */
1207-    function read_request() {
1208:        require_once W3TC_LIB_W3_DIR . '/Request.php';
1209-
1210-        $request = W3_Request::get_request();
1211-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/rule.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_MinifyAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[21]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[18-     * Activate plugin action
19-     */
20-    function activate() {
21:        require_once W3TC_INC_DIR . '/functions/activation.php';
22-
23-        if (!@is_dir(W3TC_CONTENT_MINIFY_DIR) && !@mkdir(W3TC_CONTENT_MINIFY_DIR)) {
24-            w3_writable_error(W3TC_CONTENT_MINIFY_DIR);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[91]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[88-     * @return void
89-     */
90-    function cleanup() {
91:        require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner/Generic.php';
92-
93-        @$w3_cache_file_cleaner_generic = & new W3_Cache_File_Cleaner_Generic(array(
94-            'exclude' => array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_BrowserCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_Minify]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[278]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[275-     * @return array
276-     */
277-    function get_files_js(&$buffer) {
278:        require_once W3TC_INC_DIR . '/functions/extract.php';
279-
280-        $files = w3_extract_js($buffer);
281-        $files = $this->filter_files($files);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[293]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[290-     * @return array
291-     */
292-    function get_files_css(&$buffer) {
293:        require_once W3TC_INC_DIR . '/functions/extract.php';
294-
295-        $files = w3_extract_css($buffer);
296-        $files = $this->filter_files($files);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[462]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[459-        $ignored_comments = $this->_config->get_array('minify.html.comments.ignore');
460-
461-        if (count($ignored_comments)) {
462:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/IgnoredCommentPreserver.php';
463-
464-            @$ignored_comments_preserver =& new Minify_IgnoredCommentPreserver();
465-            $ignored_comments_preserver->setIgnoredComments($ignored_comments);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[482]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[479-
480-            $w3_minifier->init($js_engine);
481-
482:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline.php';
483:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline/JavaScript.php';
484-
485-            $html = Minify_Inline_JavaScript::minify($html, $js_minifier, $js_options);
486-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[500]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[497-
498-            $w3_minifier->init($css_engine);
499-
500:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline.php';
501:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline/CSS.php';
502-
503-            $html = Minify_Inline_CSS::minify($html, $css_minifier, $css_options);
504-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_INC_DIR . '/functions/http.php';
12:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
13-
14-/**
15- * Class W3_Plugin_CdnAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[31]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[28-     * Activation action
29-     */
30-    function activate() {
31:        require_once W3TC_INC_DIR . '/functions/activation.php';
32-
33-        global $wpdb;
34-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[537]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[534-                                         * Check if download or copy was successful
535-                                         */
536-                                        if ($download_result) {
537:                                            require_once W3TC_INC_DIR . '/functions/mime.php';
538-
539-                                            $title = $dst_basename;
540-                                            $guid = ltrim($upload_info['baseurlpath'] . $title, ',');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[560]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[557-                                                /**
558-                                                 * Generate attachment metadata and upload to CDN
559-                                                 */
560:                                                require_once ABSPATH . 'wp-admin/includes/image.php';
561-                                                wp_update_attachment_metadata($id, wp_generate_attachment_metadata($id, $dst));
562-
563-                                                $attachments[$src] = array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_PgCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/rule.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_BrowserCacheAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[9-
10-define('W3TC_PLUGIN_TOTALCACHE_REGEXP_COOKIEDOMAIN', '~define\s*\(\s*[\'"]COOKIE_DOMAIN[\'"]\s*,.*?\)~is');
11-
12:require_once W3TC_INC_DIR . '/functions/rule.php';
13:require_once W3TC_INC_DIR . '/functions/http.php';
14:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
15-
16-/**
17- * Class W3_Plugin_TotalCacheAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[234]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[231-     * @return void
232-     */
233-    function load() {
234:        require_once W3TC_LIB_W3_DIR . '/Request.php';
235-
236-        $this->_page = W3_Request::get_string('page');
237-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[677]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[674-            'cdn_purge_attachment' => 'Unable to purge attachment.',
675-            'pgcache_purge_post' => 'Unable to purge post.',
676-            'pgcache_purge_page' => 'Unable to purge page.',
677:            'enable_cookie_domain' => sprintf('<strong>%swp-config.php</strong> could not be written, please edit config and add:<br /><strong style="color:#f00;">define(\'COOKIE_DOMAIN\', \'%s\');</strong> before <strong style="color:#f00;">require_once(ABSPATH . \'wp-settings.php\');</strong>.', ABSPATH, addslashes($cookie_domain)),
678:            'disable_cookie_domain' => sprintf('<strong>%swp-config.php</strong> could not be written, please edit config and add:<br /><strong style="color:#f00;">define(\'COOKIE_DOMAIN\', false);</strong> before <strong style="color:#f00;">require_once(ABSPATH . \'wp-settings.php\');</strong>.', ABSPATH),
679-            'cloudflare_api_request' => 'Unable to make CloudFlare API request.'
680-        );
681-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[720]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[717-        */
718-        $this->_check_cloudflare_lasterror();
719-
720:        require_once W3TC_LIB_W3_DIR . '/Request.php';
721-
722-        $request_errors = W3_Request::get_string('w3tc_error');
723-        $request_notes = W3_Request::get_string('w3tc_note');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1519]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1516-
1517-        $auto = $this->_config->get_boolean('minify.auto');
1518-
1519:        require_once W3TC_LIB_W3_DIR . '/Request.php';
1520-
1521-        $js_theme = W3_Request::get_string('js_theme', $current_theme_key);
1522-        $js_groups = $this->_config->get_array('minify.js.groups');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1639]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1636-     * @return void
1637-     */
1638-    function options_support() {
1639:        require_once W3TC_LIB_W3_DIR . '/Request.php';
1640-
1641-        $request_type = W3_Request::get_string('request_type');
1642-        $payment = W3_Request::get_boolean('payment');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1834]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1831-     */
1832-    function widget_latest_control($widget_id, $form_inputs = array()) {
1833-        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
1834:            require_once W3TC_LIB_W3_DIR . '/Request.php';
1835-
1836-            $this->_config->set('widget.latest.items', W3_Request::get_integer('w3tc_widget_latest_items', 3));
1837-            $this->_config->save();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1849]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1846-     * @return void
1847-     */
1848-    function widget_pagespeed() {
1849:        require_once W3TC_LIB_W3_DIR . '/PageSpeed.php';
1850:        require_once W3TC_LIB_W3_DIR . '/Request.php';
1851-
1852-        $key = $this->_config->get_string('widget.pagespeed.key');
1853-        $force = W3_Request::get_boolean('w3tc_widget_pagespeed_force');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1873]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1870-     */
1871-    function widget_pagespeed_control($widget_id, $form_inputs = array()) {
1872-        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
1873:            require_once W3TC_LIB_W3_DIR . '/Request.php';
1874-
1875-            $this->_config->set('widget.pagespeed.key', W3_Request::get_string('w3tc_widget_pagespeed_key'));
1876-            $this->_config->save();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2092]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2089-     * @return void
2090-     */
2091-    function action_preview_save() {
2092:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2093-
2094-        $preview = W3_Request::get_boolean('preview');
2095-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2155]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2152-     * @return void
2153-     */
2154-    function action_support_payment() {
2155:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2156-
2157-        $request_type = W3_Request::get_string('request_type');
2158-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2178]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2175-    function action_support_form() {
2176-        global $current_user;
2177-
2178:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2179-
2180-        $name = '';
2181-        $email = '';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2236]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2233-     * @return void
2234-     */
2235-    function action_support_request() {
2236:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2237-
2238-        $request_type = W3_Request::get_string('request_type');
2239-        $payment = W3_Request::get_boolean('payment');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2551]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2548-     * @return void
2549-     */
2550-    function action_cdn_queue() {
2551:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2552-
2553-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnAdmin');
2554-        $cdn_queue_action = W3_Request::get_string('cdn_queue_action');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2614]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2611-     * @return void
2612-     */
2613-    function action_cdn_export_library_process() {
2614:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2615-
2616-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnAdmin');
2617-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2663]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2660-     * @return void
2661-     */
2662-    function action_cdn_import_library_process() {
2663:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2664-
2665-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnAdmin');
2666-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2708]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2705-     * @return void
2706-     */
2707-    function action_cdn_rename_domain_process() {
2708:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2709-
2710-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnAdmin');
2711-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2739]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2736-     * @return void
2737-     */
2738-    function action_cdn_export() {
2739:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2740-
2741-        $w3_plugin_cdn = & w3_instance('W3_Plugin_Cdn');
2742-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2777]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2774-     * @return void
2775-     */
2776-    function action_cdn_export_process() {
2777:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2778-
2779-        $w3_plugin_cdn = & w3_instance('W3_Plugin_CdnCommon');
2780-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2822]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2819-        $title = 'Content Delivery Network (CDN): Purge Tool';
2820-        $results = array();
2821-
2822:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2823-
2824-        $files = W3_Request::get_array('files');
2825-        $document_root = w3_get_document_root();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2850]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2847-     * @return void
2848-     */
2849-    function action_cdn_purge_attachment() {
2850:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2851-
2852-        $results = array();
2853-        $attachment_id = W3_Request::get_integer('attachment_id');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2874]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2871-     * @return void
2872-     */
2873-    function action_cdn_test() {
2874:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2875:        require_once W3TC_LIB_W3_DIR . '/Cdn.php';
2876-
2877-        $engine = W3_Request::get_string('engine');
2878-        $config = W3_Request::get_array('config');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2920]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2917-     * @return void
2918-     */
2919-    function action_cdn_create_container() {
2920:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2921:        require_once W3TC_LIB_W3_DIR . '/Cdn.php';
2922-
2923-        $engine = W3_Request::get_string('engine');
2924-        $config = W3_Request::get_array('config');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2973]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2970-     * @return void
2971-     */
2972-    function action_cdn_s3_bucket_location() {
2973:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2974-
2975-        $type = W3_Request::get_string('type', 's3');
2976-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2993]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[2990-     * @return void
2991-     */
2992-    function action_test_memcached() {
2993:        require_once W3TC_LIB_W3_DIR . '/Request.php';
2994-
2995-        $servers = W3_Request::get_array('servers');
2996-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3020]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3017-     */
3018-    function action_test_minifier() {
3019-        if (W3TC_PHP5) {
3020:            require_once W3TC_LIB_W3_DIR . '/Request.php';
3021-
3022-            $engine = W3_Request::get_string('engine');
3023-            $path_java = W3_Request::get_string('path_java');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3036]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3033-            } else {
3034-                switch ($engine) {
3035-                    case 'yuijs':
3036:                        require_once W3TC_LIB_MINIFY_DIR . '/Minify/YUICompressor.php';
3037-
3038-                        Minify_YUICompressor::setPathJava($path_java);
3039-                        Minify_YUICompressor::setPathJar($path_jar);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3045]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3042-                        break;
3043-
3044-                    case 'yuicss':
3045:                        require_once W3TC_LIB_MINIFY_DIR . '/Minify/YUICompressor.php';
3046-
3047-                        Minify_YUICompressor::setPathJava($path_java);
3048-                        Minify_YUICompressor::setPathJar($path_jar);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3054]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3051-                        break;
3052-
3053-                    case 'ccjs':
3054:                        require_once W3TC_LIB_MINIFY_DIR . '/Minify/ClosureCompiler.php';
3055-
3056-                        Minify_ClosureCompiler::setPathJava($path_java);
3057-                        Minify_ClosureCompiler::setPathJar($path_jar);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3116]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3113-     * @return void
3114-     */
3115-    function action_save_options() {
3116:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3117-
3118-        /**
3119-         * Redirect params]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3478]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3475-                     * Handle CloudFlare changes
3476-                     */
3477-                    if ($this->_config->get_boolean('cloudflare.enabled')) {
3478:                        require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
3479-                        W3_CloudFlare::clear_last_error('');
3480-
3481-                        $cloudflare_seclvl_old = W3_Request::get_string('cloudflare_seclvl_old');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3580]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3577-     * @return void
3578-     */
3579-    function action_pgcache_purge_post() {
3580:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3581-
3582-        $post_id = W3_Request::get_integer('post_id');
3583-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3603]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3600-     * @return void
3601-     */
3602-    function action_pgcache_purge_page() {
3603:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3604-
3605-        $post_id = W3_Request::get_integer('post_id');
3606-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3735]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3732-        $current_theme = get_current_theme();
3733-        $current_theme_key = array_search($current_theme, $themes);
3734-
3735:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3736-
3737-        $theme_key = W3_Request::get_string('theme_key', $current_theme_key);
3738-        $theme_name = (isset($themes[$theme_key]) ? $themes[$theme_key] : $current_theme);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3804]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3801-            'fpurge_ts'
3802-        );
3803-
3804:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3805-
3806-        $email = W3_Request::get_string('email');
3807-        $key = W3_Request::get_string('key');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3827]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3824-                'zone' => $zone
3825-            );
3826-
3827:            require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
3828-            @$w3_cloudflare =& new W3_CloudFlare($config);
3829-
3830-            @set_time_limit($this->_config->get_integer('timelimit.cloudflare_api_request'));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3879]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3876-     * @return void
3877-     */
3878-    function action_pagespeed_results() {
3879:        require_once W3TC_LIB_W3_DIR . '/Request.php';
3880:        require_once W3TC_LIB_W3_DIR . '/PageSpeed.php';
3881-
3882-        $force = W3_Request::get_boolean('force');
3883-        $title = 'Google Page Speed';]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4506]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[4503-     * @return void
4504-     */
4505-    function flush_dbcache() {
4506:        require_once W3TC_LIB_W3_DIR . '/Db.php';
4507-        @$w3_db = & W3_Db::instance();
4508-
4509-        $w3_db->flush_cache();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5117]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[5114-     * @return array
5115-     */
5116-    function get_recommendations_js(&$content) {
5117:        require_once W3TC_INC_DIR . '/functions/extract.php';
5118-
5119-        $files = w3_extract_js($content);
5120-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5134]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[5131-     * @return array
5132-     */
5133-    function get_recommendations_css(&$content) {
5134:        require_once W3TC_INC_DIR . '/functions/extract.php';
5135-
5136-        $files = w3_extract_css($content);
5137-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5321]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[5318-        $key = md5(implode('', $servers));
5319-
5320-        if (!isset($results[$key])) {
5321:            require_once W3TC_LIB_W3_DIR . '/Cache/Memcached.php';
5322-
5323-            @$memcached = & new W3_Cache_Memcached(array(
5324-                'servers' => $servers,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5560]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[5557-        $support = $this->_config->get_string('common.support');
5558-        $matches = null;
5559-        if ($support != '' && preg_match('~^link_category_(\d+)$~', $support, $matches)) {
5560:            require_once ABSPATH . 'wp-admin/includes/bookmark.php';
5561-
5562-            wp_insert_link(array(
5563-                'link_url' => W3TC_LINK_URL,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5587]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[5584-            }
5585-        }
5586-        if ($link_id) {
5587:            require_once ABSPATH . 'wp-admin/includes/bookmark.php';
5588-            wp_delete_link($link_id);
5589-        }
5590-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5723]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[5720-     * @return void
5721-     */
5722-    function redirect($params = array(), $check_referrer = false) {
5723:        require_once W3TC_LIB_W3_DIR . '/Request.php';
5724-
5725-        $url = W3_Request::get_string('redirect');
5726-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5826]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[5823-            'zone' => $this->_config->get_string('cloudflare.zone')
5824-        );
5825-
5826:        require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
5827-        @$w3_cloudflare =& new W3_CloudFlare($config);
5828-
5829-        $response = $w3_cloudflare->api_request('stats');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_CdnCommon]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[50]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[47-     * @return array
48-     */
49-    function get_files_for_upload($file) {
50:        require_once W3TC_INC_DIR . '/functions/http.php';
51-
52-        $files = array();
53-        $upload_info = w3_upload_info();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[248]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[245-     * @return string
246-     */
247-    function normalize_attachment_file($file) {
248:        require_once W3TC_INC_DIR . '/functions/http.php';
249-
250-        $upload_info = w3_upload_info();
251-        if ($upload_info) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[391]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[388-                'debug' => $this->_config->get_boolean('cdn.debug')
389-            ));
390-
391:            require_once W3TC_LIB_W3_DIR . '/Cdn.php';
392-            @$cdn[0] = & W3_Cdn::instance($engine, $engine_config);
393-
394-            /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/rule.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_PgCacheAdmin]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[21]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[18-     * Activate plugin action
19-     */
20-    function activate() {
21:        require_once W3TC_INC_DIR . '/functions/activation.php';
22-
23-        if ($this->_config->get_boolean('pgcache.enabled') && $this->_config->get_string('pgcache.engine') == 'file_generic') {
24-            /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[51]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[48-            if ((!defined('WP_CACHE') || !WP_CACHE) && !$this->enable_wp_cache()) {
49-                $reactivate_url = wp_nonce_url('plugins.php?action=activate&plugin=' . W3TC_FILE, 'activate-plugin_' . W3TC_FILE);
50-                $reactivate_button = sprintf('<input type="button" value="re-activate plugin" onclick="top.location.href = \'%s\'" />', addslashes($reactivate_url));
51:                $error = sprintf('<strong>%swp-config.php</strong> could not be written, please edit config and add:<br /><strong style="color:#f00;">define(\'WP_CACHE\', true);</strong> before <strong style="color:#f00;">require_once(ABSPATH . \'wp-settings.php\');</strong><br />then %s.', ABSPATH, $reactivate_button);
52-
53-                w3_activate_error($error);
54-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[134]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[131-
132-        switch ($engine) {
133-            case 'file':
134:                require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner.php';
135-
136-                @$w3_cache_file_cleaner = & new W3_Cache_File_Cleaner(array(
137-                    'cache_dir' => W3TC_CACHE_FILE_PGCACHE_DIR,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[145]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[142-                break;
143-
144-            case 'file_generic':
145:                require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner/Generic.php';
146-
147-                @$w3_cache_file_cleaner_generic = & new W3_Cache_File_Cleaner_Generic(array(
148-                    'exclude' => array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[210]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[207-        /**
208-         * Make HTTP requests and prime cache
209-         */
210:        require_once W3TC_INC_DIR . '/functions/http.php';
211:        require_once W3TC_INC_DIR . '/functions/url.php';
212-
213-        foreach ($queue as $url) {
214-            $url = w3_url_format($url, array('w3tc_preload' => 1));]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[227]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[224-     * @return array
225-     */
226-    function parse_sitemap($url) {
227:        require_once W3TC_INC_DIR . '/functions/http.php';
228-
229-        $urls = array();
230-        $response = w3_http_get($url);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_Cdn]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[251]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[248-                $domain_url_regexp = w3_get_domain_url_regexp();
249-
250-                if ($this->_config->get_boolean('cdn.uploads.enable')) {
251:                    require_once W3TC_INC_DIR . '/functions/http.php';
252-
253-                    $upload_info = w3_upload_info();
254-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[399]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[396-        $files = array();
397-
398-        if (W3TC_PHP5 && $this->_config->get_boolean('minify.rewrite') && (!$this->_config->get_boolean('minify.auto') || w3_is_cdn_mirror($this->_config->get_string('cdn.engine')))) {
399:            require_once W3TC_INC_DIR . '/functions/http.php';
400-
401-            $minify = & w3_instance('W3_Plugin_Minify');
402-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/DbCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_DbCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/DbCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[94-     * Activate plugin action (called by W3_PluginProxy)
95-     */
96-    function activate() {
97:        require_once W3TC_INC_DIR . '/functions/activation.php';
98-        
99-        if (!$this->locked() && !@copy(W3TC_INSTALL_FILE_DB, W3TC_ADDIN_FILE_DB)) {
100-            w3_writable_error(W3TC_ADDIN_FILE_DB);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/DbCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[145]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[142-     * @return void
143-     */
144-    function cleanup() {
145:        require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner.php';
146-        
147-        @$w3_cache_file_cleaner = & new W3_Cache_File_Cleaner(array(
148-            'cache_dir' => W3TC_CACHE_FILE_DBCACHE_DIR,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/DbCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[179]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[176-        static $flushed = false;
177-
178-        if (!$flushed) {
179:            require_once W3TC_LIB_W3_DIR . '/Db.php';
180-            @$w3_db = & W3_Db::instance();
181-
182-            $w3_db->flush_cache();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/file.php';
11-
12-/**
13- * Class W3_Plugin_CdnEnabled]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[94-     * Activation action
95-     */
96-    function activate() {
97:        require_once W3TC_INC_DIR . '/functions/activation.php';
98-
99-        global $wpdb;
100-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1039]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1036-                                             * Download file
1037-                                             */
1038-                                            if ($import_external) {
1039:                                                require_once W3TC_INC_DIR . '/http.php';
1040-
1041-                                                $download_result = w3_download($src, $dst);
1042-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1070]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1067-                                         * Check if download or copy was successful
1068-                                         */
1069-                                        if ($download_result) {
1070:                                            require_once W3TC_INC_DIR . '/functions/mime.php';
1071-
1072-                                            $title = $dst_basename;
1073-                                            $guid = ltrim($upload_info['baseurlpath'] . $title, ',');]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1093]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1090-                                                /**
1091-                                                 * Generate attachment metadata and upload to CDN
1092-                                                 */
1093:                                                require_once ABSPATH . 'wp-admin/includes/image.php';
1094-                                                wp_update_attachment_metadata($id, wp_generate_attachment_metadata($id, $dst));
1095-
1096-                                                $attachments[$src] = array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1369]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1366-        $files = array();
1367-
1368-        if (W3TC_PHP5 && $this->_config->get_boolean('minify.rewrite') && (!$this->_config->get_boolean('minify.auto') || w3_is_cdn_mirror($this->_config->get_string('cdn.engine')))) {
1369:            require_once W3TC_INC_DIR . '/http.php';
1370-
1371-            $minify = & w3_instance('/Plugin/MinifyEnabled.php');
1372-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1736]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1733-                'debug' => $this->_config->get_boolean('cdn.debug')
1734-            ));
1735-
1736:            require_once W3TC_LIB_W3_DIR . '/Cdn.php';
1737-            $cdn[0] = & W3_Cdn::instance($engine, $engine_config);
1738-
1739-            /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11:require_once W3TC_LIB_W3_DIR . '/PluginProxy.php';
12-
13-/**
14- * Class W3_Plugin_TotalCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[75]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[72-                'cloudflare_set_comment_status'
73-            ), 1, 2);
74-
75:            require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
76-            @$w3_cloudflare =& new W3_CloudFlare();
77-
78-            $w3_cloudflare->fix_remote_addr();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[176]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[173-        /**
174-         * Check for rewrite test request
175-         */
176:        require_once W3TC_LIB_W3_DIR . '/Request.php';
177-
178-        $rewrite_test = W3_Request::get_boolean('w3tc_rewrite_test');
179-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[314]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[311-     * @return string
312-     */
313-    function template_preview($template) {
314:        require_once W3TC_LIB_W3_DIR . '/Request.php';
315-        $theme_name = W3_Request::get_string('w3tc_theme');
316-
317-        $theme = get_theme($theme_name);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[333]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[330-     * @return string
331-     */
332-    function stylesheet_preview($stylesheet) {
333:        require_once W3TC_LIB_W3_DIR . '/Request.php';
334-        $theme_name = W3_Request::get_string('w3tc_theme');
335-
336-        $theme = get_theme($theme_name);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[557]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[554-            $key = $this->_config->get_string('cloudflare.key');
555-
556-            if ($email && $key) {
557:                require_once W3TC_LIB_W3_DIR . '/CloudFlare.php';
558-                @$w3_cloudflare =& new W3_CloudFlare(array(
559-                    'email' => $email,
560-                    'key' => $key]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheActivation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_INC_DIR . '/functions/file.php';
11:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
12-
13-/**
14- * Class W3_Plugin_TotalCacheActivation]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheActivation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[23]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[20-     * @return void
21-     */
22-    function activate() {
23:        require_once W3TC_INC_DIR . '/functions/activation.php';
24-
25-        /**
26-         * Disable buggy sitewide activation in WPMU and WP 3.0]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_ObjectCache]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[94-     * Activate plugin action (called by W3_PluginProxy)
95-     */
96-    function activate() {
97:        require_once W3TC_INC_DIR . '/functions/activation.php';
98-
99-        if (!$this->locked() && !@copy(W3TC_INSTALL_FILE_OBJECT_CACHE, W3TC_ADDIN_FILE_OBJECT_CACHE)) {
100-            w3_writable_error(W3TC_ADDIN_FILE_OBJECT_CACHE);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[145]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[142-     * @return void
143-     */
144-    function cleanup() {
145:        require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner.php';
146-
147-        @$w3_cache_file_cleaner = & new W3_Cache_File_Cleaner(array(
148-            'cache_dir' => W3TC_CACHE_FILE_OBJECTCACHE_DIR,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_Plugin_Minify]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[89]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[86-     * Activate plugin action
87-     */
88-    function activate() {
89:        require_once W3TC_INC_DIR . '/functions/activation.php';
90-
91-        if (!@is_dir(W3TC_CONTENT_MINIFY_DIR) && !@mkdir(W3TC_CONTENT_MINIFY_DIR)) {
92-            w3_writable_error(W3TC_CONTENT_MINIFY_DIR);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[159]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[156-     * @return void
157-     */
158-    function cleanup() {
159:        require_once W3TC_LIB_W3_DIR . '/Cache/File/Cleaner/Generic.php';
160-
161-        $w3_cache_file_cleaner_generic = & new W3_Cache_File_Cleaner_Generic(array(
162-            'exclude' => array(]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[336]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[333-     * @return array
334-     */
335-    function get_files_js(&$buffer) {
336:        require_once W3TC_INC_DIR . '/functions/extract.php';
337-
338-        $files = w3_extract_js($buffer);
339-        $files = $this->filter_files($files);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[351]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[348-     * @return array
349-     */
350-    function get_files_css(&$buffer) {
351:        require_once W3TC_INC_DIR . '/functions/extract.php';
352-
353-        $files = w3_extract_css($buffer);
354-        $files = $this->filter_files($files);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[520]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[517-        $ignored_comments = $this->_config->get_array('minify.html.comments.ignore');
518-
519-        if (count($ignored_comments)) {
520:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/IgnoredCommentPreserver.php';
521-
522-            $ignored_comments_preserver =& new Minify_IgnoredCommentPreserver();
523-            $ignored_comments_preserver->setIgnoredComments($ignored_comments);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[540]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[537-
538-            $w3_minifier->init($js_engine);
539-
540:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline.php';
541:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline/JavaScript.php';
542-
543-            $html = Minify_Inline_JavaScript::minify($html, $js_minifier, $js_options);
544-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[558]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[555-
556-            $w3_minifier->init($css_engine);
557-
558:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline.php';
559:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Inline/CSS.php';
560-
561-            $html = Minify_Inline_CSS::minify($html, $css_minifier, $css_options);
562-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PluginProxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Plugin.php';
11-
12-/**
13- * Class W3_PluginProxy]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[343]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[340-     * @return array
341-     */
342-    function _get_headers($file) {
343:        require_once W3TC_INC_DIR . '/functions/mime.php';
344-
345-        $mime_type = w3_get_mime_type($file);
346-        $last_modified = time();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/EdgeCast.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[17]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[14-define('W3TC_CDN_EDGECAST_MEDIATYPE_HTTP_SMALL_OBJECT', 8);
15-define('W3TC_CDN_EDGECAST_MEDIATYPE_APPLICATION_DELIVERY_NETWORK', 14);
16-
17:require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror.php';
18-
19-/**
20- * Class W3_Cdn_Mirror_Edgecast]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Netdna.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[10-define('W3TC_CDN_MIRROR_NETDNA_TZ', 'America/Los_Angeles');
11-define('W3TC_CDN_MIRROR_NETDNA_URL', 'http://api.netdna.com/xmlrpc/cache');
12-
13:require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror.php';
14-
15-/**
16- * Class W3_Cdn_Mirror_Netdna]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Netdna.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[69]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[66-        }
67-
68-        if (!class_exists('IXR_Client')) {
69:            require_once (ABSPATH . WPINC . '/class-IXR.php');
70-        }
71-
72-        if (function_exists('date_default_timezone_set')) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[11-define('W3TC_CDN_MIRROR_COTENDO_ENDPOINT', 'http://api.cotendo.net/cws?ver=1.0');
12-define('W3TC_CDN_MIRROR_COTENDO_NAMESPACE', 'http://api.cotendo.net/');
13-
14:require_once W3TC_LIB_W3_DIR . '/Cdn/Mirror.php';
15-
16-/**
17- * Class W3_Cdn_Mirror_Cotendo]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[70]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[67-            return false;
68-        }
69-
70:        require_once W3TC_LIB_NUSOAP_DIR . '/nusoap.php';
71-
72-        $client = new nusoap_client(
73-            W3TC_CDN_MIRROR_COTENDO_WSDL,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Rscf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
11:require_once W3TC_LIB_CF_DIR . '/cloudfiles.php';
12-
13-/**
14- * Class W3_Cdn_Rscf]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[9-
10-define('W3TC_CDN_FTP_CONNECT_TIMEOUT', 30);
11-
12:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
13-
14-/**
15- * Class W3_Cdn_Ftp]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
11-
12-/**
13- * Class W3_Cdn_Azure]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[75]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[72-
73-        set_include_path(get_include_path() . PATH_SEPARATOR . W3TC_LIB_DIR);
74-
75:        require_once 'Microsoft/WindowsAzure/Storage/Blob.php';
76-
77-        $this->_client = new Microsoft_WindowsAzure_Storage_Blob(
78-            Microsoft_WindowsAzure_Storage::URL_CLOUD_BLOB,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
11-
12-/**
13- * Class W3_Cdn_Mirror]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[8-}
9-
10-if (!class_exists('S3')) {
11:    require_once W3TC_LIB_DIR . '/S3.php';
12-}
13-
14:require_once W3TC_LIB_W3_DIR . '/Cdn/Base.php';
15-
16-/**
17- * Class W3_Cdn_S3]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3/Cf/Custom.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/S3/Cf.php';
11-
12-class W3_Cdn_S3_Cf_Custom extends W3_Cdn_S3_Cf {
13-    var $type = W3TC_CDN_CF_TYPE_CUSTOM;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3/Cf/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_W3_DIR . '/Cdn/S3/Cf.php';
11-
12-class W3_Cdn_S3_Cf_S3 extends W3_Cdn_S3_Cf {
13-    var $type = W3TC_CDN_CF_TYPE_S3;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3/Cf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[10-define('W3TC_CDN_CF_TYPE_S3', 's3');
11-define('W3TC_CDN_CF_TYPE_CUSTOM', 'custom');
12-
13:require_once W3TC_LIB_W3_DIR . '/Cdn/S3.php';
14-
15-/**
16- * Class W3_Cdn_S3_Cf]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCacheFlush.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[4- * W3 PgCache flushing
5- */
6-
7:require_once W3TC_LIB_W3_DIR . '/PgCache.php';
8-
9-/**
10- * Class W3_PgCacheFlush]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/CloudFlare.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[62-     * @return array
63-     */
64-    function api_request($action, $value = null) {
65:        require_once W3TC_INC_DIR . '/functions/http.php';
66-
67-        $url = sprintf('%s?email=%s&tkn=%s&z=%s&a=%s', W3TC_CLOUDFLARE_API_URL, urlencode($this->_config['email']), urlencode($this->_config['key']), urlencode($this->_config['zone']), urlencode($action));
68-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/CloudFlare.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[98]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[95-     * @return array
96-     */
97-    function external_event($type, $value) {
98:        require_once W3TC_INC_DIR . '/functions/http.php';
99-
100-        $url = sprintf('%s?u=%s&tkn=%s&evnt_t=%s&evnt_v=%s', W3TC_CLOUDFLARE_EXTERNAL_EVENT_URL, urlencode($this->_config['email']), urlencode($this->_config['key']), urlencode($type), urlencode($value));
101-        $response = w3_http_get($url);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minifier.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[130]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[127-    function init($engine) {
128-        switch ($engine) {
129-            case 'js':
130:                require_once W3TC_LIB_MINIFY_DIR . '/JSMin.php';
131-                break;
132-
133-            case 'css':
134:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS.php';
135-                break;
136-
137-            case 'yuijs':
138:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/YUICompressor.php';
139-
140-                Minify_YUICompressor::setPathJava($this->_config->get_string('minify.yuijs.path.java'));
141-                Minify_YUICompressor::setPathJar($this->_config->get_string('minify.yuijs.path.jar'));
142-                break;
143-
144-            case 'yuicss':
145:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/YUICompressor.php';
146-
147-                Minify_YUICompressor::setPathJava($this->_config->get_string('minify.yuicss.path.java'));
148-                Minify_YUICompressor::setPathJar($this->_config->get_string('minify.yuicss.path.jar'));
149-                break;
150-
151-            case 'ccjs':
152:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/ClosureCompiler.php';
153-
154-                Minify_ClosureCompiler::setPathJava($this->_config->get_string('minify.ccjs.path.java'));
155-                Minify_ClosureCompiler::setPathJar($this->_config->get_string('minify.ccjs.path.jar'));
156-                break;
157-
158-            case 'csstidy':
159:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSSTidy.php';
160-                break;
161-
162-            case 'html':
163-            case 'htmlxml':
164:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/HTML.php';
165-                break;
166-
167-            case 'htmltidy':
168-            case 'htmltidyxml':
169:                require_once W3TC_LIB_MINIFY_DIR . '/Minify/HTMLTidy.php';
170-                break;
171-        }
172-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[486]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[483-                    $engineConfig = array();
484-            }
485-
486:            require_once W3TC_LIB_W3_DIR . '/Cache.php';
487-            @$cache[0] = & W3_Cache::instance($engine, $engineConfig);
488-        }
489-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[94-        $schemeSpecific = isset($uri[1]) === true ? $uri[1] : '';
95-
96-        if (strlen($scheme) === 0) {
97:            require_once 'Microsoft/Uri/Exception.php';
98-            throw new Microsoft_Uri_Exception('An empty string was supplied for the scheme');
99-        }
100-
101-        // Security check: $scheme is used to load a class file, so only alphanumerics are allowed.
102-        if (ctype_alnum($scheme) === false) {
103:            require_once 'Microsoft/Uri/Exception.php';
104-            throw new Microsoft_Uri_Exception('Illegal scheme supplied, only alphanumeric characters are permitted');
105-        }
106-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[121]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[118-            case 'mailto':
119-                // TODO
120-            default:
121:                require_once 'Microsoft/Uri/Exception.php';
122-                throw new Microsoft_Uri_Exception("Scheme \"$scheme\" is not supported");
123-                break;
124-        }
125-
126-        if (!class_exists($className)) {
127:            require_once str_replace('_', '/', $className) . '.php';
128-        }
129-        $schemeHandler = new $className($scheme, $schemeSpecific);
130-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[26-/**
27- * @see Microsoft_Uri
28- */
29:require_once "Microsoft/Uri.php";
30-/**
31- * @see Microsoft_Http_Cookie
32- */
33:require_once "Microsoft/Http/Cookie.php";
34-/**
35- * @see Microsoft_Http_Response
36- */
37:require_once "Microsoft/Http/Response.php";
38-
39-/**
40- * A Microsoft_Http_CookieJar object is designed to contain and maintain HTTP cookies, and should]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[137]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[134-            $this->cookies[$domain][$path][$cookie->getName()] = $cookie;
135-            $this->_rawCookies[] = $cookie;
136-        } else {
137:            require_once 'Microsoft/Http/Exception.php';
138-            throw new Microsoft_Http_Exception('Supplient argument is not a valid cookie string or object');
139-        }
140-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[152]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[149-    public function addCookiesFromResponse($response, $ref_uri)
150-    {
151-        if (! $response instanceof Microsoft_Http_Response) {
152:            require_once 'Microsoft/Http/Exception.php';
153-            throw new Microsoft_Http_Exception('$response is expected to be a Response object, ' .
154-                gettype($response) . ' was passed');
155-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[196]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[193-    {
194-        if (is_string($uri)) $uri = Microsoft_Uri::factory($uri);
195-        if (! $uri instanceof Microsoft_Uri_Http) {
196:            require_once 'Microsoft/Http/Exception.php';
197-            throw new Microsoft_Http_Exception("Invalid URI string or object passed");
198-        }
199-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[232]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[229-        }
230-
231-        if (! $uri instanceof Microsoft_Uri_Http) {
232:            require_once 'Microsoft/Http/Exception.php';
233-            throw new Microsoft_Http_Exception('Invalid URI specified');
234-        }
235-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[255]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[252-                    break;
253-
254-                default:
255:                    require_once 'Microsoft/Http/Exception.php';
256-                    throw new Microsoft_Http_Exception("Invalid value passed for \$ret_as: {$ret_as}");
257-                    break;
258-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri_Http
29- */
30:require_once 'Microsoft/Uri/Http.php';
31-
32-
33-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[109]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[106-    public function __construct($name, $value, $domain, $expires = null, $path = null, $secure = false)
107-    {
108-        if (preg_match("/[=,; \t\r\n\013\014]/", $name)) {
109:            require_once 'Microsoft/Http/Exception.php';
110-            throw new Microsoft_Http_Exception("Cookie name cannot contain these characters: =,; \\t\\r\\n\\013\\014 ({$name})");
111-        }
112-
113-        if (! $this->name = (string) $name) {
114:            require_once 'Microsoft/Http/Exception.php';
115-            throw new Microsoft_Http_Exception('Cookies must have a name');
116-        }
117-
118-        if (! $this->domain = (string) $domain) {
119:            require_once 'Microsoft/Http/Exception.php';
120-            throw new Microsoft_Http_Exception('Cookies must have a domain');
121-        }
122-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[233]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[230-
231-        // Make sure we have a valid Microsoft_Uri_Http object
232-        if (! ($uri->valid() && ($uri->getScheme() == 'http' || $uri->getScheme() =='https'))) {
233:            require_once 'Microsoft/Http/Exception.php';
234-            throw new Microsoft_Http_Exception('Passed URI is not a valid HTTP or HTTPS URI');
235-        }
236-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[326]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[323-                             *
324-                             * @see Microsoft_Date
325-                             */
326:                            require_once 'Microsoft/Date.php';
327-
328-                            $expireDate = new Microsoft_Date($v);
329-                            $expires = $expireDate->getTimestamp();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[367]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[364-    public static function matchCookieDomain($cookieDomain, $host)
365-    {
366-        if (! $cookieDomain) {
367:            require_once 'Microsoft/Http/Exception.php';
368-            throw new Microsoft_Http_Exception("\$cookieDomain is expected to be a cookie domain");
369-        }
370-
371-        if (! $host) {
372:            require_once 'Microsoft/Http/Exception.php';
373-            throw new Microsoft_Http_Exception("\$host is expected to be a host name");
374-        }
375-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[400]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[397-    public static function matchCookiePath($cookiePath, $path)
398-    {
399-        if (! $cookiePath) {
400:            require_once 'Microsoft/Http/Exception.php';
401-            throw new Microsoft_Http_Exception("\$cookiePath is expected to be a cookie path");
402-        }
403-
404-        if (! $path) {
405:            require_once 'Microsoft/Http/Exception.php';
406-            throw new Microsoft_Http_Exception("\$path is expected to be a host name");
407-        }
408-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_Exception
41- */
42:require_once 'Microsoft/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri
29- */
30:require_once 'Microsoft/Uri.php';
31-
32-
33-/**
34- * @see Microsoft_Http_Client_Adapter_Interface
35- */
36:require_once 'Microsoft/Http/Client/Adapter/Interface.php';
37-
38-
39-/**
40- * @see Microsoft_Http_Response
41- */
42:require_once 'Microsoft/Http/Response.php';
43-
44-/**
45- * @see Microsoft_Http_Response_Stream
46- */
47:require_once 'Microsoft/Http/Response/Stream.php';
48-
49-/**
50- * Microsoft_Http_Client is an implemetation of an HTTP client in PHP. The client]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[270]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[267-
268-        if (!$uri instanceof Microsoft_Uri_Http) {
269-            /** @see Microsoft_Http_Client_Exception */
270:            require_once 'Microsoft/Http/Client/Exception.php';
271-            throw new Microsoft_Http_Client_Exception('Passed parameter is not a valid HTTP URI.');
272-        }
273-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[318]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[315-
316-        } elseif (! is_array($config)) {
317-            /** @see Microsoft_Http_Client_Exception */
318:            require_once 'Microsoft/Http/Client/Exception.php';
319-            throw new Microsoft_Http_Client_Exception('Array expected, got ' . gettype($config));
320-        }
321-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[349]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[346-    {
347-        if (! preg_match('/^[^\x00-\x1f\x7f-\xff\(\)<>@,;:\\\\"\/\[\]\?={}\s]+$/', $method)) {
348-            /** @see Microsoft_Http_Client_Exception */
349:            require_once 'Microsoft/Http/Client/Exception.php';
350-            throw new Microsoft_Http_Client_Exception("'{$method}' is not a valid HTTP request method.");
351-        }
352-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[401]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[398-            // Make sure the name is valid if we are in strict mode
399-            if ($this->config['strict'] && (! preg_match('/^[a-zA-Z0-9-]+$/', $name))) {
400-                /** @see Microsoft_Http_Client_Exception */
401:                require_once 'Microsoft/Http/Client/Exception.php';
402-                throw new Microsoft_Http_Client_Exception("{$name} is not a valid HTTP header name");
403-            }
404-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[558]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[555-            // Check we got a proper authentication type
556-            if (! defined('self::AUTH_' . strtoupper($type))) {
557-                /** @see Microsoft_Http_Client_Exception */
558:                require_once 'Microsoft/Http/Client/Exception.php';
559-                throw new Microsoft_Http_Client_Exception("Invalid or not supported authentication type: '$type'");
560-            }
561-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[585]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[582-    public function setCookieJar($cookiejar = true)
583-    {
584-        if (! class_exists('Microsoft_Http_CookieJar')) {
585:            require_once 'Microsoft/Http/CookieJar.php';
586-        }
587-
588-        if ($cookiejar instanceof Microsoft_Http_CookieJar) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[596]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[593-            $this->cookiejar = null;
594-        } else {
595-            /** @see Microsoft_Http_Client_Exception */
596:            require_once 'Microsoft/Http/Client/Exception.php';
597-            throw new Microsoft_Http_Client_Exception('Invalid parameter type passed as CookieJar');
598-        }
599-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[625]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[622-    public function setCookie($cookie, $value = null)
623-    {
624-        if (! class_exists('Microsoft_Http_Cookie')) {
625:            require_once 'Microsoft/Http/Cookie.php';
626-        }
627-
628-        if (is_array($cookie)) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[660]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[657-
658-            if (preg_match("/[=,; \t\r\n\013\014]/", $cookie)) {
659-                /** @see Microsoft_Http_Client_Exception */
660:                require_once 'Microsoft/Http/Client/Exception.php';
661-                throw new Microsoft_Http_Client_Exception("Cookie name cannot contain these characters: =,; \t\r\n\013\014 ({$cookie})");
662-            }
663-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[700]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[697-        if ($data === null) {
698-            if (($data = @file_get_contents($filename)) === false) {
699-                /** @see Microsoft_Http_Client_Exception */
700:                require_once 'Microsoft/Http/Client/Exception.php';
701-                throw new Microsoft_Http_Client_Exception("Unable to read file '{$filename}' for upload");
702-            }
703-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[837]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[834-    {
835-        if (is_string($adapter)) {
836-            if (!class_exists($adapter)) {
837:            	@require_once( str_replace('_', '/', $adapter) . '.php' );
838-            }
839-
840-            $adapter = new $adapter;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[845]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[842-
843-        if (! $adapter instanceof Microsoft_Http_Client_Adapter_Interface) {
844-            /** @see Microsoft_Http_Client_Exception */
845:            require_once 'Microsoft/Http/Client/Exception.php';
846-            throw new Microsoft_Http_Client_Exception('Passed adapter is not a HTTP connection adapter');
847-        }
848-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[903]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[900-        $fp = fopen($this->_stream_name, "w+b");
901-        if(!$fp) {
902-                $this->close();
903:                require_once 'Microsoft/Http/Client/Exception.php';
904-                throw new Microsoft_Http_Client_Exception("Could not open temp file $name");
905-
906-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[921]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[918-    {
919-        if (! $this->uri instanceof Microsoft_Uri_Http) {
920-            /** @see Microsoft_Http_Client_Exception */
921:            require_once 'Microsoft/Http/Client/Exception.php';
922-            throw new Microsoft_Http_Client_Exception('No valid URI has been passed to the client');
923-        }
924-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[956]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[953-            // check that adapter supports streaming before using it
954-            if(is_resource($body) && !($this->adapter instanceof Microsoft_Http_Client_Adapter_Stream)) {
955-                /** @see Microsoft_Http_Client_Exception */
956:                require_once 'Microsoft/Http/Client/Exception.php';
957-                throw new Microsoft_Http_Client_Exception('Adapter does not support streaming');
958-            }
959-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[970]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[967-                    $this->adapter->setOutputStream($stream);
968-                } else {
969-                    /** @see Microsoft_Http_Client_Exception */
970:                    require_once 'Microsoft/Http/Client/Exception.php';
971-                    throw new Microsoft_Http_Client_Exception('Adapter does not support streaming');
972-                }
973-            }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[981]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[978-            $response = $this->adapter->read();
979-            if (! $response) {
980-                /** @see Microsoft_Http_Client_Exception */
981:                require_once 'Microsoft/Http/Client/Exception.php';
982-                throw new Microsoft_Http_Client_Exception('Unable to read response, or response is empty');
983-            }
984-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1217]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1214-                    }
1215-
1216-                    /** @see Microsoft_Http_Client_Exception */
1217:                    require_once 'Microsoft/Http/Client/Exception.php';
1218-                    throw new Microsoft_Http_Client_Exception("Cannot handle content type '{$this->enctype}' automatically." .
1219-                        " Please use Microsoft_Http_Client::setRawData to send this kind of content.");
1220-                    break;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1378]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1375-                // In basic authentication, the user name cannot contain ":"
1376-                if (strpos($user, ':') !== false) {
1377-                    /** @see Microsoft_Http_Client_Exception */
1378:                    require_once 'Microsoft/Http/Client/Exception.php';
1379-                    throw new Microsoft_Http_Client_Exception("The user name cannot contain ':' in 'Basic' HTTP authentication");
1380-                }
1381-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1393]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1390-
1391-            default:
1392-                /** @see Microsoft_Http_Client_Exception */
1393:                require_once 'Microsoft/Http/Client/Exception.php';
1394-                throw new Microsoft_Http_Client_Exception("Not a supported HTTP authentication type: '$type'");
1395-        }
1396-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[155]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[152-    {
153-        // Make sure the response code is valid and set it
154-        if (self::responseCodeAsText($code) === null) {
155:            require_once 'Microsoft/Http/Exception.php';
156-            throw new Microsoft_Http_Exception("{$code} is not a valid HTTP response code");
157-        }
158-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[163]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[160-
161-        // Make sure we got valid headers and set them
162-        if (! is_array($headers)) {
163:            require_once 'Microsoft/Http/Exception.php';
164-            throw new Microsoft_Http_Exception('No valid headers were passed');
165-    }
166-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[179]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[176-
177-        // Set the HTTP version
178-        if (! preg_match('|^\d\.\d$|', $version)) {
179:            require_once 'Microsoft/Http/Exception.php';
180-            throw new Microsoft_Http_Exception("Invalid HTTP response version: $version");
181-        }
182-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[575]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[572-
573-        while (trim($body)) {
574-            if (! preg_match("/^([\da-fA-F]+)[^\r\n]*\r\n/sm", $body, $m)) {
575:                require_once 'Microsoft/Http/Exception.php';
576-                throw new Microsoft_Http_Exception("Error parsing body - doesn't seem to be a chunked message");
577-            }
578-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[603]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[600-    public static function decodeGzip($body)
601-    {
602-        if (! function_exists('gzinflate')) {
603:            require_once 'Microsoft/Http/Exception.php';
604-            throw new Microsoft_Http_Exception(
605-                'zlib extension is required in order to decode "gzip" encoding'
606-            );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[623]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[620-    public static function decodeDeflate($body)
621-    {
622-        if (! function_exists('gzuncompress')) {
623:            require_once 'Microsoft/Http/Exception.php';
624-            throw new Microsoft_Http_Exception(
625-                'zlib extension is required in order to decode "deflate" encoding'
626-            );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[26-/**
27- * @see Microsoft_Http_Exception
28- */
29:require_once 'Microsoft/Http/Exception.php';
30-
31-/**
32- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri_Http
29- */
30:require_once 'Microsoft/Uri/Http.php';
31-/**
32- * @see Microsoft_Http_Client
33- */
34:require_once 'Microsoft/Http/Client.php';
35-/**
36- * @see Microsoft_Http_Client_Adapter_Socket
37- */
38:require_once 'Microsoft/Http/Client/Adapter/Socket.php';
39-
40-/**
41- * HTTP Proxy-supporting Microsoft_Http_Client adapter class, based on the default]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[123]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[120-
121-        // Make sure we're properly connected
122-        if (! $this->socket) {
123:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
124-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are not connected");
125-        }
126-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[131]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[128-        $port = $this->config['proxy_port'];
129-
130-        if ($this->connected_to[0] != "tcp://$host" || $this->connected_to[1] != $port) {
131:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
132-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are connected to the wrong proxy server");
133-        }
134-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[173]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[170-
171-        // Send the request
172-        if (! @fwrite($this->socket, $request)) {
173:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
174-            throw new Microsoft_Http_Client_Adapter_Exception("Error writing request to proxy server");
175-        }
176-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[209]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[206-
207-        // Send the request
208-        if (! @fwrite($this->socket, $request)) {
209:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
210-            throw new Microsoft_Http_Client_Adapter_Exception("Error writing request to proxy server");
211-        }
212-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[226]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[223-
224-        // Check that the response from the proxy is 200
225-        if (Microsoft_Http_Response::extractCode($response) != 200) {
226:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
227-            throw new Microsoft_Http_Client_Adapter_Exception("Unable to connect to HTTPS proxy. Server response: " . $response);
228-        }
229-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[246]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[243-        }
244-
245-        if (! $success) {
246:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
247-                throw new Microsoft_Http_Client_Adapter_Exception("Unable to connect to" .
248-                    " HTTPS server through proxy: could not negotiate secure connection.");
249-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[26-/**
27- * @see Microsoft_Http_Client_Exception
28- */
29:require_once 'Microsoft/Http/Client/Exception.php';
30-
31-/**
32- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri_Http
29- */
30:require_once 'Microsoft/Uri/Http.php';
31-
32-/**
33- * @see Microsoft_Http_Client_Adapter_Interface
34- */
35:require_once 'Microsoft/Http/Client/Adapter/Interface.php';
36-/**
37- * @see Microsoft_Http_Client_Adapter_Stream
38- */
39:require_once 'Microsoft/Http/Client/Adapter/Stream.php';
40-
41-/**
42- * An adapter class for Microsoft_Http_Client based on the curl extension.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[122]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[119-    public function __construct()
120-    {
121-        if (!extension_loaded('curl')) {
122:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
123-            throw new Microsoft_Http_Client_Adapter_Exception('cURL extension has to be loaded to use this Microsoft_Http_Client adapter.');
124-        }
125-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[137]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[134-    public function setConfig($config = array())
135-    {
136-        if (! is_array($config)) {
137:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
138-            throw new Microsoft_Http_Client_Adapter_Exception(
139-                'Array expected, got ' . gettype($config)
140-            );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[232]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[229-        if (!$this->_curl) {
230-            $this->close();
231-
232:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
233-            throw new Microsoft_Http_Client_Adapter_Exception('Unable to Connect to ' .  $host . ':' . $port);
234-        }
235-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[265]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[262-    {
263-        // Make sure we're properly connected
264-        if (!$this->_curl) {
265:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
266-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are not connected");
267-        }
268-
269-        if ($this->_connected_to[0] != $uri->getHost() || $this->_connected_to[1] != $uri->getPort()) {
270:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
271-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are connected to the wrong host");
272-        }
273-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[307]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[304-                    }
305-
306-                    if (!isset($this->_config['curloptions'][CURLOPT_INFILESIZE])) {
307:                        require_once 'Microsoft/Http/Client/Adapter/Exception.php';
308-                        throw new Microsoft_Http_Client_Adapter_Exception("Cannot set a file-handle for cURL option CURLOPT_INFILE without also setting its size in CURLOPT_INFILESIZE.");
309-                    }
310-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[339]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[336-
337-            default:
338-                // For now, through an exception for unsupported request methods
339:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
340-                throw new Microsoft_Http_Client_Adapter_Exception("Method currently not supported");
341-        }
342-
343-        if(is_resource($body) && $curlMethod != CURLOPT_PUT) {
344:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
345-            throw new Microsoft_Http_Client_Adapter_Exception("Streaming requests are allowed only with PUT");
346-        }
347-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[397]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[394-            foreach ((array)$this->_config['curloptions'] as $k => $v) {
395-                if (!in_array($k, $this->_invalidOverwritableCurlOptions)) {
396-                    if (@curl_setopt($this->_curl, $k, $v) == false) {
397:                        require_once 'Microsoft/Http/Client/Exception.php';
398-                        throw new Microsoft_Http_Client_Exception(sprintf("Unknown or erroreous cURL option '%s' set", $k));
399-                    }
400-                }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[416]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[413-        $request .= $body;
414-
415-        if (empty($this->_response)) {
416:            require_once 'Microsoft/Http/Client/Exception.php';
417-            throw new Microsoft_Http_Client_Exception("Error in cURL request: " . curl_error($this->_curl));
418-        }
419-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[27-/**
28- * @see Microsoft_Uri_Http
29- */
30:require_once 'Microsoft/Uri/Http.php';
31-/**
32- * @see Microsoft_Http_Client_Adapter_Interface
33- */
34:require_once 'Microsoft/Http/Client/Adapter/Interface.php';
35-/**
36- * @see Microsoft_Http_Client_Adapter_Stream
37- */
38:require_once 'Microsoft/Http/Client/Adapter/Stream.php';
39-
40-/**
41- * A sockets based (stream_socket_client) adapter class for Microsoft_Http_Client. Can be used]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[115]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[112-    public function setConfig($config = array())
113-    {
114-        if (! is_array($config)) {
115:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
116-            throw new Microsoft_Http_Client_Adapter_Exception(
117-                'Array expected, got ' . gettype($config)
118-            );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[159]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[156-
157-        } else {
158-            // Invalid parameter
159:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
160-            throw new Microsoft_Http_Client_Adapter_Exception(
161-                "Expecting either a stream context resource or array, got " . gettype($context)
162-            );]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[208]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[205-                if ($this->config['sslcert'] !== null) {
206-                    if (! stream_context_set_option($context, 'ssl', 'local_cert',
207-                                                    $this->config['sslcert'])) {
208:                        require_once 'Microsoft/Http/Client/Adapter/Exception.php';
209-                        throw new Microsoft_Http_Client_Adapter_Exception('Unable to set sslcert option');
210-                    }
211-                }
212-                if ($this->config['sslpassphrase'] !== null) {
213-                    if (! stream_context_set_option($context, 'ssl', 'passphrase',
214-                                                    $this->config['sslpassphrase'])) {
215:                        require_once 'Microsoft/Http/Client/Adapter/Exception.php';
216-                        throw new Microsoft_Http_Client_Adapter_Exception('Unable to set sslpassphrase option');
217-                    }
218-                }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[233]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[230-
231-            if (! $this->socket) {
232-                $this->close();
233:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
234-                throw new Microsoft_Http_Client_Adapter_Exception(
235-                    'Unable to Connect to ' . $host . ':' . $port . '. Error #' . $errno . ': ' . $errstr);
236-            }
237-
238-            // Set the stream timeout
239-            if (! stream_set_timeout($this->socket, (int) $this->config['timeout'])) {
240:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
241-                throw new Microsoft_Http_Client_Adapter_Exception('Unable to set the connection timeout');
242-            }
243-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[263]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[260-    {
261-        // Make sure we're properly connected
262-        if (! $this->socket) {
263:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
264-            throw new Microsoft_Http_Client_Adapter_Exception('Trying to write but we are not connected');
265-        }
266-
267-        $host = $uri->getHost();
268-        $host = (strtolower($uri->getScheme()) == 'https' ? $this->config['ssltransport'] : 'tcp') . '://' . $host;
269-        if ($this->connected_to[0] != $host || $this->connected_to[1] != $uri->getPort()) {
270:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
271-            throw new Microsoft_Http_Client_Adapter_Exception('Trying to write but we are connected to the wrong host');
272-        }
273-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[295]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[292-
293-        // Send the request
294-        if (! @fwrite($this->socket, $request)) {
295:            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
296-            throw new Microsoft_Http_Client_Adapter_Exception('Error writing request to server');
297-        }
298-
299-        if(is_resource($body)) {
300-            if(stream_copy_to_stream($body, $this->socket) == 0) {
301:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
302-                throw new Microsoft_Http_Client_Adapter_Exception('Error writing request to server');
303-            }
304-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[368]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[365-                    $chunksize = trim($line);
366-                    if (! ctype_xdigit($chunksize)) {
367-                        $this->close();
368:                        require_once 'Microsoft/Http/Client/Adapter/Exception.php';
369-                        throw new Microsoft_Http_Client_Adapter_Exception('Invalid chunk size "' .
370-                            $chunksize . '" unable to read chunked body');
371-                    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[501]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[498-            $timedout = $info['timed_out'];
499-            if ($timedout) {
500-                $this->close();
501:                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
502-                throw new Microsoft_Http_Client_Adapter_Exception(
503-                    "Read timed out after {$this->config['timeout']} seconds",
504-                    Microsoft_Http_Client_Adapter_Exception::READ_TIMEOUT]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/SessionHandler.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[40]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[37-}
38-
39-/** Microsoft_WindowsAzure_Storage_Table */
40:require_once 'Microsoft/WindowsAzure/Storage/Table.php';
41-
42-/**
43- * @see Microsoft_WindowsAzure_Exception
44- */
45:require_once 'Microsoft/WindowsAzure/Exception.php';
46-
47-/**
48- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
41- */
42:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Credentials_SharedKey
46- */
47:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
51- */
52:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
53-
54-/**
55- * @see Microsoft_WindowsAzure_Exception
56- */
57:require_once 'Microsoft/WindowsAzure/Exception.php';
58-
59-/**
60- * @see Microsoft_Http_Client
61- */
62:require_once 'Microsoft/Http/Client.php';
63-
64-/**
65- * @see Microsoft_Http_Response
66- */
67:require_once 'Microsoft/Http/Response.php';
68-
69-/**
70- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationDataSources
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationDataSources.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationLogs.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_LogLevel
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/LogLevel.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationWindowsEventLog.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_LogLevel
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/LogLevel.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Storage_Blob
41- */
42:require_once 'Microsoft/WindowsAzure/Storage/Blob.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_Exception
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationInstance.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationDataSources.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationLogs
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationLogs.php';
53-
54-/**
55- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationDiagnosticInfrastructureLogs
56- */
57:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationDiagnosticInfrastructureLogs.php';
58-
59-/**
60- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationPerformanceCounters
61- */
62:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationPerformanceCounters.php';
63-
64-/**
65- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationWindowsEventLog
66- */
67:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationWindowsEventLog.php';
68-
69-/**
70- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationDirectories
71- */
72:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationDirectories.php';
73-
74-/**
75- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationPerformanceCounters.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_PerformanceCounterSubscription
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/PerformanceCounterSubscription.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/PerformanceCounterSubscription.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/DirectoryConfigurationSubscription.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationDirectories.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_DirectoryConfigurationSubscription
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/DirectoryConfigurationSubscription.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationDiagnosticInfrastructureLogs.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Diagnostics_ConfigurationObjectBaseAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Diagnostics_LogLevel
51- */
52:require_once 'Microsoft/WindowsAzure/Diagnostics/LogLevel.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/ConfigurationObjectBaseAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Diagnostics_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Diagnostics/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/RetryPolicy/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_RetryPolicy_NoRetry
46- */
47:require_once 'Microsoft/WindowsAzure/RetryPolicy/NoRetry.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_RetryPolicy_RetryN
51- */
52:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryN.php';
53-
54-/**
55- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/RetryPolicy/RetryN.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
41- */
42:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_RetryPolicy_Exception
46- */
47:require_once 'Microsoft/WindowsAzure/RetryPolicy/Exception.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/RetryPolicy/NoRetry.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
41- */
42:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_Exception
41- */
42:require_once 'Microsoft/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Credentials_SharedKey
41- */
42:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
48-
49-/**
50- * @see Microsoft_Http_Client
51- */
52:require_once 'Microsoft/Http/Client.php';
53-
54-/**
55- * @see Microsoft_Http_Response
56- */
57:require_once 'Microsoft/Http/Response.php';
58-
59-/**
60- * @see Microsoft_WindowsAzure_Storage
61- */
62:require_once 'Microsoft/WindowsAzure/Storage.php';
63-
64-/**
65- * Microsoft_WindowsAzure_Storage_QueueInstance
66- */
67:require_once 'Microsoft/WindowsAzure/Storage/QueueInstance.php';
68-
69-/**
70- * Microsoft_WindowsAzure_Storage_QueueMessage
71- */
72:require_once 'Microsoft/WindowsAzure/Storage/QueueMessage.php';
73-
74-/**
75- * @see Microsoft_WindowsAzure_Exception
76- */
77:require_once 'Microsoft/WindowsAzure/Exception.php';
78-
79-
80-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/BlobContainer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/DynamicTableEntity.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_TableEntity
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/TableEntity.php';
48-
49-
50-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/BatchStorageAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Storage
41- */
42:require_once 'Microsoft/WindowsAzure/Storage.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Exception
51- */
52:require_once 'Microsoft/WindowsAzure/Exception.php';
53-
54-/**
55- * @see Microsoft_WindowsAzure_Storage_Batch
56- */
57:require_once 'Microsoft/WindowsAzure/Storage/Batch.php';
58-
59-/**
60- * @see Microsoft_Http_Client
61- */
62:require_once 'Microsoft/Http/Client.php';
63-
64-/**
65- * @see Microsoft_Http_Response
66- */
67:require_once 'Microsoft/Http/Response.php';
68-
69-/**
70- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/QueueMessage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-
45-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/QueueInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/PageRegionInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/TableEntity.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-
45-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/LeaseInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract_SharedKey
41- */
42:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Credentials_SharedAccessSignature
46- */
47:require_once 'Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
51- */
52:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
53-
54-/**
55- * @see Microsoft_Http_Client
56- */
57:require_once 'Microsoft/Http/Client.php';
58-
59-/**
60- * @see Microsoft_Http_Response
61- */
62:require_once 'Microsoft/Http/Response.php';
63-
64-/**
65- * @see Microsoft_WindowsAzure_Storage
66- */
67:require_once 'Microsoft/WindowsAzure/Storage.php';
68-
69-/**
70- * @see Microsoft_WindowsAzure_Storage_BlobContainer
71- */
72:require_once 'Microsoft/WindowsAzure/Storage/BlobContainer.php';
73-
74-/**
75- * @see Microsoft_WindowsAzure_Storage_BlobInstance
76- */
77:require_once 'Microsoft/WindowsAzure/Storage/BlobInstance.php';
78-
79-/**
80- * @see Microsoft_WindowsAzure_Storage_PageRegionInstance
81- */
82:require_once 'Microsoft/WindowsAzure/Storage/PageRegionInstance.php';
83-
84-/**
85- * @see Microsoft_WindowsAzure_Storage_LeaseInstance
86- */
87:require_once 'Microsoft/WindowsAzure/Storage/LeaseInstance.php';
88-
89-/**
90- * @see Microsoft_WindowsAzure_Storage_SignedIdentifier
91- */
92:require_once 'Microsoft/WindowsAzure/Storage/SignedIdentifier.php';
93-
94-/**
95- * @see Microsoft_WindowsAzure_Exception
96- */
97:require_once 'Microsoft/WindowsAzure/Exception.php';
98-
99-
100-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1932]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1929-		/**
1930-		 * @see Microsoft_WindowsAzure_Storage_Blob_Stream
1931-		 */
1932:		require_once 'Microsoft/WindowsAzure/Storage/Blob/Stream.php';
1933-
1934-		stream_register_wrapper($name, 'Microsoft_WindowsAzure_Storage_Blob_Stream');
1935-		$this->registerAsClient($name);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/BlobInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Batch.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_BatchStorageAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/BatchStorageAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
41- */
42:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Credentials_SharedKey
46- */
47:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
48-
49-/**
50- * @see Microsoft_WindowsAzure_Credentials_SharedKeyLite
51- */
52:require_once 'Microsoft/WindowsAzure/Credentials/SharedKeyLite.php';
53-
54-/**
55- * @see Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract
56- */
57:require_once 'Microsoft/WindowsAzure/RetryPolicy/RetryPolicyAbstract.php';
58-
59-/**
60- * @see Microsoft_Http_Client
61- */
62:require_once 'Microsoft/Http/Client.php';
63-
64-/**
65- * @see Microsoft_Http_Response
66- */
67:require_once 'Microsoft/Http/Response.php';
68-
69-/**
70- * @see Microsoft_WindowsAzure_Storage
71- */
72:require_once 'Microsoft/WindowsAzure/Storage.php';
73-
74-/**
75- * @see Microsoft_WindowsAzure_Storage_BatchStorageAbstract
76- */
77:require_once 'Microsoft/WindowsAzure/Storage/BatchStorageAbstract.php';
78-
79-/**
80- * @see Microsoft_WindowsAzure_Storage_TableInstance
81- */
82:require_once 'Microsoft/WindowsAzure/Storage/TableInstance.php';
83-
84-/**
85- * @see Microsoft_WindowsAzure_Storage_TableEntity
86- */
87:require_once 'Microsoft/WindowsAzure/Storage/TableEntity.php';
88-
89-/**
90- * @see Microsoft_WindowsAzure_Storage_DynamicTableEntity
91- */
92:require_once 'Microsoft/WindowsAzure/Storage/DynamicTableEntity.php';
93-
94-/**
95- * @see Microsoft_WindowsAzure_Storage_TableEntityQuery
96- */
97:require_once 'Microsoft/WindowsAzure/Storage/TableEntityQuery.php';
98-
99-/**
100- * @see Microsoft_WindowsAzure_Exception
101- */
102:require_once 'Microsoft/WindowsAzure/Exception.php';
103-
104-
105-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Storage_Blob
41- */
42:require_once 'Microsoft/WindowsAzure/Storage/Blob.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Exception
46- */
47:require_once 'Microsoft/WindowsAzure/Exception.php';
48-
49-
50-/**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/SignedIdentifier.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/TableInstance.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @see Microsoft_WindowsAzure_Storage_StorageEntityAbstract
46- */
47:require_once 'Microsoft/WindowsAzure/Storage/StorageEntityAbstract.php';
48-
49-/**
50- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[38-/**
39- * @see Microsoft_Http_Client
40- */
41:require_once 'Microsoft/Http/Client.php';
42-
43-/**
44- * @see Microsoft_WindowsAzure_Credentials_Exception
45- */
46:require_once 'Microsoft/WindowsAzure/Credentials/Exception.php';
47-
48-/**
49- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[39-/**
40- * @see Microsoft_WindowsAzure_Exception
41- */
42:require_once 'Microsoft/WindowsAzure/Exception.php';
43-
44-/**
45- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[38-/**
39- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
40- */
41:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
42-
43-/**
44- * @see Microsoft_WindowsAzure_Storage
45- */
46:require_once 'Microsoft/WindowsAzure/Storage.php';
47-
48-/**
49- * @see Microsoft_Http_Client
50- */
51:require_once 'Microsoft/Http/Client.php';
52-
53-/**
54- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKeyLite.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[38-/**
39- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
40- */
41:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
42-
43-/**
44- * @see Microsoft_WindowsAzure_Storage
45- */
46:require_once 'Microsoft/WindowsAzure/Storage.php';
47-
48-/**
49- * @see Microsoft_WindowsAzure_Credentials_SharedKey
50- */
51:require_once 'Microsoft/WindowsAzure/Credentials/SharedKey.php';
52-
53-/**
54- * @see Microsoft_WindowsAzure_Credentials_Exception
55- */
56:require_once 'Microsoft/WindowsAzure/Credentials/Exception.php';
57-
58-/**
59- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[38-/**
39- * @see Microsoft_WindowsAzure_Credentials_CredentialsAbstract
40- */
41:require_once 'Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php';
42-
43-/**
44- * @see Microsoft_WindowsAzure_Storage
45- */
46:require_once 'Microsoft/WindowsAzure/Storage.php';
47-
48-/**
49- * @see Microsoft_Http_Client
50- */
51:require_once 'Microsoft/Http/Client.php';
52-
53-/**
54- * @see Microsoft_WindowsAzure_Credentials_Exception
55- */
56:require_once 'Microsoft/WindowsAzure/Credentials/Exception.php';
57-
58-/**
59- * @category   Microsoft]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[25-/**
26- * @see Microsoft_Exception
27- */
28:require_once 'Microsoft/Exception.php';
29-
30-/**
31- * Exceptions for Microsoft_Uri]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[25-/**
26- * @see Microsoft_Uri
27- */
28:require_once 'Microsoft/Uri.php';
29-
30-/**
31- * HTTP(S) URI handler]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[153]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[150-
151-        // Validate the URI
152-        if ($this->valid() === false) {
153:            require_once 'Microsoft/Uri/Exception.php';
154-            throw new Microsoft_Uri_Exception('Invalid URI supplied');
155-        }
156-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[171]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[168-    public static function fromString($uri)
169-    {
170-        if (is_string($uri) === false) {
171:            require_once 'Microsoft/Uri/Exception.php';
172-            throw new Microsoft_Uri_Exception('$uri is not a string');
173-        }
174-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[180]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[177-        $schemeSpecific = isset($uri[1]) === true ? $uri[1] : '';
178-
179-        if (in_array($scheme, array('http', 'https')) === false) {
180:            require_once 'Microsoft/Uri/Exception.php';
181-            throw new Microsoft_Uri_Exception("Invalid scheme: '$scheme'");
182-        }
183-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[202]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[199-        $pattern = '~^((//)([^/?#]*))([^?#]*)(\?([^#]*))?(#(.*))?$~';
200-        $status  = @preg_match($pattern, $schemeSpecific, $matches);
201-        if ($status === false) {
202:            require_once 'Microsoft/Uri/Exception.php';
203-            throw new Microsoft_Uri_Exception('Internal error: scheme-specific decomposition failed');
204-        }
205-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[221]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[218-        $pattern = '~^(([^:@]*)(:([^@]*))?@)?([^:]+)(:(.*))?$~';
219-        $status  = @preg_match($pattern, $combo, $matches);
220-        if ($status === false) {
221:            require_once 'Microsoft/Uri/Exception.php';
222-            throw new Microsoft_Uri_Exception('Internal error: authority decomposition failed');
223-        }
224-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[248]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[245-    public function getUri()
246-    {
247-        if ($this->valid() === false) {
248:            require_once 'Microsoft/Uri/Exception.php';
249-            throw new Microsoft_Uri_Exception('One or more parts of the URI are invalid');
250-        }
251-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[321]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[318-            self::CHAR_ALNUM . self::CHAR_MARK . ';:&=+$,' . '])+$/', $username);
319-
320-        if ($status === false) {
321:            require_once 'Microsoft/Uri/Exception.php';
322-            throw new Microsoft_Uri_Exception('Internal error: username validation failed');
323-        }
324-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[338]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[335-    public function setUsername($username)
336-    {
337-        if ($this->validateUsername($username) === false) {
338:            require_once 'Microsoft/Uri/Exception.php';
339-            throw new Microsoft_Uri_Exception("Username \"$username\" is not a valid HTTP username");
340-        }
341-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[388]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[385-            self::CHAR_ALNUM . self::CHAR_MARK . ';:&=+$,' . '])+$/', $password);
386-
387-        if ($status === false) {
388:            require_once 'Microsoft/Uri/Exception.php';
389-            throw new Microsoft_Uri_Exception('Internal error: password validation failed.');
390-        }
391-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[405]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[402-    public function setPassword($password)
403-    {
404-        if ($this->validatePassword($password) === false) {
405:            require_once 'Microsoft/Uri/Exception.php';
406-            throw new Microsoft_Uri_Exception("Password \"$password\" is not a valid HTTP password.");
407-        }
408-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[457]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[454-    public function setHost($host)
455-    {
456-        if ($this->validateHost($host) === false) {
457:            require_once 'Microsoft/Uri/Exception.php';
458-            throw new Microsoft_Uri_Exception("Host \"$host\" is not a valid HTTP host");
459-        }
460-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[509]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[506-    public function setPort($port)
507-    {
508-        if ($this->validatePort($port) === false) {
509:            require_once 'Microsoft/Uri/Exception.php';
510-            throw new Microsoft_Uri_Exception("Port \"$port\" is not a valid HTTP port.");
511-        }
512-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[552]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[549-        $pattern = '/^' . $this->_regex['path'] . '$/';
550-        $status  = @preg_match($pattern, $path);
551-        if ($status === false) {
552:            require_once 'Microsoft/Uri/Exception.php';
553-            throw new Microsoft_Uri_Exception('Internal error: path validation failed');
554-        }
555-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[569]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[566-    public function setPath($path)
567-    {
568-        if ($this->validatePath($path) === false) {
569:            require_once 'Microsoft/Uri/Exception.php';
570-            throw new Microsoft_Uri_Exception("Path \"$path\" is not a valid HTTP path");
571-        }
572-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[630]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[627-        $pattern = '/^' . $this->_regex['uric'] . '*$/';
628-        $status  = @preg_match($pattern, $query);
629-        if ($status === false) {
630:            require_once 'Microsoft/Uri/Exception.php';
631-            throw new Microsoft_Uri_Exception('Internal error: query validation failed');
632-        }
633-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[695]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[692-
693-        // Make sure the query is valid, and set it
694-        if ($this->validateQuery($query) === false) {
695:            require_once 'Microsoft/Uri/Exception.php';
696-            throw new Microsoft_Uri_Exception("'$query' is not a valid query string");
697-        }
698-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[738]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[735-        $pattern = '/^' . $this->_regex['uric'] . '*$/';
736-        $status  = @preg_match($pattern, $fragment);
737-        if ($status === false) {
738:            require_once 'Microsoft/Uri/Exception.php';
739-            throw new Microsoft_Uri_Exception('Internal error: fragment validation failed');
740-        }
741-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[755]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[752-    public function setFragment($fragment)
753-    {
754-        if ($this->validateFragment($fragment) === false) {
755:            require_once 'Microsoft/Uri/Exception.php';
756-            throw new Microsoft_Uri_Exception("Fragment \"$fragment\" is not a valid HTTP fragment");
757-        }
758-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[10-/**
11- * Minify_Source
12- */
13:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Source.php';
14-
15-/**
16- * Minify - Combines, minifies, and caches JavaScript and CSS files on demand.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[167]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[164-            // make $controller into object
165-            $class = 'Minify_Controller_' . $controller;
166-            if (! class_exists($class, false)) {
167:                require_once W3TC_LIB_MINIFY_DIR . "/Minify/Controller/"
168-                    . str_replace('_', '/', $controller) . ".php";
169-            }
170-            $controller = new $class();]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[211]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[208-                $contentEncoding = self::$_options['encodeMethod'];
209-            } else {
210-                // sniff request header
211:                require_once W3TC_LIB_MINIFY_DIR . '/HTTP/Encoder.php';
212-                // depending on what the client accepts, $contentEncoding may be
213-                // 'x-gzip' while our internal encodeMethod is 'gzip'. Calling
214-                // getAcceptedEncoding(false, false) leaves out compress and deflate as options.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[222]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[219-        }
220-
221-        // check client cache
222:        require_once W3TC_LIB_MINIFY_DIR . '/HTTP/ConditionalGet.php';
223-        $cgOptions = array(
224-            'cacheHeaders' => self::$_options['cacheHeaders']
225-            ,'lastModifiedTime' => self::$_options['lastModifiedTime']]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[394]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[391-            if ($unsetPathInfo) {
392-                unset($_SERVER['PATH_INFO']);
393-            }
394:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Logger.php';
395-            Minify_Logger::log("setDocRoot() set DOCUMENT_ROOT to \"{$_SERVER['DOCUMENT_ROOT']}\"");
396-        }
397-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[496]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[493-
494-        // do any post-processing (esp. for editing build URIs)
495-        if (self::$_options['postprocessorRequire']) {
496:            require_once self::$_options['postprocessorRequire'];
497-        }
498-        if (self::$_options['postprocessor']) {
499-            $content = call_user_func(self::$_options['postprocessor'], $content, $type);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Lines.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[61]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[58-        $content = implode("\n", $newLines) . "\n";
59-
60-        // check for desired URI rewriting
61:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
62-
63-        $content = Minify_CSS_UriRewriter::rewrite($content, $options);
64-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Build.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Source.php';
11-
12-/**
13- * Maintain a single last modification time for a group of Minify sources to]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[49-     * @return string
50-     */
51-    public static function minify($css, $options = array()) {
52:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/Compressor.php';
53-
54-        if (isset($options['preserveComments']) && $options['preserveComments']) {
55:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/CommentPreserver.php';
56-
57-            $css = Minify_CommentPreserver::process(
58-                $css,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[66]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[63-            $css = Minify_CSS_Compressor::process($css, $options);
64-        }
65-
66:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
67-
68-        $css = Minify_CSS_UriRewriter::rewrite($css, $options);
69-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1-<?php
2-
3:require_once W3TC_INC_DIR . '/functions/file.php';
4-
5-/**
6- * Class Minify_Cache_File]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[11-
12-    public function __construct($path = '', $exclude = array(), $locking = false, $flushTimeLimit = 0) {
13-        if (!$path) {
14:            require_once W3TC_LIB_MINIFY_DIR . '/Solar/Dir.php';
15-            $path = rtrim(Solar_Dir::tmp(), DIRECTORY_SEPARATOR);
16-        }
17-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CombineOnly.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[11-     * @return string
12-     */
13-    public static function minify($content, $options = array()) {
14:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
15-
16-        $content = Minify_CSS_UriRewriter::rewrite($content, $options);
17-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSSTidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[25]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[22-
23-        set_include_path(get_include_path() . PATH_SEPARATOR . W3TC_LIB_CSSTIDY_DIR);
24-
25:        require_once 'class.csstidy.php';
26-
27-        $csstidy = new csstidy();
28-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSSTidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[35-
36-        $css = $csstidy->print->plain();
37-
38:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
39-
40-        $css = Minify_CSS_UriRewriter::rewrite($css, $options);
41-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/YUICompressor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[12]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[9-    }
10-
11-    public static function minifyCss($css, $options = array()) {
12:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS/UriRewriter.php';
13-
14-        $css = self::_minify('css', $css, $options);
15-        $css = Minify_CSS_UriRewriter::rewrite($css, $options);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Source.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[75]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[72-            }
73-            $this->filepath = $spec['filepath'];
74-            $this->_id = $spec['filepath'];
75:            require_once W3TC_LIB_MINIFY_DIR . '/Minify.php';
76-            $this->lastModified = filemtime($spec['filepath'])
77-                // offset for Windows uploaders with out of sync clocks
78-                + round(Minify::$uploaderHoursBehind * 3600);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Source.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[109]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[106-    public function getContent()
107-    {
108-        if (isset($this->minifyOptions['processCssImports']) && $this->minifyOptions['processCssImports']) {
109:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/ImportProcessor.php';
110-
111-            $content = Minify_ImportProcessor::process($this->filepath);
112-        } else {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[200]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[197-     * @return null
198-     */
199-    protected function log($msg) {
200:        require_once W3TC_LIB_MINIFY_DIR . '/Minify/Logger.php';
201-        Minify_Logger::log($msg);
202-    }
203-}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Version1.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for emulating version 1 of minify.php]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Groups.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for serving predetermined groups of minimized sets, selected]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Page.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for serving a single HTML page]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Page.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[79]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[76-        if ($this->_loadCssJsMinifiers) {
77-            // Minify will not call for these so we must manually load
78-            // them when Minify/HTML.php is called for.
79:            require_once W3TC_LIB_MINIFY_DIR . '/Minify/CSS.php';
80:            require_once W3TC_LIB_MINIFY_DIR . '/JSMin.php';
81-        }
82-        parent::loadMinifier($minifierCallback); // load Minify/HTML.php
83-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Files.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for minifying a set of files]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/MinApp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[7-    die();
8-}
9-
10:require_once W3TC_LIB_MINIFY_DIR . '/Minify/Controller/Base.php';
11-
12-/**
13- * Controller class for requests to /min/index.php]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1280]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1277-	* @return string
1278-	*/
1279-	public static function __getMimeType(&$file) {
1280:		require_once W3TC_INC_DIR . '/functions/mime.php';
1281-
1282-		$type = w3_get_mime_type($file);
1283-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.nusoap_base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[57]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[54-/* load classes
55-
56-// necessary classes
57:require_once('class.soapclient.php');
58:require_once('class.soap_val.php');
59:require_once('class.soap_parser.php');
60:require_once('class.soap_fault.php');
61-
62-// transport classes
63:require_once('class.soap_transport_http.php');
64-
65-// optional add-on classes
66:require_once('class.xmlschema.php');
67:require_once('class.wsdl.php');
68-
69-// server class
70:require_once('class.soap_server.php');*/
71-
72-// class variable emulation
73-// cf. http://www.webkreator.com/php/techniques/php-static-class-variables.html]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[57]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[54-/* load classes
55-
56-// necessary classes
57:require_once('class.soapclient.php');
58:require_once('class.soap_val.php');
59:require_once('class.soap_parser.php');
60:require_once('class.soap_fault.php');
61-
62-// transport classes
63:require_once('class.soap_transport_http.php');
64-
65-// optional add-on classes
66:require_once('class.xmlschema.php');
67:require_once('class.wsdl.php');
68-
69-// server class
70:require_once('class.soap_server.php');*/
71-
72-// class variable emulation
73-// cf. http://www.webkreator.com/php/techniques/php-static-class-variables.html]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[94]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[91-define('W3TC_ADDIN_FILE_DB', WP_CONTENT_DIR . '/db.php');
92-define('W3TC_ADDIN_FILE_OBJECT_CACHE', WP_CONTENT_DIR . '/object-cache.php');
93-
94:require_once W3TC_INC_DIR . '/functions/compat.php';
95:require_once W3TC_INC_DIR . '/functions/plugin.php';
96-
97-@ini_set('pcre.backtrack_limit', 4194304);
98-@ini_set('pcre.recursion_limit', 4194304);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1030]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1027- * @return string
1028- */
1029-function w3_redirect($url = '', $params = array()) {
1030:    require_once W3TC_INC_DIR . '/functions/url.php';
1031-
1032-    $url = w3_url_format($url, $params);
1033-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1219]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1216-    static $instances = array();
1217-
1218-    if (!isset($instances[$class])) {
1219:        require_once W3TC_LIB_W3_DIR . '/' .
1220-                str_replace('_', '/', substr($class, 3)) . '.php';
1221-        @$instances[$class] = & new $class();
1222-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1239]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[1236-    if ($dir) {
1237-        while (($entry = @readdir($dir)) !== false) {
1238-            if (strrchr($entry, '.') === '.php') {
1239:                require_once W3TC_PLUGINS_DIR . '/' . $entry;
1240-            }
1241-        }
1242-        @closedir($dir);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[6]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[3-if (!defined('W3TC')) 
4-    die();
5-
6:require_once W3TC_INC_DIR . '/functions/file.php';
7:require_once W3TC_INC_DIR . '/functions/rule.php';
8- 
9-?>
10-<h3>Compatibility Test</h3>]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/plugin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[62- * @return boolean
63- */
64-function w3tc_dbcache_flush() {
65:    require_once W3TC_LIB_W3_DIR . '/Db.php';
66-
67-    @$w3_db = & W3_Db::instance();
68-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/activation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[55]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[52-    $reactivate_url = wp_nonce_url('plugins.php?action=activate&plugin=' . W3TC_FILE, 'activate-plugin_' . W3TC_FILE);
53-    $reactivate_button = sprintf('<input type="button" value="re-activate plugin" onclick="top.location.href = \'%s\'" />', addslashes($reactivate_url));
54-
55:    require_once W3TC_INC_DIR . '/functions/file.php';
56-
57-    if (w3_check_open_basedir($path)) {
58-        $error = sprintf('<strong>%s</strong> could not be created, please run following command:<br /><strong style="color: #f00;">chmod 777 %s</strong><br />then %s.', $path, (file_exists($path) ? $path : dirname($path)), $reactivate_button);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/compat.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[27]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[24-        global $json;
25-
26-        if (!is_a($json, 'Services_JSON')) {
27:            require_once W3TC_LIB_DIR . '/JSON.php';
28-            $json = new Services_JSON();
29-        }
30-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/compat.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[40]]></line_number>
		<match><![CDATA[require_once]]></match>
		<name><![CDATA[require_once]]></name>
		<snippet><![CDATA[37-        global $json;
38-
39-        if (!is_a($json, 'Services_JSON')) {
40:            require_once W3TC_LIB_DIR . '/JSON.php';
41-            $json = new Services_JSON();
42-        }
43-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[326]]></line_number>
		<match><![CDATA[system(]]></match>
		<name><![CDATA[system(]]></name>
		<snippet><![CDATA[324- * $auth->authenticate();
325- *
326: * # Create a connection to the storage/cdn system(s) and pass in the
327- * # validated CF_Authentication instance.
328- * #
329- * $conn = new CF_Connection($auth);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[360]]></line_number>
		<match><![CDATA[system(]]></match>
		<name><![CDATA[system(]]></name>
		<snippet><![CDATA[357-     * #
358-     * $auth->authenticate();
359-     *
360:     * # Create a connection to the storage/cdn system(s) and pass in the
361-     * # validated CF_Authentication instance.
362-     * #
363-     * $conn = new CF_Connection($auth);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[827]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[825-
826-        if ($data) {
827:            $value = @unserialize($data);
828-
829-            return $value;
830-        }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PageSpeed.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[240]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[237-            $data = @file_get_contents($file);
238-
239-            if ($data) {
240:                return @unserialize($data);
241-            }
242-        }
243-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Xcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[51]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[48-     * @return mixed
49-     */
50-    function get($key) {
51:        return @unserialize(xcache_get($key));
52-    }
53-
54-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Apc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[51]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[48-     * @return mixed
49-     */
50-    function get($key) {
51:        return @unserialize(apc_fetch($key));
52-    }
53-
54-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/File.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[159]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[156-                                $data .= @fread($fp, 4096);
157-                            }
158-                            $data = substr($data, 9);
159:                            $var = @unserialize($data);
160-                        }
161-                    }
162-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Wincache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[47]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[44-     * @return mixed
45-     */
46-    function get($key) {
47:        return @unserialize(wincache_ucache_get($key));
48-    }
49-
50-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cache/Eaccelerator.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[51]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[48-     * @return mixed
49-     */
50-    function get($key) {
51:        return @unserialize(eaccelerator_get($key));
52-    }
53-
54-    /**]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[344]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[341-                    }
342-
343-                    if ($post->metadata) {
344:                        $metadata = @unserialize($post->metadata);
345-
346-                        $post_files = array_merge($post_files, $this->_get_common()->get_metadata_files($metadata));
347-                    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[875]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[872-                    }
873-
874-                    if ($post->metadata) {
875:                        $metadata = @unserialize($post->metadata);
876-
877-                        $post_files = array_merge($post_files, $this->get_metadata_files($metadata));
878-                    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdlcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[112]]></line_number>
		<match><![CDATA[unserialize(]]></match>
		<name><![CDATA[unserialize(]]></name>
		<snippet><![CDATA[109-				$this->debug("$wsdl ($filename) not in cache (2)");
110-			}
111-			$this->releaseMutex($filename);
112:			return (!is_null($s)) ? unserialize($s) : null;
113-		} else {
114-			$this->debug("Unable to obtain mutex for $filename in get");
115-		}]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[49]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[47- * @version 1.0
48- */
49:$GLOBALS['csstidy']['tokens'] = '/@}{;:=\'"(,\\!$%&)*+.<>?[]^`|~';
50-
51-/**
52- * All CSS units (CSS 3 units included)]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[882]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[879-         * Both %d and %s should be left unquoted in the query string.
880-         *
881-         * <code>
882:         * wpdb::prepare( "SELECT * FROM `table` WHERE `column` = %s AND `field` = %d", 'foo', 1337 )
883:         * wpdb::prepare( "SELECT DATE_FORMAT(`field`, '%%c') FROM `table` WHERE `column` = %s", 'foo' );
884-         * </code>
885-         *
886-         * @link http://php.net/sprintf Description of syntax.]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1363]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[1360-                                $form = '%s';
1361-                        $formatted_fields[] = $form;
1362-                }
1363:                $sql = "{$type} INTO `$table` (`" . implode( '`,`', $fields ) . "`) VALUES ('" . implode( "','", $formatted_fields ) . "')";
1364-                return $this->query( $this->prepare( $sql, $data ) );
1365-        }
1366-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1401]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[1398-                                $form = $this->field_types[$field];
1399-                        else
1400-                                $form = '%s';
1401:                        $bits[] = "`$field` = {$form}";
1402-                }
1403-
1404-                $where_formats = $where_format = (array) $where_format;]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1412]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[1409-                                $form = $this->field_types[$field];
1410-                        else
1411-                                $form = '%s';
1412:                        $wheres[] = "`$field` = {$form}";
1413-                }
1414-
1415:                $sql = "UPDATE `$table` SET " . implode( ', ', $bits ) . ' WHERE ' . implode( ' AND ', $wheres );
1416-                return $this->query( $this->prepare( $sql, array_merge( array_values( $data ), array_values( $where ) ) ) );
1417-        }
1418-]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2346]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[2343-        $query = str_replace('LENGTH (', 'LEN (', $query);
2344-
2345-        // TICKS
2346:        $query = str_replace('`', '', $query);
2347-
2348-        // avoiding some nested as Computed issues
2349-        if (stristr($query, 'SELECT COUNT(DISTINCT(' . $this->prefix . 'users.ID))') !== FALSE) {]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[116]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[113-        global $wpdb;
114-
115-        if ($drop) {
116:            $sql = sprintf('DROP TABLE IF EXISTS `%s%s`', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
117-
118-            $wpdb->query($sql);
119-        }
120-
121:        $sql = sprintf("CREATE TABLE IF NOT EXISTS `%s%s` (
122:            `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
123:            `local_path` varchar(150) NOT NULL DEFAULT '',
124:            `remote_path` varchar(150) NOT NULL DEFAULT '',
125:            `command` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '1 - Upload, 2 - Delete, 3 - Purge',
126:            `last_error` varchar(150) NOT NULL DEFAULT '',
127:            `date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
128:            PRIMARY KEY (`id`),
129:            UNIQUE KEY `path` (`local_path`, `remote_path`),
130:            KEY `date` (`date`)
131-        ) /*!40100 CHARACTER SET latin1 */", $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
132-
133-        $wpdb->query($sql);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[146]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[143-    function table_delete() {
144-        global $wpdb;
145-
146:        $sql = sprintf('DROP TABLE IF EXISTS `%s%s`', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
147-
148-        return $wpdb->query($sql);
149-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[182]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[179-        global $wpdb;
180-
181-        if ($drop) {
182:            $sql = sprintf('DROP TABLE IF EXISTS `%s%s`', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
183-
184-            $wpdb->query($sql);
185-        }
186-
187:        $sql = sprintf("CREATE TABLE IF NOT EXISTS `%s%s` (
188:            `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
189:            `local_path` varchar(150) NOT NULL DEFAULT '',
190:            `remote_path` varchar(150) NOT NULL DEFAULT '',
191:            `command` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '1 - Upload, 2 - Delete, 3 - Purge',
192:            `last_error` varchar(150) NOT NULL DEFAULT '',
193:            `date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
194:            PRIMARY KEY (`id`),
195:            UNIQUE KEY `path` (`local_path`, `remote_path`),
196:            KEY `date` (`date`)
197-        ) /*!40100 CHARACTER SET latin1 */", $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
198-
199-        $wpdb->query($sql);]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[212]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[209-    function table_delete() {
210-        global $wpdb;
211-
212:        $sql = sprintf('DROP TABLE IF EXISTS `%s%s`', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
213-
214-        return $wpdb->query($sql);
215-    }]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/JSON.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[36]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[33- * in the documentation and/or other materials provided with the
34- * distribution.
35- *
36: * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED
37- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
38- * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
39- * NO EVENT SHALL CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[48]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[45-    const CHAR_MARK     = '-_.!~*\'()\[\]';
46-    const CHAR_RESERVED = ';\/?:@&=+$,';
47-    const CHAR_SEGMENT  = ':@&=+$,;';
48:    const CHAR_UNWISE   = '{}|\\\\^`';
49-
50-    /**
51-     * HTTP username]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1049]]></line_number>
		<match><![CDATA[`]]></match>
		<name><![CDATA[`]]></name>
		<snippet><![CDATA[1046-   * in the documentation and/or other materials provided with the
1047-   * distribution.
1048-   *
1049:   * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED
1050-   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
1051-   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
1052-   * NO EVENT SHALL CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,]]></snippet>
		<group><![CDATA[dangerous_functions]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/SessionHandler.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[150]]></line_number>
		<match><![CDATA[base64_decode(]]></match>
		<name><![CDATA[base64_decode(]]></name>
		<snippet><![CDATA[148-                $id
149-            );
150:            return base64_decode($sessionRecord->serializedData);
151-        }
152-        catch (Microsoft_WindowsAzure_Exception $ex)
153-        {]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[467]]></line_number>
		<match><![CDATA[base64_decode(]]></match>
		<name><![CDATA[base64_decode(]]></name>
		<snippet><![CDATA[464-					($peek ? '' : (string)$xmlMessages[$i]->PopReceipt),
465-					($peek ? '' : (string)$xmlMessages[$i]->TimeNextVisible),
466-					(string)$xmlMessages[$i]->DequeueCount,
467:					base64_decode((string)$xmlMessages[$i]->MessageText)
468-			    );
469-			}
470-]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[111]]></line_number>
		<match><![CDATA[base64_decode(]]></match>
		<name><![CDATA[base64_decode(]]></name>
		<snippet><![CDATA[108-		$usePathStyleUri = false
109-	) {
110-		$this->_accountName = $accountName;
111:		$this->_accountKey = base64_decode($accountKey);
112-		$this->_usePathStyleUri = $usePathStyleUri;
113-	}
114-]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[135]]></line_number>
		<match><![CDATA[base64_decode(]]></match>
		<name><![CDATA[base64_decode(]]></name>
		<snippet><![CDATA[132-	 */
133-	public function setAccountkey($value = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_KEY)
134-	{
135:		$this->_accountKey = base64_decode($value);
136-		return $this;
137-	}
138-]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7020]]></line_number>
		<match><![CDATA[base64_decode(]]></match>
		<name><![CDATA[base64_decode(]]></name>
		<snippet><![CDATA[7017-		}
7018-		if ($type == 'base64' || $type == 'base64Binary') {
7019-			$this->debug('Decode base64 value');
7020:			return base64_decode($value);
7021-		}
7022-		// obscure numeric types
7023-		if ($type == 'nonPositiveInteger' || $type == 'negativeInteger']]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_parser.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[504]]></line_number>
		<match><![CDATA[base64_decode(]]></match>
		<name><![CDATA[base64_decode(]]></name>
		<snippet><![CDATA[501-		}
502-		if ($type == 'base64' || $type == 'base64Binary') {
503-			$this->debug('Decode base64 value');
504:			return base64_decode($value);
505-		}
506-		// obscure numeric types
507-		if ($type == 'nonPositiveInteger' || $type == 'negativeInteger']]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[404]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[402-     */
403-    function _get_content_md5($md5) {
404:        return base64_encode(pack('H*', $md5));
405-    }
406-
407-    /**]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1382]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[1379-                    throw new Microsoft_Http_Client_Exception("The user name cannot contain ':' in 'Basic' HTTP authentication");
1380-                }
1381-
1382:                $authHeader = 'Basic ' . base64_encode($user . ':' . $password);
1383-                break;
1384-
1385-            //case self::AUTH_DIGEST:]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/SessionHandler.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[168]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[165-    {
166-        $sessionRecord = new Microsoft_WindowsAzure_Storage_DynamicTableEntity($this->_sessionTablePartition, $id);
167-        $sessionRecord->sessionExpires = time();
168:        $sessionRecord->serializedData = base64_encode($serializedData);
169-
170-        $sessionRecord->setAzurePropertyType('sessionExpires', 'Edm.Int32');
171-]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[393]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[390-	    // Build body
391-	    $rawData = '';
392-	    $rawData .= '<QueueMessage>';
393:	    $rawData .= '    <MessageText>' . base64_encode($message) . '</MessageText>';
394-	    $rawData .= '</QueueMessage>';
395-
396-		// Perform request]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[831]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[828-		$resourceName = self::createResourceName($containerName , $blobName);
829-
830-		// Upload
831:		$response = $this->_performRequest($resourceName, '?comp=block&blockid=' . base64_encode($identifier), Microsoft_Http_Client::PUT, $headers, false, $contents, Microsoft_WindowsAzure_Storage::RESOURCE_BLOB, Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);
832-		if (!$response->isSuccessful()) {
833-			throw new Microsoft_WindowsAzure_Exception($this->_getErrorMessage($response, 'Resource could not be accessed.'));
834-		}]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[869]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[866-		// Generate block list
867-		$blocks = '';
868-		foreach ($blockList as $block) {
869:			$blocks .= '  <Latest>' . base64_encode($block) . '</Latest>' . "\n";
870-		}
871-
872-		// Generate block list request]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[163]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[160-    	$stringToSign[] = $identifier;
161-
162-    	$stringToSign = implode("\n", $stringToSign);
163:    	$signature    = base64_encode(hash_hmac('sha256', $stringToSign, $this->_accountKey, true));
164-
165-    	return $signature;
166-    }]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKeyLite.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[142]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[139-    	$stringToSign[] = $requestDate; // Date
140-    	$stringToSign[] = $canonicalizedResource;		 			// Canonicalized resource
141-    	$stringToSign   = implode("\n", $stringToSign);
142:    	$signString     = base64_encode(hash_hmac('sha256', $stringToSign, $this->_accountKey, true));
143-
144-    	// Sign request
145-    	$headers[Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PREFIX_STORAGE_HEADER . 'date'] = $requestDate;]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[194]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[191-
192-    	$stringToSign[] = $canonicalizedResource;		 			// Canonicalized resource
193-    	$stringToSign   = implode("\n", $stringToSign);
194:    	$signString     = base64_encode(hash_hmac('sha256', $stringToSign, $this->_accountKey, true));
195-
196-    	// Sign request
197-    	$headers[Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PREFIX_STORAGE_HEADER . 'date'] = $requestDate;]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[289]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[286-		}
287-		return array('file' => $file, 'size' => filesize($file),
288-		'md5sum' => $md5sum !== false ? (is_string($md5sum) ? $md5sum :
289:		base64_encode(md5_file($file, true))) : '');
290-	}
291-
292-]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[329]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[326-
327-		if (is_string($input)) $input = array(
328-			'data' => $input, 'size' => strlen($input),
329:			'md5sum' => base64_encode(md5($input, true))
330-		);
331-
332-		// Data]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[860]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[857-			$obj = new stdClass; $obj->{$headerKey} = (string)$headerVal; array_push($policy->conditions, $obj);
858-		}
859-		array_push($policy->conditions, array('content-length-range', 0, $maxFileSize));
860:		$policy = base64_encode(str_replace('\/', '/', json_encode($policy)));
861-
862-		// Create parameters
863-		$params = new stdClass;]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1310]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[1307-	* @return string
1308-	*/
1309-	private static function __getHash($string) {
1310:		return base64_encode(extension_loaded('hash') ?
1311-		hash_hmac('sha1', $string, self::$__secretKey, true) : pack('H*', sha1(
1312-		(str_pad(self::$__secretKey, 64, chr(0x00)) ^ (str_repeat(chr(0x5c), 64))) .
1313-		pack('H*', sha1((str_pad(self::$__secretKey, 64, chr(0x00)) ^]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[476]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[473-		$this->appendDebug($this->varDump($certRequest));
474-		// cf. RFC 2617
475-		if ($authtype == 'basic') {
476:			$this->setHeader('Authorization', 'Basic '.base64_encode(str_replace(':','',$username).':'.$password));
477-		} elseif ($authtype == 'digest') {
478-			if (isset($digestRequest['nonce'])) {
479-				$digestRequest['nc'] = isset($digestRequest['nc']) ? $digestRequest['nc']++ : 1;]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[587]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[584-				'authtype' => $proxyauthtype
585-			);
586-			if ($proxyusername != '' && $proxypassword != '' && $proxyauthtype = 'basic') {
587:				$this->setHeader('Proxy-Authorization', ' Basic '.base64_encode($proxyusername.':'.$proxypassword));
588-			}
589-		} else {
590-			$this->debug('remove proxy');]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2629]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[2626-		$this->appendDebug($this->varDump($certRequest));
2627-		// cf. RFC 2617
2628-		if ($authtype == 'basic') {
2629:			$this->setHeader('Authorization', 'Basic '.base64_encode(str_replace(':','',$username).':'.$password));
2630-		} elseif ($authtype == 'digest') {
2631-			if (isset($digestRequest['nonce'])) {
2632-				$digestRequest['nc'] = isset($digestRequest['nc']) ? $digestRequest['nc']++ : 1;]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2740]]></line_number>
		<match><![CDATA[base64_encode(]]></match>
		<name><![CDATA[base64_encode(]]></name>
		<snippet><![CDATA[2737-				'authtype' => $proxyauthtype
2738-			);
2739-			if ($proxyusername != '' && $proxypassword != '' && $proxyauthtype = 'basic') {
2740:				$this->setHeader('Proxy-Authorization', ' Basic '.base64_encode($proxyusername.':'.$proxypassword));
2741-			}
2742-		} else {
2743-			$this->debug('remove proxy');]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[770]]></line_number>
		<match><![CDATA[gzdeflate(]]></match>
		<name><![CDATA[gzdeflate(]]></name>
		<snippet><![CDATA[768-
769-            case 'deflate':
770:                $data = gzdeflate($data);
771-                break;
772-        }
773-    }]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[302]]></line_number>
		<match><![CDATA[gzdeflate(]]></match>
		<name><![CDATA[gzdeflate(]]></name>
		<snippet><![CDATA[299-                    break;
300-
301-                case 'deflate':
302:                    $content = gzdeflate($content, self::$_options['encodeLevel']);
303-                    break;
304-            }
305-            // still need to encode]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/Encoder.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[238]]></line_number>
		<match><![CDATA[gzdeflate(]]></match>
		<name><![CDATA[gzdeflate(]]></name>
		<snippet><![CDATA[235-            return false;
236-        }
237-        if ($this->_encodeMethod[0] === 'deflate') {
238:            $encoded = gzdeflate($this->_content, $compressionLevel);
239-        } elseif ($this->_encodeMethod[0] === 'gzip') {
240-            $encoded = gzencode($this->_content, $compressionLevel);
241-        } else {]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4260]]></line_number>
		<match><![CDATA[gzdeflate(]]></match>
		<name><![CDATA[gzdeflate(]]></name>
		<snippet><![CDATA[4257-						$payload .= "<!-- Content being deflated -->";
4258-					}
4259-					$this->outgoing_headers[] = "Content-Encoding: deflate";
4260:					$payload = gzdeflate($payload);
4261-				} else {
4262-					if (isset($this->debug_flag) && $this->debug_flag) {
4263-						$payload .= "<!-- Content will not be deflated: no gzcompress -->";]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[642]]></line_number>
		<match><![CDATA[gzuncompress(]]></match>
		<name><![CDATA[gzuncompress(]]></name>
		<snippet><![CDATA[640-        $zlibHeader = unpack('n', substr($body, 0, 2));
641-        if ($zlibHeader[1] % 31 == 0) {
642:            return gzuncompress($body);
643-        } else {
644-            return gzinflate($body);
645-        }]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3914]]></line_number>
		<match><![CDATA[gzuncompress(]]></match>
		<name><![CDATA[gzuncompress(]]></name>
		<snippet><![CDATA[3911-			if ($this->headers['content-encoding'] == 'deflate' || $this->headers['content-encoding'] == 'gzip') {
3912-		    	// if decoding works, use it. else assume data wasn't gzencoded
3913-				if (function_exists('gzuncompress')) {
3914:					if ($this->headers['content-encoding'] == 'deflate' && $degzdata = @gzuncompress($data)) {
3915-						$data = $degzdata;
3916-					} elseif ($this->headers['content-encoding'] == 'gzip' && $degzdata = gzinflate(substr($data, 10))) {
3917-						$data = $degzdata;]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/JSON.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[54]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[52- * @author		Brett Stimmerman <brettstimmerman[at]gmail[dot]com>
53- * @copyright	2005 Michal Migurski
54: * @version     CVS: $Id: JSON.php 288200 2009-09-09 15:41:29Z alan_k $
55- * @license		http://www.opensource.org/licenses/bsd-license.php
56- * @link		http://pear.php.net/pepr/pepr-proposal-show.php?id=198
57- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @package   Microsoft_Uri
17- * @copyright Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
18- * @license   http://framework.zend.com/license/new-bsd     New BSD License
19: * @version   $Id: Uri.php 18950 2009-11-12 15:37:56Z alexander $
20- */
21-
22-/**]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[18]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[15- * @category   Microsoft
16- * @package    Microsoft_Http
17- * @subpackage CookieJar
18: * @version    $Id: CookieJar.php 17131 2009-07-26 10:03:39Z shahar $
19- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
20- * @license    http://framework.zend.com/license/new-bsd     New BSD License
21- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @category   Microsoft
17- * @package    Microsoft_Http
18- * @subpackage Response
19: * @version    $Id: Response.php 17131 2009-07-26 10:03:39Z shahar $
20- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[20]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[17- * @package    Microsoft_Http
18- * @subpackage Cookie
19- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
20: * @version    $Id: Cookie.php 17131 2009-07-26 10:03:39Z shahar $
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */
23-if (!defined('W3TC')) {]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @category   Microsoft
17- * @package    Microsoft_Http
18- * @subpackage Client
19: * @version    $Id: Client.php 19661 2009-12-15 18:03:07Z matthew $
20- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Response.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @category   Microsoft
17- * @package    Microsoft_Http
18- * @subpackage Response
19: * @version    $Id: Response.php 35835 2009-12-17 09:40:36Z unknown $
20- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[18]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[15- * @category   Microsoft
16- * @package    Microsoft_Http
17- * @subpackage Client_Exception
18: * @version    $Id: Exception.php 16872 2009-07-20 11:47:08Z mikaelkael $
19- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
20- * @license    http://framework.zend.com/license/new-bsd     New BSD License
21- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @category   Microsoft
17- * @package    Microsoft_Http
18- * @subpackage Client_Adapter
19: * @version    $Id: Proxy.php 17059 2009-07-25 11:24:49Z shahar $
20- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[18]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[15- * @category   Microsoft
16- * @package    Microsoft_Http
17- * @subpackage Client_Adapter_Exception
18: * @version    $Id: Exception.php 17026 2009-07-24 09:09:19Z shahar $
19- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
20- * @license    http://framework.zend.com/license/new-bsd     New BSD License
21- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @category   Microsoft
17- * @package    Microsoft_Http
18- * @subpackage Client_Adapter
19: * @version    $Id: Interface.php 16214 2009-06-21 19:34:03Z thomas $
20- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @category   Microsoft
17- * @package    Microsoft_Http
18- * @subpackage Client_Adapter
19: * @version    $Id: Curl.php 19238 2009-11-25 17:13:38Z bate $
20- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Interface.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @category   Microsoft
17- * @package    Microsoft_Http
18- * @subpackage Client_Adapter
19: * @version    $Id: Interface.php 16214 2009-06-21 19:34:03Z thomas $
20- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @category   Microsoft
17- * @package    Microsoft_Http
18- * @subpackage Client_Adapter
19: * @version    $Id: Socket.php 19219 2009-11-24 22:25:36Z stas $
20- * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
21- * @license    http://framework.zend.com/license/new-bsd     New BSD License
22- */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[32]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[29- * @package    Microsoft_WindowsAzure
30- * @copyright  Copyright (c) 2009 - 2010, RealDolmen (http://www.realdolmen.com)
31- * @license    http://phpazure.codeplex.com/license
32: * @version    $Id: SharedKeyCredentials.php 14561 2009-05-07 08:05:12Z unknown $
33- */
34-if (!defined('W3TC')) {
35-    die();]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedAccessSignature.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[32]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[29- * @package    Microsoft_WindowsAzure
30- * @copyright  Copyright (c) 2009 - 2010, RealDolmen (http://www.realdolmen.com)
31- * @license    http://phpazure.codeplex.com/license
32: * @version    $Id: SharedKeyCredentials.php 24305 2009-07-23 06:30:04Z unknown $
33- */
34-if (!defined('W3TC')) {
35-    die();]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKeyLite.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[32]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[29- * @package    Microsoft_WindowsAzure
30- * @copyright  Copyright (c) 2009 - 2010, RealDolmen (http://www.realdolmen.com)
31- * @license    http://phpazure.codeplex.com/license
32: * @version    $Id: SharedKeyCredentials.php 14561 2009-05-07 08:05:12Z unknown $
33- */
34-if (!defined('W3TC')) {
35-    die();]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[32]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[29- * @package    Microsoft_WindowsAzure
30- * @copyright  Copyright (c) 2009 - 2010, RealDolmen (http://www.realdolmen.com)
31- * @license    http://phpazure.codeplex.com/license
32: * @version    $Id$
33- */
34-if (!defined('W3TC')) {
35-    die();]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Exception.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @package   Microsoft_Uri
17- * @copyright Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
18- * @license   http://framework.zend.com/license/new-bsd     New BSD License
19: * @version   $Id: Exception.php 16208 2009-06-21 19:19:26Z thomas $
20- */
21-if (!defined('W3TC')) {
22-    die();]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[19]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[16- * @package   Microsoft_Uri
17- * @copyright Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
18- * @license   http://framework.zend.com/license/new-bsd     New BSD License
19: * @version   $Id: Http.php 19041 2009-11-19 15:19:07Z sgehrig $
20- */
21-if (!defined('W3TC')) {
22-    die();]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1068]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[1065-   * @author      Brett Stimmerman <brettstimmerman[at]gmail[dot]com>
1066-   * @author      Christoph Dorn <christoph@christophdorn.com>
1067-   * @copyright   2005 Michal Migurski
1068:   * @version     CVS: $Id: JSON.php,v 1.31 2006/06/28 05:54:17 migurski Exp $
1069-   * @license     http://www.opensource.org/licenses/bsd-license.php
1070-   * @link        http://pear.php.net/pepr/pepr-proposal-show.php?id=198
1071-   */]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Solar/Dir.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[11- * 
12- * @license http://opensource.org/licenses/bsd-license.php BSD
13- * 
14: * @version $Id: Dir.php 2926 2007-11-09 16:25:44Z pmjones $
15- * 
16- */
17-class Solar_Dir {]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3]]></line_number>
		<match><![CDATA[$$]]></match>
		<name><![CDATA[$$]]></name>
		<snippet><![CDATA[1-<?php
2-/**
3:* $Id: S3.php 47 2009-07-20 01:25:40Z don.schonknecht $
4-*
5-* Copyright (c) 2008, Donovan Schönknecht.  All rights reserved.
6-*]]></snippet>
		<group><![CDATA[payload_obfuscators]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[130]]></line_number>
		<match><![CDATA[$_GET]]></match>
		<name><![CDATA[$_GET]]></name>
		<snippet><![CDATA[128-         */
129-        if ($hash) {
130:            $_GET['f'] = $this->get_files($hash, $type);
131-        } else {
132:            $_GET['g'] = $location;
133-            $serve_options['minApp']['groups'] = $this->get_groups($theme, $template, $type);
134-        }
135-]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Request.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[106]]></line_number>
		<match><![CDATA[$_GET]]></match>
		<name><![CDATA[$_GET]]></name>
		<snippet><![CDATA[103-     * @return array
104-     */
105-    function get_request() {
106:        if (!isset($_GET)) {
107:            $_GET = array();
108-        }
109-
110-        if (!isset($_POST)) {
111-            $_POST = array();
112-        }
113-
114:        return array_merge($_GET, $_POST);
115-    }
116-}]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheActivation.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[$_GET]]></match>
		<name><![CDATA[$_GET]]></name>
		<snippet><![CDATA[25-        /**
26-         * Disable buggy sitewide activation in WPMU and WP 3.0
27-         */
28:        if ((w3_is_wpmu() && isset($_GET['sitewide'])) || (w3_is_multisite() && isset($_GET['networkwide']))) {
29-            w3_network_activate_error();
30-        }
31-]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Version1.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[44]]></line_number>
		<match><![CDATA[$_GET]]></match>
		<name><![CDATA[$_GET]]></name>
		<snippet><![CDATA[41-
42-        // The following restrictions are to limit the URLs that minify will
43-        // respond to. Ideally there should be only one way to reference a file.
44:        if (! isset($_GET['files'])
45-            // verify at least one file, files are single comma separated,
46-            // and are all same extension
47:            || ! preg_match('/^[^,]+\\.(css|js)(,[^,]+\\.\\1)*$/', $_GET['files'], $m)
48-            // no "//" (makes URL rewriting easier)
49:            || strpos($_GET['files'], '//') !== false
50-            // no "\"
51:            || strpos($_GET['files'], '\\') !== false
52-            // no "./"
53:            || preg_match('/(?:^|[^\\.])\\.\\//', $_GET['files'])
54-        ) {
55-            return $options;
56-        }
57-        $extension = $m[1];
58-
59:        $files = explode(',', $_GET['files']);
60-        if (count($files) > MINIFY_MAX_FILES) {
61-            return $options;
62-        }]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/MinApp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[40]]></line_number>
		<match><![CDATA[$_GET]]></match>
		<name><![CDATA[$_GET]]></name>
		<snippet><![CDATA[37-        );
38-        unset($options['minApp']);
39-        $sources = array();
40:        if (isset($_GET['g'])) {
41-            // try groups
42:            if (! isset($cOptions['groups'][$_GET['g']])) {
43:                $this->log("A group configuration for \"{$_GET['g']}\" was not set");
44-                return $options;
45-            }
46-
47:            $files = $cOptions['groups'][$_GET['g']];
48-            // if $files is a single object, casting will break it
49-            if (is_object($files)) {
50-                $files = array($files);]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/MinApp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[72]]></line_number>
		<match><![CDATA[$_GET]]></match>
		<name><![CDATA[$_GET]]></name>
		<snippet><![CDATA[69-                    continue;
70-                }
71-            }
72:        } elseif (! $cOptions['groupsOnly'] && isset($_GET['f'])) {
73-            // try user files
74-            // The following restrictions are to limit the URLs that minify will
75-            // respond to. Ideally there should be only one way to reference a file.
76-            if (// verify at least one file, files are single comma separated,
77-                // and are all same extension
78:                ! preg_match('/^[^,]+\\.(css|js)(?:,[^,]+\\.\\1)*$/', $_GET['f'])
79-                // no "//"
80:                || strpos($_GET['f'], '//') !== false
81-                // no "\"
82:                || strpos($_GET['f'], '\\') !== false
83-                // no "./"
84:                || preg_match('/(?:^|[^\\.])\\.\\//', $_GET['f'])
85-            ) {
86:                $this->log("GET['f'] param invalid: \"{$_GET['f']}\"");
87-                return $options;
88-            }
89:            $files = explode(',', $_GET['f']);
90-            if (count($files) > $cOptions['maxFiles'] || $files != array_unique($files)) {
91-                $this->log("Too many or duplicate files specified: \"" . implode(', ', $files) . "\"");
92-                return $options;
93-            }
94:            if (!empty($_GET['b'])) {
95-                // check for validity
96:                if (preg_match('@^[^/]+(?:/[^/]+)*$@', $_GET['b'])
97:                    && false === strpos($_GET['b'], '..')
98:                    && $_GET['b'] !== '.') {
99-                    // valid base
100:                    $base = "/{$_GET['b']}/";
101-                } else {
102:                    $this->log("GET['b'] param invalid: \"{$_GET['b']}\"");
103-                    return $options;
104-                }
105-            } else {]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Request.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[110]]></line_number>
		<match><![CDATA[$_POST]]></match>
		<name><![CDATA[$_POST]]></name>
		<snippet><![CDATA[108-        }
109-
110:        if (!isset($_POST)) {
111:            $_POST = array();
112-        }
113-
114:        return array_merge($_GET, $_POST);
115-    }
116-}]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[265]]></line_number>
		<match><![CDATA[$_REQUEST]]></match>
		<name><![CDATA[$_REQUEST]]></name>
		<snippet><![CDATA[263-        $action = false;
264-
265:        foreach ($_REQUEST as $key => $value) {
266-            if (strpos($key, 'w3tc_') === 0) {
267-                $action = 'action_' . substr($key, 5);
268-                break;]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[43]]></line_number>
		<match><![CDATA[$_REQUEST]]></match>
		<name><![CDATA[$_REQUEST]]></name>
		<snippet><![CDATA[40-            'admin_bar_menu'
41-        ), 150);
42-
43:        if (isset($_REQUEST['w3tc_theme']) && isset($_SERVER['HTTP_USER_AGENT']) &&
44-                $_SERVER['HTTP_USER_AGENT'] == W3TC_POWERED_BY) {
45-            add_filter('template', array(
46-                &$this,]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCacheFlush.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[352]]></line_number>
		<match><![CDATA[$_REQUEST]]></match>
		<name><![CDATA[$_REQUEST]]></name>
		<snippet><![CDATA[349-            return $comment_post_ID;
350-        } elseif (is_single() || is_page() && count($posts)) {
351-            return $posts[0]->ID;
352:        } elseif (isset($_REQUEST['p'])) {
353:            return (integer) $_REQUEST['p'];
354-        }
355-
356-        return 0;]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[229]]></line_number>
		<match><![CDATA[$_REQUEST]]></match>
		<name><![CDATA[$_REQUEST]]></name>
		<snippet><![CDATA[226- * @return boolean
227- */
228-function w3_is_preview_mode() {
229:    return (w3_is_preview_config() && (defined('WP_ADMIN') || isset($_REQUEST['w3tc_preview']) || (isset($_SERVER['HTTP_REFERER']) && strstr($_SERVER['HTTP_REFERER'], 'w3tc_preview') !== false)));
230-}
231-
232-/**]]></snippet>
		<group><![CDATA[form_data]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/w3tc/min/index.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[6]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[4- * W3 Total Cache Minify module
5- */
6:if (isset($_SERVER['SCRIPT_FILENAME']) && strstr($_SERVER['SCRIPT_FILENAME'], 'w3-total-cache') !== false) {
7-    die();
8-}
9-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[84]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[81-        /**
82-         * Fix DOCUMENT_ROOT
83-         */
84:        $_SERVER['DOCUMENT_ROOT'] = w3_get_document_root();
85-
86-        /**
87-         * Set cache engine]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[217]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[214-     * @return bool
215-     */
216-    function log($msg) {
217:        $data = sprintf("[%s] [%s] [%s] %s\n", date('r'), $_SERVER['REQUEST_URI'], (!empty($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : '-'), $msg);
218-
219-        return @file_put_contents(W3TC_MINIFY_LOG_FILE, $data, FILE_APPEND);
220-    }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[688]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[685-     * @return boolean
686-     */
687-    function _send_notification() {
688:        $from_email = 'wordpress@' . w3_get_domain($_SERVER['SERVER_NAME']);
689-        $from_name = get_option('blogname');
690-        $to_name = $to_email = get_option('admin_email');
691-        $body = @file_get_contents(W3TC_INC_DIR . '/email/minify_error_notification.php');]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[113]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[110-    function __construct() {
111-        $this->_config = & w3_instance('W3_Config');
112-        $this->_debug = $this->_config->get_boolean('pgcache.debug');
113:        $this->_request_uri = $_SERVER['REQUEST_URI'];
114-        $this->_lifetime = $this->_config->get_integer('browsercache.html.lifetime');
115-        $this->_enhanced_mode = ($this->_config->get_string('pgcache.engine') == 'file_generic');
116-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[474]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[471-        /**
472-         * Skip if posting
473-         */
474:        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
475-            $this->cache_reject_reason = 'Requested method is POST';
476-
477-            return false;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[492]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[489-        /**
490-         * Check request URI
491-         */
492:        if (!in_array($_SERVER['PHP_SELF'], $this->_config->get_array('pgcache.accept.files')) && !$this->_check_request_uri()) {
493-            $this->cache_reject_reason = 'Requested URI is rejected';
494-
495-            return false;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[704]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[701-        }
702-
703-        foreach ($uas as $ua) {
704:            if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], $ua) !== false) {
705-                return false;
706-            }
707-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[824]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[821-            $compressions = $this->_get_compressions();
822-
823-            foreach ($compressions as $compression) {
824:                if (isset($_SERVER['HTTP_ACCEPT_ENCODING']) && stristr($_SERVER['HTTP_ACCEPT_ENCODING'], $compression) !== false) {
825-                    return $compression;
826-                }
827-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[877]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[874-     * @return boolean
875-     */
876-    function _is_buggy_ie() {
877:        if (isset($_SERVER['HTTP_USER_AGENT'])) {
878:            $ua = $_SERVER['HTTP_USER_AGENT'];
879-
880-            if (strpos($ua, 'Mozilla/4.0 (compatible; MSIE ') === 0 && strpos($ua, 'Opera') === false) {
881-                $version = (float) substr($ua, 30);]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1200]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1197-     * @return boolean
1198-     */
1199-    function _check_modified_since($time) {
1200:        if (!empty($_SERVER['HTTP_IF_MODIFIED_SINCE'])) {
1201:            $if_modified_since = $_SERVER['HTTP_IF_MODIFIED_SINCE'];
1202-
1203-            // IE has tacked on extra data to this header, strip it
1204-            if (($semicolon = strrpos($if_modified_since, ';')) !== false) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1220]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1217-     * @return boolean
1218-     */
1219-    function _check_match($etag) {
1220:        if (!empty($_SERVER['HTTP_IF_NONE_MATCH'])) {
1221:            $if_none_match = (get_magic_quotes_gpc() ? stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) : $_SERVER['HTTP_IF_NONE_MATCH']);
1222-            $client_etags = explode(',', $if_none_match);
1223-
1224-            foreach ($client_etags as $client_etag) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[553]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[550-        /**
551-         * Check User Agent
552-         */
553:        if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], W3TC_POWERED_BY) !== false) {
554-            return false;
555-        }
556-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[611]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[608-        );
609-
610-        foreach ($auto_reject_uri as $uri) {
611:            if (strstr($_SERVER['REQUEST_URI'], $uri) !== false) {
612-                return false;
613-            }
614-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[621]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[618-
619-        foreach ($reject_uri as $expr) {
620-            $expr = trim($expr);
621:            if ($expr != '' && preg_match('~' . $expr . '~i', $_SERVER['REQUEST_URI'])) {
622-                return false;
623-            }
624-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Referrer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[44]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[41-
42-        if (isset($_COOKIE[W3TC_REFERRER_COOKIE_NAME])) {
43-            $http_referrer = $_COOKIE[W3TC_REFERRER_COOKIE_NAME];
44:        } elseif (isset($_SERVER['HTTP_REFERER'])) {
45:            $http_referrer = $_SERVER['HTTP_REFERER'];
46-
47-            setcookie(W3TC_REFERRER_COOKIE_NAME, $http_referrer, 0, w3_get_base_path());
48-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/BrowserCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[116]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[113-        /**
114-         * Check User Agent
115-         */
116:        if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], W3TC_POWERED_BY) !== false) {
117-            return false;
118-        }
119-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[996]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[993-        ));
994-
995-        foreach ($uas as $ua) {
996:            if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], $ua) !== false) {
997-                return false;
998-            }
999-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1034]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1031-        );
1032-
1033-        foreach ($auto_reject_uri as $uri) {
1034:            if (strstr($_SERVER['REQUEST_URI'], $uri) !== false) {
1035-                return false;
1036-            }
1037-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1044]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1041-
1042-        foreach ($reject_uri as $expr) {
1043-            $expr = trim($expr);
1044:            if ($expr != '' && preg_match('~' . $expr . '~i', $_SERVER['REQUEST_URI'])) {
1045-                return false;
1046-            }
1047-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1833]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1830-     * @return void
1831-     */
1832-    function widget_latest_control($widget_id, $form_inputs = array()) {
1833:        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
1834-            require_once W3TC_LIB_W3_DIR . '/Request.php';
1835-
1836-            $this->_config->set('widget.latest.items', W3_Request::get_integer('w3tc_widget_latest_items', 3));]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1872]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1869-     * @return void
1870-     */
1871-    function widget_pagespeed_control($widget_id, $form_inputs = array()) {
1872:        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
1873-            require_once W3TC_LIB_W3_DIR . '/Request.php';
1874-
1875-            $this->_config->set('widget.pagespeed.key', W3_Request::get_string('w3tc_widget_pagespeed_key'));]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5396]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[5393-            return $parse_url['host'];
5394-        }
5395-
5396:        return $_SERVER['HTTP_HOST'];
5397-    }
5398-
5399-    /**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5648]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[5645-        $server_info = array(
5646-            'w3tc' => array(
5647-                'version' => W3TC_VERSION,
5648:                'server' => (!empty($_SERVER['SERVER_SOFTWARE']) ? $_SERVER['SERVER_SOFTWARE'] : 'Unknown'),
5649-                'dir' => W3TC_DIR,
5650-                'content_dir' => W3TC_CONTENT_DIR,
5651-                'blogname' => W3TC_BLOGNAME,]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5728]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[5725-        $url = W3_Request::get_string('redirect');
5726-
5727-        if ($url == '') {
5728:            if ($check_referrer && !empty($_SERVER['HTTP_REFERER'])) {
5729:                $url = $_SERVER['HTTP_REFERER'];
5730-            } else {
5731-                $url = 'admin.php';
5732-                $params = array_merge(array(]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[738]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[735-        ));
736-
737-        foreach ($uas as $ua) {
738:            if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], $ua) !== false) {
739-                return false;
740-            }
741-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[758]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[755-        );
756-
757-        foreach ($auto_reject_uri as $uri) {
758:            if (strstr($_SERVER['REQUEST_URI'], $uri) !== false) {
759-                return false;
760-            }
761-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[768]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[765-
766-        foreach ($reject_uri as $expr) {
767-            $expr = trim($expr);
768:            if ($expr != '' && preg_match('~' . $expr . '~i', $_SERVER['REQUEST_URI'])) {
769-                return false;
770-            }
771-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1869]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1866-        ));
1867-
1868-        foreach ($uas as $ua) {
1869:            if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], $ua) !== false) {
1870-                return false;
1871-            }
1872-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1889]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1886-        );
1887-
1888-        foreach ($auto_reject_uri as $uri) {
1889:            if (strstr($_SERVER['REQUEST_URI'], $uri) !== false) {
1890-                return false;
1891-            }
1892-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1899]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1896-
1897-        foreach ($reject_uri as $expr) {
1898-            $expr = trim($expr);
1899:            if ($expr != '' && preg_match('~' . $expr . '~i', $_SERVER['REQUEST_URI'])) {
1900-                return false;
1901-            }
1902-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[43]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[40-            'admin_bar_menu'
41-        ), 150);
42-
43:        if (isset($_REQUEST['w3tc_theme']) && isset($_SERVER['HTTP_USER_AGENT']) &&
44:                $_SERVER['HTTP_USER_AGENT'] == W3TC_POWERED_BY) {
45-            add_filter('template', array(
46-                &$this,
47-                'template_preview']]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[148]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[145-        /**
146-         * Check request and handle w3tc_request_data requests
147-         */
148:        $pos = strpos($_SERVER['REQUEST_URI'], '/w3tc_request_data/');
149-
150-        if ($pos !== false) {
151:            $hash = substr($_SERVER['REQUEST_URI'], $pos + 19, 32);
152-
153-            if (strlen($hash) == 32) {
154-                $request_data = (array) get_option('w3tc_request_data');]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[370]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[367-                /**
368-                 * Replace links for preview mode
369-                 */
370:                if (w3_is_preview_mode() && isset($_SERVER['HTTP_USER_AGENT']) && $_SERVER['HTTP_USER_AGENT'] != W3TC_POWERED_BY) {
371-                    $domain_url_regexp = w3_get_domain_url_regexp();
372-
373-                    $buffer = preg_replace_callback('~(href|src|action)=([\'"])(' . $domain_url_regexp . ')?(/[^\'"]*)~', array(]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[383]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[380-                 * Add footer comment
381-                 */
382-                $date = date_i18n('Y-m-d H:i:s');
383:                $host = (!empty($_SERVER['SERVER_NAME']) ? $_SERVER['SERVER_NAME'] : 'localhost');
384-
385-                if ($this->_config->get_string('common.support') != '' || $this->_config->get_boolean('common.tweeted')) {
386-                    $buffer .= sprintf("\r\n<!-- Served from: %s @ %s by W3 Total Cache -->", w3_escape_comment($host), $date);]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[523]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[520-        /**
521-         * Check User Agent
522-         */
523:        if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], W3TC_POWERED_BY) !== false) {
524-            return false;
525-        }
526-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1054]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1051-        ));
1052-
1053-        foreach ($uas as $ua) {
1054:            if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], $ua) !== false) {
1055-                return false;
1056-            }
1057-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1092]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1089-        );
1090-
1091-        foreach ($auto_reject_uri as $uri) {
1092:            if (strstr($_SERVER['REQUEST_URI'], $uri) !== false) {
1093-                return false;
1094-            }
1095-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1102]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[1099-
1100-        foreach ($reject_uri as $expr) {
1101-            $expr = trim($expr);
1102:            if ($expr != '' && preg_match('~' . $expr . '~i', $_SERVER['REQUEST_URI'])) {
1103-                return false;
1104-            }
1105-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[231]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[228-    function format_url($path) {
229-        $url = $this->_format_url($path);
230-
231:        if ($url && $this->_config['compression'] && isset($_SERVER['HTTP_ACCEPT_ENCODING']) && stristr($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== false && $this->_may_gzip($path)) {
232-            if (($qpos = strpos($url, '?')) !== false) {
233-                $url = substr_replace($url, $this->_gzip_extension, $qpos, 0);
234-            } else {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCacheFlush.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[367]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[364-     * @return string
365-     */
366-    function _get_pagenum_link($url, $pagenum = 1) {
367:        $request_uri = $_SERVER['REQUEST_URI'];
368:        $_SERVER['REQUEST_URI'] = $url;
369-
370-        $link = get_pagenum_link($pagenum);
371-
372:        $_SERVER['REQUEST_URI'] = $request_uri;
373-
374-        return $link;
375-    }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Mobile.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[45]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[42-            foreach ($this->groups as $group => $config) {
43-                if (isset($config['enabled']) && $config['enabled'] && isset($config['agents'])) {
44-                    foreach ((array) $config['agents'] as $agent) {
45:                        if ($agent && isset($_SERVER['HTTP_USER_AGENT']) && preg_match('~' . $agent . '~i', $_SERVER['HTTP_USER_AGENT'])) {
46-                            $mobile_group = $group;
47-
48-                            return $mobile_group;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/CloudFlare.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[116]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[113-     * @return void
114-     */
115-    function fix_remote_addr() {
116:        if (!empty($_SERVER['HTTP_CF_CONNECTING_IP'])) {
117-            foreach ($this->_ip_ranges as $range) {
118:                if ($this->_ip_in_range($_SERVER['REMOTE_ADDR'], $range)) {
119:                    $_SERVER['REMOTE_ADDR'] = $_SERVER['HTTP_CF_CONNECTING_IP'];
120-                    break;
121-                }
122-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minifier.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[200]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[197-                $symlinks = $this->_config->get_array('minify.symlinks');
198-
199-                foreach ($symlinks as $link => $target) {
200:                    $link = str_replace('//', realpath($_SERVER['DOCUMENT_ROOT']), $link);
201-                    $link = strtr($link, '/', DIRECTORY_SEPARATOR);
202-                    $options['symlinks'][$link] = realpath($target);
203-                }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[578]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[575-        /**
576-         * Check User Agent
577-         */
578:        if (isset($_SERVER['HTTP_USER_AGENT']) && stristr($_SERVER['HTTP_USER_AGENT'], W3TC_POWERED_BY) !== false) {
579-            return false;
580-        }
581-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[114]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[111-	/**
112-	 * Checks if a configuration for a specific role instance exists.
113-	 *
114:	 * @param string $roleInstance Role instance name, can be found in $_SERVER['RdRoleId'] when hosted on Windows Azure.
115-	 * @return boolean
116-	 * @throws Microsoft_WindowsAzure_Diagnostics_Exception
117-	 */
118-	public function configurationForRoleInstanceExists($roleInstance = null)
119-	{
120-		if (is_null($roleInstance)) {
121:			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Role instance should be specified. Try reading $_SERVER[\'RdRoleId\'] for this information if the application is hosted on Windows Azure Fabric or Development Fabric.');
122-		}
123-
124-		return $this->_blobStorageClient->blobExists($this->_controlContainer, $roleInstance);]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[135]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[132-	 */
133-	public function configurationForCurrentRoleInstanceExists()
134-	{
135:		if (!isset($_SERVER['RdRoleId'])) {
136-			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Server variable \'RdRoleId\' is unknown. Please verify the application is running in Development Fabric or Windows Azure Fabric.');
137-		}
138-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[150]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[147-	 */
148-	public function getConfigurationForCurrentRoleInstance()
149-	{
150:		if (!isset($_SERVER['RdRoleId'])) {
151-			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Server variable \'RdRoleId\' is unknown. Please verify the application is running in Development Fabric or Windows Azure Fabric.');
152-		}
153-		return $this->getConfigurationForRoleInstance($this->_getCurrentRoleInstanceId());]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[164]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[161-	 */
162-	protected function _getCurrentRoleInstanceId()
163-	{
164:		if (!isset($_SERVER['RdRoleId'])) {
165-			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Server variable \'RdRoleId\' is unknown. Please verify the application is running in Development Fabric or Windows Azure Fabric.');
166-		}
167-
168:		if (strpos($_SERVER['RdRoleId'], 'deployment(') === false) {
169:			return $_SERVER['RdRoleId'];
170-		} else {
171:			$roleIdParts = explode('.', $_SERVER['RdRoleId']);
172:			return $roleIdParts[0] . '/' . $roleIdParts[2] . '/' . $_SERVER['RdRoleId'];
173-		}
174-	}
175-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[184]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[181-	 */
182-	public function setConfigurationForCurrentRoleInstance(Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance $configuration)
183-	{
184:		if (!isset($_SERVER['RdRoleId'])) {
185-			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Server variable \'RdRoleId\' is unknown. Please verify the application is running in Development Fabric or Windows Azure Fabric.');
186-		}
187-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[194]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[191-	/**
192-	 * Get configuration for a specific role instance
193-	 *
194:	 * @param string $roleInstance Role instance name, can be found in $_SERVER['RdRoleId'] when hosted on Windows Azure.
195-	 * @return Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance
196-	 * @throws Microsoft_WindowsAzure_Diagnostics_Exception
197-	 */
198-	public function getConfigurationForRoleInstance($roleInstance = null)
199-	{
200-		if (is_null($roleInstance)) {
201:			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Role instance should be specified. Try reading $_SERVER[\'RdRoleId\'] for this information if the application is hosted on Windows Azure Fabric or Development Fabric.');
202-		}
203-
204-		if ($this->_blobStorageClient->blobExists($this->_controlContainer, $roleInstance)) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[216]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[213-	/**
214-	 * Set configuration for a specific role instance
215-	 *
216:	 * @param string $roleInstance Role instance name, can be found in $_SERVER['RdRoleId'] when hosted on Windows Azure.
217-	 * @param Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance $configuration Configuration to apply
218-	 * @throws Microsoft_WindowsAzure_Diagnostics_Exception
219-	 */
220-	public function setConfigurationForRoleInstance($roleInstance = null, Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance $configuration)
221-	{
222-		if (is_null($roleInstance)) {
223:			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Role instance should be specified. Try reading $_SERVER[\'RdRoleId\'] for this information if the application is hosted on Windows Azure Fabric or Development Fabric.');
224-		}
225-
226-		$this->_blobStorageClient->putBlobData($this->_controlContainer, $roleInstance, $configuration->toXml(), array(), null, array('Content-Type' => 'text/xml'));]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[372]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[369-    }
370-
371-    /**
372:     * On IIS, create $_SERVER['DOCUMENT_ROOT']
373-     *
374:     * @param bool $unsetPathInfo (default false) if true, $_SERVER['PATH_INFO']
375-     * will be unset (it is inconsistent with Apache's setting)
376-     *
377-     * @return null
378-     */
379-    public static function setDocRoot($unsetPathInfo = false)
380-    {
381:        if (isset($_SERVER['SERVER_SOFTWARE'])
382:            && 0 === strpos($_SERVER['SERVER_SOFTWARE'], 'Microsoft-IIS/')
383-        ) {
384:            $_SERVER['PATH_TRANSLATED']= preg_replace('~[/\\\]+~', '/', $_SERVER['PATH_TRANSLATED']);
385-
386:            $_SERVER['DOCUMENT_ROOT'] = rtrim(substr(
387:                $_SERVER['PATH_TRANSLATED']
388-                ,0
389:                ,strlen($_SERVER['PATH_TRANSLATED']) - strlen($_SERVER['SCRIPT_NAME'])
390-            ), '\\');
391-            if ($unsetPathInfo) {
392:                unset($_SERVER['PATH_INFO']);
393-            }
394-            require_once W3TC_LIB_MINIFY_DIR . '/Minify/Logger.php';
395:            Minify_Logger::log("setDocRoot() set DOCUMENT_ROOT to \"{$_SERVER['DOCUMENT_ROOT']}\"");
396-        }
397-    }
398-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[795]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[792-   * @return string|false
793-   */
794-  protected function getUserAgent() {
795:    if(!isset($_SERVER['HTTP_USER_AGENT'])) return false;
796:    return $_SERVER['HTTP_USER_AGENT'];
797-  }
798-
799-  /**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/Encoder.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[193]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[190-    {
191-        // @link http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html
192-        
193:        if (! isset($_SERVER['HTTP_ACCEPT_ENCODING'])
194-            || w3_zlib_output_compression()
195-            || headers_sent()
196-            || self::_isBuggyIe())]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/Encoder.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[201]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[198-            return array('', '');
199-        }
200-        
201:        if (stristr($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') && function_exists('gzencode')) {
202-            return array('gzip', 'gzip');
203-        }
204-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/Encoder.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[285]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[282-     */
283-    protected static function _isBuggyIe()
284-    {
285:        $ua = $_SERVER['HTTP_USER_AGENT'];
286-        // quick escape for non-IEs
287-        if (0 !== strpos($ua, 'Mozilla/4.0 (compatible; MSIE ')
288-            || false !== strpos($ua, 'Opera')) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/ConditionalGet.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[126]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[123-        
124-        // backwards compatibility (can be removed later)
125-        if (isset($spec['setExpires']) && is_numeric($spec['setExpires']) && !isset($spec['maxAge'])) {
126:            $spec['maxAge'] = $spec['setExpires'] - $_SERVER['REQUEST_TIME'];
127-        }
128-        
129-        if (isset($spec['maxAge'])) {
130-            $maxAge = $spec['maxAge'];
131-            
132-            if ($this->_cacheHeaders['expires_enabled'] && $maxAge) {
133:                $this->_headers['Expires'] = self::gmtDate($_SERVER['REQUEST_TIME'] + $maxAge);
134-            }
135-        }
136-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/ConditionalGet.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[352]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[349-    
350-    protected function resourceMatchedEtag()
351-    {
352:        if (!isset($_SERVER['HTTP_IF_NONE_MATCH'])) {
353-            return false;
354-        }
355:        $clientEtagList = get_magic_quotes_gpc() ? stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) : $_SERVER['HTTP_IF_NONE_MATCH'];
356-        $clientEtags = explode(',', $clientEtagList);
357-        
358-        $compareTo = $this->normalizeEtag($this->_etag);]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/HTTP/ConditionalGet.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[380]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[377-    
378-    protected function resourceNotModified()
379-    {
380:        if (!isset($_SERVER['HTTP_IF_MODIFIED_SINCE'])) {
381-            return false;
382-        }
383:        $ifModifiedSince = $_SERVER['HTTP_IF_MODIFIED_SINCE'];
384-        if (false !== ($semicolon = strrpos($ifModifiedSince, ';'))) {
385-            // IE has tacked on extra data to this header, strip it
386-            $ifModifiedSince = substr($ifModifiedSince, 0, $semicolon);]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS/UriRewriter.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[39-            $browsercache_extensions = (isset($options['browserCacheExtensions']) ? $options['browserCacheExtensions'] : array());
40-
41-            if (isset($options['currentDir'])) {
42:                $document_root = (isset($options['docRoot']) ? $options['docRoot'] : $_SERVER['DOCUMENT_ROOT']);
43-                $symlinks = (isset($options['symlinks']) ? $options['symlinks'] : array());
44-                $prependAbsolutePath = (isset($options['prependAbsolutePath']) ? $options['prependAbsolutePath'] : '');
45-                $prependAbsolutePathCallback = (isset($options['prependAbsolutePathCallback']) ? $options['prependAbsolutePathCallback'] : '');]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS/UriRewriter.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[82]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[79-     * @param string $prependAbsolutePathCallback
80-     *
81-     * @param string $docRoot The document root of the web site in which
82:     * the CSS file resides (default = $_SERVER['DOCUMENT_ROOT']).
83-     *
84-     * @param array $symlinks (default = array()) If the CSS file is stored in
85-     * a symlink-ed directory, provide an array of link paths to]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS/UriRewriter.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[101]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[98-     * @return string
99-     */
100-    private static function _rewrite($css, $currentDir, $prependAbsolutePath = null, $prependAbsolutePathCallback = null, $docRoot = null, $symlinks = array(), $browserCacheId = 0, $browserCacheExtensions = array()) {
101:        self::$_docRoot = self::_realpath($docRoot ? $docRoot : $_SERVER['DOCUMENT_ROOT']);
102-        self::$_currentDir = self::_realpath($currentDir);
103-        self::$_prependAbsolutePath = $prependAbsolutePath;
104-        self::$_prependAbsolutePathCallback = $prependAbsolutePathCallback;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS/Compressor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[69]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[66-     * @return string
67-     */
68-    protected function _process($css) {
69:        $this->_replacementHash = 'MINIFYCSS' . md5($_SERVER['REQUEST_TIME']);
70-        $this->_placeholders = array();
71-
72-        $css = preg_replace_callback('~(".*"|\'.*\')~U', array($this, '_removeQuotesCB'), $css);]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/ImportProcessor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[107]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[104-        if ('/' === $url[0]) {
105-            // protocol-relative or root path
106-            $url = ltrim($url, '/');
107:            $file = realpath($_SERVER['DOCUMENT_ROOT']) . DIRECTORY_SEPARATOR
108-                . strtr($url, '/', DIRECTORY_SEPARATOR);
109-        } else {
110-            // relative to current path]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/ImportProcessor.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[143]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[140-                $path = $this->_currentDir 
141-                    . DIRECTORY_SEPARATOR . strtr($url, '/', DIRECTORY_SEPARATOR);
142-                // strip doc root
143:                $path = substr($path, strlen(realpath($_SERVER['DOCUMENT_ROOT'])));
144-                // fix to absolute URL
145-                $url = strtr($path, '/\\', '//');
146-                // remove /./ and /../ where possible]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Build.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[94-                $max = max($max, $source->lastModified);
95-            } elseif (is_string($source)) {
96-                if (0 === strpos($source, '//')) {
97:                    $source = $_SERVER['DOCUMENT_ROOT'] . substr($source, 1);
98-                }
99-                if (is_file($source)) {
100-                    $max = max($max, filemtime($source));]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/APC.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[43]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[40-     * @return bool success
41-     */
42-    public function store($id, $data) {
43:        return apc_store($id, "{$_SERVER['REQUEST_TIME']}|{$data}", $this->_exp);
44-    }
45-
46-    /**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/Memcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[48]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[45-     * @return bool success
46-     */
47-    public function store($id, $data) {
48:        $data = "{$_SERVER['REQUEST_TIME']}|{$data}";
49-
50-        return $this->_mc->set($id, $data, 0, $this->_exp);
51-    }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/XCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[43]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[40-     * @return bool success
41-     */
42-    public function store($id, $data) {
43:        return xcache_set($id, "{$_SERVER['REQUEST_TIME']}|{$data}", $this->_exp);
44-    }
45-
46-    /**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/Wincache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[43]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[40-     * @return bool success
41-     */
42-    public function store($id, $data) {
43:        return wincache_ucache_set($id, "{$_SERVER['REQUEST_TIME']}|{$data}", $this->_exp);
44-    }
45-
46-    /**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/Eaccelerator.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[43]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[40-     * @return bool success
41-     */
42-    public function store($id, $data) {
43:        return eaccelerator_put($id, "{$_SERVER['REQUEST_TIME']}|{$data}", $this->_exp);
44-    }
45-
46-    /**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Source.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[49-     * (unixtime of last update).
50-     * 
51-     * As a shortcut, the controller will replace "//" at the beginning
52:     * of a filepath with $_SERVER['DOCUMENT_ROOT'] . '/'.
53-     *
54-     * @param array $spec options
55-     */]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Source.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[60]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[57-    {
58-        if (isset($spec['filepath'])) {
59-            if (0 === strpos($spec['filepath'], '//')) {
60:                $spec['filepath'] = $_SERVER['DOCUMENT_ROOT'] . substr($spec['filepath'], 1);
61-            }
62-            $segments = explode('.', $spec['filepath']);
63-            $ext = strtolower(array_pop($segments));]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/HTML.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[79]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[76-            $this->_isXhtml = (false !== strpos($this->_html, '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML'));
77-        }
78-
79:        $this->_replacementHash = 'MINIFYHTML' . md5($_SERVER['REQUEST_TIME']);
80-        $this->_placeholders = array();
81-
82-        // replace dynamic tags]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Version1.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[62-        }
63-
64-        // strings for prepending to relative/absolute paths
65:        $prependRelPaths = dirname($_SERVER['SCRIPT_FILENAME'])
66-            . DIRECTORY_SEPARATOR;
67:        $prependAbsPaths = $_SERVER['DOCUMENT_ROOT'];
68-
69-        $sources = array();
70-        $goodFiles = array();]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Version1.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[108]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[105-    private static function _setupDefines()
106-    {
107-        $defaults = array(
108:            'MINIFY_BASE_DIR' => realpath($_SERVER['DOCUMENT_ROOT'])
109-            ,'MINIFY_ENCODING' => 'utf-8'
110-            ,'MINIFY_MAX_FILES' => 16
111-            ,'MINIFY_REWRITE_CSS_URLS' => true]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Groups.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[26- * /serve.php/js and /serve.php/css
27- *
28- * As a shortcut, the controller will replace "//" at the beginning
29: * of a filename with $_SERVER['DOCUMENT_ROOT'] . '/'.
30- *
31- * @package Minify
32- * @author Stephen Clay <steve@mrclay.org>]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Groups.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[53]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[50-        unset($options['groups']);
51-
52-        // mod_fcgid places PATH_INFO in ORIG_PATH_INFO
53:        $pi = isset($_SERVER['ORIG_PATH_INFO'])
54:            ? substr($_SERVER['ORIG_PATH_INFO'], 1)
55:            : (isset($_SERVER['PATH_INFO'])
56:                ? substr($_SERVER['PATH_INFO'], 1)
57-                : false
58-            );
59-        if (false === $pi || ! isset($groups[$pi])) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Groups.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[79]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[76-                continue;
77-            }
78-            if (0 === strpos($file, '//')) {
79:                $file = $_SERVER['DOCUMENT_ROOT'] . substr($file, 1);
80-            }
81-            $realPath = realpath($file);
82-            if (is_file($realPath)) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Files.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[27]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[24- * </code>
25- *
26- * As a shortcut, the controller will replace "//" at the beginning
27: * of a filename with $_SERVER['DOCUMENT_ROOT'] . '/'.
28- *
29- * @package Minify
30- * @author Stephen Clay <steve@mrclay.org>]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Files.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[63]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[60-                continue;
61-            }
62-            if (0 === strpos($file, '//')) {
63:                $file = $_SERVER['DOCUMENT_ROOT'] . substr($file, 1);
64-            }
65-            $realPath = realpath($file);
66-            if (is_file($realPath)) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/MinApp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[60]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[57-                    continue;
58-                }
59-                if (0 === strpos($file, '//')) {
60:                    $file = $_SERVER['DOCUMENT_ROOT'] . substr($file, 1);
61-                }
62-                $realPath = realpath($file);
63-                if (is_file($realPath)) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/MinApp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[110]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[107-            }
108-            $allowDirs = array();
109-            foreach ((array)$cOptions['allowDirs'] as $allowDir) {
110:                $allowDirs[] = realpath(str_replace('//', $_SERVER['DOCUMENT_ROOT'] . '/', $allowDir));
111-            }
112-            foreach ($files as $file) {
113:                $path = $_SERVER['DOCUMENT_ROOT'] . $base . $file;
114-                $file = realpath($path);
115-                if (false === $file) {
116-                    $this->log("Path \"{$path}\" failed realpath()");]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3637]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[3634-		global $debug;
3635-		global $HTTP_SERVER_VARS;
3636-
3637:		if (isset($_SERVER)) {
3638-			$this->debug("_SERVER is defined:");
3639:			$this->appendDebug($this->varDump($_SERVER));
3640-		} elseif (isset($HTTP_SERVER_VARS)) {
3641-			$this->debug("HTTP_SERVER_VARS is defined:");
3642-			$this->appendDebug($this->varDump($HTTP_SERVER_VARS));]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3650]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[3647-		if (isset($debug)) {
3648-			$this->debug("In nusoap_server, set debug_flag=$debug based on global flag");
3649-			$this->debug_flag = $debug;
3650:		} elseif (isset($_SERVER['QUERY_STRING'])) {
3651:			$qs = explode('&', $_SERVER['QUERY_STRING']);
3652-			foreach ($qs as $v) {
3653-				if (substr($v, 0, 6) == 'debug=') {
3654-					$this->debug("In nusoap_server, set debug_flag=" . substr($v, 6) . " based on query string #1");]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3697]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[3694-	function service($data){
3695-		global $HTTP_SERVER_VARS;
3696-
3697:		if (isset($_SERVER['REQUEST_METHOD'])) {
3698:			$rm = $_SERVER['REQUEST_METHOD'];
3699-		} elseif (isset($HTTP_SERVER_VARS['REQUEST_METHOD'])) {
3700-			$rm = $HTTP_SERVER_VARS['REQUEST_METHOD'];
3701-		} else {
3702-			$rm = '';
3703-		}
3704-
3705:		if (isset($_SERVER['QUERY_STRING'])) {
3706:			$qs = $_SERVER['QUERY_STRING'];
3707-		} elseif (isset($HTTP_SERVER_VARS['QUERY_STRING'])) {
3708-			$qs = $HTTP_SERVER_VARS['QUERY_STRING'];
3709-		} else {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3808]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[3805-				// should be US-ASCII for HTTP 1.0 or ISO-8859-1 for HTTP 1.1
3806-				$this->xml_encoding = 'ISO-8859-1';
3807-			}
3808:		} elseif(isset($_SERVER) && is_array($_SERVER)){
3809-			$this->debug("In parse_http_headers, use _SERVER");
3810:			foreach ($_SERVER as $k => $v) {
3811-				if (substr($k, 0, 5) == 'HTTP_') {
3812-					$k = str_replace(' ', '-', strtolower(str_replace('_', ' ', substr($k, 5))));
3813-				} else {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4436]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[4433-		if(false == $namespace) {
4434-		}
4435-		if(false == $soapaction) {
4436:			if (isset($_SERVER)) {
4437:				$SERVER_NAME = $_SERVER['SERVER_NAME'];
4438:				$SCRIPT_NAME = isset($_SERVER['PHP_SELF']) ? $_SERVER['PHP_SELF'] : $_SERVER['SCRIPT_NAME'];
4439:				$HTTPS = isset($_SERVER['HTTPS']) ? $_SERVER['HTTPS'] : (isset($HTTP_SERVER_VARS['HTTPS']) ? $HTTP_SERVER_VARS['HTTPS'] : 'off');
4440-			} elseif (isset($HTTP_SERVER_VARS)) {
4441-				$SERVER_NAME = $HTTP_SERVER_VARS['SERVER_NAME'];
4442-				$SCRIPT_NAME = isset($HTTP_SERVER_VARS['PHP_SELF']) ? $HTTP_SERVER_VARS['PHP_SELF'] : $HTTP_SERVER_VARS['SCRIPT_NAME'];]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4510]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[4507-    {
4508-    	global $HTTP_SERVER_VARS;
4509-
4510:		if (isset($_SERVER)) {
4511:			$SERVER_NAME = $_SERVER['SERVER_NAME'];
4512:			$SERVER_PORT = $_SERVER['SERVER_PORT'];
4513:			$SCRIPT_NAME = isset($_SERVER['PHP_SELF']) ? $_SERVER['PHP_SELF'] : $_SERVER['SCRIPT_NAME'];
4514:			$HTTPS = isset($_SERVER['HTTPS']) ? $_SERVER['HTTPS'] : (isset($HTTP_SERVER_VARS['HTTPS']) ? $HTTP_SERVER_VARS['HTTPS'] : 'off');
4515-		} elseif (isset($HTTP_SERVER_VARS)) {
4516-			$SERVER_NAME = $HTTP_SERVER_VARS['SERVER_NAME'];
4517-			$SERVER_PORT = $HTTP_SERVER_VARS['SERVER_PORT'];]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5341]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[5338-    function webDescription(){
5339-    	global $HTTP_SERVER_VARS;
5340-
5341:		if (isset($_SERVER)) {
5342:			$PHP_SELF = $_SERVER['PHP_SELF'];
5343-		} elseif (isset($HTTP_SERVER_VARS)) {
5344-			$PHP_SELF = $HTTP_SERVER_VARS['PHP_SELF'];
5345-		} else {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[760]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[757-    function webDescription(){
758-    	global $HTTP_SERVER_VARS;
759-
760:		if (isset($_SERVER)) {
761:			$PHP_SELF = $_SERVER['PHP_SELF'];
762-		} elseif (isset($HTTP_SERVER_VARS)) {
763-			$PHP_SELF = $HTTP_SERVER_VARS['PHP_SELF'];
764-		} else {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[196]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[193- */
194-function w3_is_https() {
195-    switch (true) {
196:        case (isset($_SERVER['HTTPS']) && w3_to_boolean($_SERVER['HTTPS'])):
197:        case (isset($_SERVER['SERVER_PORT']) && (int) $_SERVER['SERVER_PORT'] == 443):
198-            return true;
199-    }
200-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[229]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[226- * @return boolean
227- */
228-function w3_is_preview_mode() {
229:    return (w3_is_preview_config() && (defined('WP_ADMIN') || isset($_REQUEST['w3tc_preview']) || (isset($_SERVER['HTTP_REFERER']) && strstr($_SERVER['HTTP_REFERER'], 'w3tc_preview') !== false)));
230-}
231-
232-/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[238]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[235- * @return boolean
236- */
237-function w3_is_apache() {
238:    return (isset($_SERVER['SERVER_SOFTWARE']) && stristr($_SERVER['SERVER_SOFTWARE'], 'Apache') !== false);
239-}
240-
241-/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[247]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[244- * @return bool
245- */
246-function w3_is_litespeed() {
247:    return (isset($_SERVER['SERVER_SOFTWARE']) && stristr($_SERVER['SERVER_SOFTWARE'], 'LiteSpeed') !== false);
248-}
249-
250-/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[256]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[253- * @return boolean
254- */
255-function w3_is_nginx() {
256:    return (isset($_SERVER['SERVER_SOFTWARE']) && stristr($_SERVER['SERVER_SOFTWARE'], 'nginx') !== false);
257-}
258-
259-/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[378]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[375-            if (w3_is_subdomain_install()) {
376-                $blogname = $domain;
377-            } else {
378:                $uri = $_SERVER['REQUEST_URI'];
379-                $base_path = w3_get_base_path();
380-
381-                if ($base_path != '' && strpos($uri, $base_path) === 0) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[586]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[583-    static $document_root = null;
584-
585-    if ($document_root === null) {
586:        if (!empty($_SERVER['SCRIPT_FILENAME'])) {
587:            $document_root = substr(w3_path($_SERVER['SCRIPT_FILENAME']), 0, -strlen(w3_path($_SERVER['PHP_SELF'])));
588:        } elseif (!empty($_SERVER['PATH_TRANSLATED'])) {
589:            $document_root = substr(w3_path($_SERVER['PATH_TRANSLATED']), 0, -strlen(w3_path($_SERVER['PHP_SELF'])));
590:        } elseif (!empty($_SERVER['DOCUMENT_ROOT'])) {
591:            $document_root = w3_path($_SERVER['DOCUMENT_ROOT']);
592-        } else {
593-            $document_root = w3_get_site_root();
594-        }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[764]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[761-    static $host = null;
762-
763-    if ($host === null) {
764:        $host = (!empty($_SERVER['HTTP_X_FORWARDED_HOST']) ? $_SERVER['HTTP_X_FORWARDED_HOST'] : $_SERVER['HTTP_HOST']);
765-    }
766-
767-    return $host;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[43]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[40-
41-        <li>
42-            Web Server:
43:            <?php if (stristr($_SERVER['SERVER_SOFTWARE'], 'apache') !== false): ?>
44-            <code>Apache</code>
45:            <?php elseif (stristr($_SERVER['SERVER_SOFTWARE'], 'LiteSpeed') !== false): ?>
46-            <code>Lite Speed</code>
47:            <?php elseif (stristr($_SERVER['SERVER_SOFTWARE'], 'nginx') !== false): ?>
48-            <code>nginx</code>
49:            <?php elseif (stristr($_SERVER['SERVER_SOFTWARE'], 'lighttpd') !== false): ?>
50-            <code>lighttpd</code>
51:            <?php elseif (stristr($_SERVER['SERVER_SOFTWARE'], 'iis') !== false): ?>
52-            <code>Microsoft IIS</code>
53-            <?php else: ?>
54-            <code>Not detected</code>]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/email/support_request.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[$_SERVER]]></match>
		<name><![CDATA[$_SERVER]]></name>
		<snippet><![CDATA[35-        <hr />
36-
37-        <font size="-1" color="#ccc">
38:            E-mail sent from IP: <?php echo htmlspecialchars($_SERVER['REMOTE_ADDR']); ?><br />
39:            User Agent: <?php echo htmlspecialchars($_SERVER['HTTP_USER_AGENT']); ?>
40-        </font>
41-    </body>
42-</html>]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[718]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[716-     */
717-    function _check_cookies() {
718:        foreach (array_keys($_COOKIE) as $cookie_name) {
719-            if ($cookie_name == 'wordpress_test_cookie') {
720-                continue;
721-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[728]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[725-        }
726-
727-        foreach ($this->_config->get_array('pgcache.reject.cookie') as $reject_cookie) {
728:            foreach (array_keys($_COOKIE) as $cookie_name) {
729-                if (strstr($cookie_name, $reject_cookie) !== false) {
730-                    return false;
731-                }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[744]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[741-     * @return boolean
742-     */
743-    function _check_logged_in() {
744:        foreach (array_keys($_COOKIE) as $cookie_name) {
745-            if ($cookie_name == 'wordpress_test_cookie') {
746-                continue;
747-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[635]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[632-     * @return boolean
633-     */
634-    function _check_cookies() {
635:        foreach (array_keys($_COOKIE) as $cookie_name) {
636-            if ($cookie_name == 'wordpress_test_cookie') {
637-                continue;
638-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[645]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[642-        }
643-
644-        foreach ($this->_config->get_array('dbcache.reject.cookie') as $reject_cookie) {
645:            foreach (array_keys($_COOKIE) as $cookie_name) {
646-                if (strstr($cookie_name, $reject_cookie) !== false) {
647-                    return false;
648-                }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[661]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[658-     * @return boolean
659-     */
660-    function _check_logged_in() {
661:        foreach (array_keys($_COOKIE) as $cookie_name) {
662-            if ($cookie_name == 'wordpress_test_cookie') {
663-                continue;
664-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Referrer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[39-    function get_http_referrer() {
40-        $http_referrer = '';
41-
42:        if (isset($_COOKIE[W3TC_REFERRER_COOKIE_NAME])) {
43:            $http_referrer = $_COOKIE[W3TC_REFERRER_COOKIE_NAME];
44-        } elseif (isset($_SERVER['HTTP_REFERER'])) {
45-            $http_referrer = $_SERVER['HTTP_REFERER'];
46-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1010]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[1007-     * @return boolean
1008-     */
1009-    function check_logged_in() {
1010:        foreach (array_keys($_COOKIE) as $cookie_name) {
1011-            if ($cookie_name == 'wordpress_test_cookie') {
1012-                continue;
1013-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1068]]></line_number>
		<match><![CDATA[$_COOKIE]]></match>
		<name><![CDATA[$_COOKIE]]></name>
		<snippet><![CDATA[1065-     * @return boolean
1066-     */
1067-    function check_logged_in() {
1068:        foreach (array_keys($_COOKIE) as $cookie_name) {
1069-            if ($cookie_name == 'wordpress_test_cookie') {
1070-                continue;
1071-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2021]]></line_number>
		<match><![CDATA[$_FILES]]></match>
		<name><![CDATA[$_FILES]]></name>
		<snippet><![CDATA[2019-        @$config = & new W3_Config();
2020-
2021:        if (!isset($_FILES['config_file']['error']) || $_FILES['config_file']['error'] == UPLOAD_ERR_NO_FILE) {
2022-            $error = 'config_import_no_file';
2023:        } elseif ($_FILES['config_file']['error'] != UPLOAD_ERR_OK) {
2024-            $error = 'config_import_upload';
2025-        } else {
2026-            ob_start();
2027:            $imported = $config->read($_FILES['config_file']['tmp_name']);
2028-            ob_end_clean();
2029-
2030-            if (!$imported) {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2453]]></line_number>
		<match><![CDATA[$_FILES]]></match>
		<name><![CDATA[$_FILES]]></name>
		<snippet><![CDATA[2450-        /**
2451-         * Attach other files
2452-         */
2453:        if (!empty($_FILES['files'])) {
2454:            $files = (array) $_FILES['files'];
2455-            for ($i = 0, $l = count($files); $i < $l; $i++) {
2456-                if (isset($files['tmp_name'][$i]) && isset($files['name'][$i]) && isset($files['error'][$i]) && $files['error'][$i] == UPLOAD_ERR_OK) {
2457-                    $path = W3TC_TMP_DIR . '/' . $files['name'][$i];]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[36-        require_once W3TC_LIB_W3_DIR . '/Db.php';
37-
38:        @$GLOBALS['wpdb'] = & W3_Db::instance();
39-    }
40-}]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/object-cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[27-     * @return void
28-     */
29-    function wp_cache_init() {
30:        $GLOBALS['wp_object_cache'] = & w3_instance('W3_ObjectCache');
31-    }
32-
33-    /**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[35-/**
36- * All whitespace allowed in CSS
37- *
38: * @global array $GLOBALS['csstidy']['whitespace']
39- * @version 1.0
40- */
41:$GLOBALS['csstidy']['whitespace'] = array(' ',"\n","\t","\r","\x0B");
42-
43-/**
44- * All CSS tokens used by csstidy
45- *
46: * @global string $GLOBALS['csstidy']['tokens']
47- * @version 1.0
48- */
49:$GLOBALS['csstidy']['tokens'] = '/@}{;:=\'"(,\\!$%&)*+.<>?[]^`|~';
50-
51-/**
52- * All CSS units (CSS 3 units included)
53- *
54- * @see compress_numbers()
55: * @global array $GLOBALS['csstidy']['units']
56- * @version 1.0
57- */
58:$GLOBALS['csstidy']['units'] = array('in','cm','mm','pt','pc','px','rem','em','%','ex','gd','vw','vh','vm','deg','grad','rad','ms','s','khz','hz');
59-
60-/**
61- * Available at-rules
62- *
63: * @global array $GLOBALS['csstidy']['at_rules']
64- * @version 1.0
65- */
66:$GLOBALS['csstidy']['at_rules'] = array('page' => 'is','font-face' => 'is','charset' => 'iv', 'import' => 'iv','namespace' => 'iv','media' => 'at');
67-
68- /**
69- * Properties that need a value with unit
70- *
71- * @todo CSS3 properties
72- * @see compress_numbers();
73: * @global array $GLOBALS['csstidy']['unit_values']
74- * @version 1.2
75- */
76:$GLOBALS['csstidy']['unit_values'] = array ('background', 'background-position', 'border', 'border-top', 'border-right', 'border-bottom', 'border-left', 'border-width',
77-                                            'border-top-width', 'border-right-width', 'border-left-width', 'border-bottom-width', 'bottom', 'border-spacing', 'font-size',
78-                                            'height', 'left', 'margin', 'margin-top', 'margin-right', 'margin-bottom', 'margin-left', 'max-height', 'max-width',
79-                                            'min-height', 'min-width', 'outline-width', 'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left',]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[87]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[84- *
85- * @todo CSS3 properties
86- * @see compress_numbers();
87: * @global array $GLOBALS['csstidy']['color_values']
88- * @version 1.0
89- */
90:$GLOBALS['csstidy']['color_values'] = array();
91:$GLOBALS['csstidy']['color_values'][] = 'background-color';
92:$GLOBALS['csstidy']['color_values'][] = 'border-color';
93:$GLOBALS['csstidy']['color_values'][] = 'border-top-color';
94:$GLOBALS['csstidy']['color_values'][] = 'border-right-color';
95:$GLOBALS['csstidy']['color_values'][] = 'border-bottom-color';
96:$GLOBALS['csstidy']['color_values'][] = 'border-left-color';
97:$GLOBALS['csstidy']['color_values'][] = 'color';
98:$GLOBALS['csstidy']['color_values'][] = 'outline-color';
99-
100-
101-/**
102- * Default values for the background properties
103- *
104- * @todo Possibly property names will change during CSS3 development
105: * @global array $GLOBALS['csstidy']['background_prop_default']
106- * @see dissolve_short_bg()
107- * @see merge_bg()
108- * @version 1.0
109- */
110:$GLOBALS['csstidy']['background_prop_default'] = array();
111:$GLOBALS['csstidy']['background_prop_default']['background-image'] = 'none';
112:$GLOBALS['csstidy']['background_prop_default']['background-size'] = 'auto';
113:$GLOBALS['csstidy']['background_prop_default']['background-repeat'] = 'repeat';
114:$GLOBALS['csstidy']['background_prop_default']['background-position'] = '0 0';
115:$GLOBALS['csstidy']['background_prop_default']['background-attachment'] = 'scroll';
116:$GLOBALS['csstidy']['background_prop_default']['background-clip'] = 'border';
117:$GLOBALS['csstidy']['background_prop_default']['background-origin'] = 'padding';
118:$GLOBALS['csstidy']['background_prop_default']['background-color'] = 'transparent';
119-
120-/**
121- * A list of non-W3C color names which get replaced by their hex-codes
122- *
123: * @global array $GLOBALS['csstidy']['replace_colors']
124- * @see cut_color()
125- * @version 1.0
126- */
127:$GLOBALS['csstidy']['replace_colors'] = array();
128:$GLOBALS['csstidy']['replace_colors']['aliceblue'] = '#F0F8FF';
129:$GLOBALS['csstidy']['replace_colors']['antiquewhite'] = '#FAEBD7';
130:$GLOBALS['csstidy']['replace_colors']['aquamarine'] = '#7FFFD4';
131:$GLOBALS['csstidy']['replace_colors']['azure'] = '#F0FFFF';
132:$GLOBALS['csstidy']['replace_colors']['beige'] = '#F5F5DC';
133:$GLOBALS['csstidy']['replace_colors']['bisque'] = '#FFE4C4';
134:$GLOBALS['csstidy']['replace_colors']['blanchedalmond'] = '#FFEBCD';
135:$GLOBALS['csstidy']['replace_colors']['blueviolet'] = '#8A2BE2';
136:$GLOBALS['csstidy']['replace_colors']['brown'] = '#A52A2A';
137:$GLOBALS['csstidy']['replace_colors']['burlywood'] = '#DEB887';
138:$GLOBALS['csstidy']['replace_colors']['cadetblue'] = '#5F9EA0';
139:$GLOBALS['csstidy']['replace_colors']['chartreuse'] = '#7FFF00';
140:$GLOBALS['csstidy']['replace_colors']['chocolate'] = '#D2691E';
141:$GLOBALS['csstidy']['replace_colors']['coral'] = '#FF7F50';
142:$GLOBALS['csstidy']['replace_colors']['cornflowerblue'] = '#6495ED';
143:$GLOBALS['csstidy']['replace_colors']['cornsilk'] = '#FFF8DC';
144:$GLOBALS['csstidy']['replace_colors']['crimson'] = '#DC143C';
145:$GLOBALS['csstidy']['replace_colors']['cyan'] = '#00FFFF';
146:$GLOBALS['csstidy']['replace_colors']['darkblue'] = '#00008B';
147:$GLOBALS['csstidy']['replace_colors']['darkcyan'] = '#008B8B';
148:$GLOBALS['csstidy']['replace_colors']['darkgoldenrod'] = '#B8860B';
149:$GLOBALS['csstidy']['replace_colors']['darkgray'] = '#A9A9A9';
150:$GLOBALS['csstidy']['replace_colors']['darkgreen'] = '#006400';
151:$GLOBALS['csstidy']['replace_colors']['darkkhaki'] = '#BDB76B';
152:$GLOBALS['csstidy']['replace_colors']['darkmagenta'] = '#8B008B';
153:$GLOBALS['csstidy']['replace_colors']['darkolivegreen'] = '#556B2F';
154:$GLOBALS['csstidy']['replace_colors']['darkorange'] = '#FF8C00';
155:$GLOBALS['csstidy']['replace_colors']['darkorchid'] = '#9932CC';
156:$GLOBALS['csstidy']['replace_colors']['darkred'] = '#8B0000';
157:$GLOBALS['csstidy']['replace_colors']['darksalmon'] = '#E9967A';
158:$GLOBALS['csstidy']['replace_colors']['darkseagreen'] = '#8FBC8F';
159:$GLOBALS['csstidy']['replace_colors']['darkslateblue'] = '#483D8B';
160:$GLOBALS['csstidy']['replace_colors']['darkslategray'] = '#2F4F4F';
161:$GLOBALS['csstidy']['replace_colors']['darkturquoise'] = '#00CED1';
162:$GLOBALS['csstidy']['replace_colors']['darkviolet'] = '#9400D3';
163:$GLOBALS['csstidy']['replace_colors']['deeppink'] = '#FF1493';
164:$GLOBALS['csstidy']['replace_colors']['deepskyblue'] = '#00BFFF';
165:$GLOBALS['csstidy']['replace_colors']['dimgray'] = '#696969';
166:$GLOBALS['csstidy']['replace_colors']['dodgerblue'] = '#1E90FF';
167:$GLOBALS['csstidy']['replace_colors']['feldspar'] = '#D19275';
168:$GLOBALS['csstidy']['replace_colors']['firebrick'] = '#B22222';
169:$GLOBALS['csstidy']['replace_colors']['floralwhite'] = '#FFFAF0';
170:$GLOBALS['csstidy']['replace_colors']['forestgreen'] = '#228B22';
171:$GLOBALS['csstidy']['replace_colors']['gainsboro'] = '#DCDCDC';
172:$GLOBALS['csstidy']['replace_colors']['ghostwhite'] = '#F8F8FF';
173:$GLOBALS['csstidy']['replace_colors']['gold'] = '#FFD700';
174:$GLOBALS['csstidy']['replace_colors']['goldenrod'] = '#DAA520';
175:$GLOBALS['csstidy']['replace_colors']['greenyellow'] = '#ADFF2F';
176:$GLOBALS['csstidy']['replace_colors']['honeydew'] = '#F0FFF0';
177:$GLOBALS['csstidy']['replace_colors']['hotpink'] = '#FF69B4';
178:$GLOBALS['csstidy']['replace_colors']['indianred'] = '#CD5C5C';
179:$GLOBALS['csstidy']['replace_colors']['indigo'] = '#4B0082';
180:$GLOBALS['csstidy']['replace_colors']['ivory'] = '#FFFFF0';
181:$GLOBALS['csstidy']['replace_colors']['khaki'] = '#F0E68C';
182:$GLOBALS['csstidy']['replace_colors']['lavender'] = '#E6E6FA';
183:$GLOBALS['csstidy']['replace_colors']['lavenderblush'] = '#FFF0F5';
184:$GLOBALS['csstidy']['replace_colors']['lawngreen'] = '#7CFC00';
185:$GLOBALS['csstidy']['replace_colors']['lemonchiffon'] = '#FFFACD';
186:$GLOBALS['csstidy']['replace_colors']['lightblue'] = '#ADD8E6';
187:$GLOBALS['csstidy']['replace_colors']['lightcoral'] = '#F08080';
188:$GLOBALS['csstidy']['replace_colors']['lightcyan'] = '#E0FFFF';
189:$GLOBALS['csstidy']['replace_colors']['lightgoldenrodyellow'] = '#FAFAD2';
190:$GLOBALS['csstidy']['replace_colors']['lightgrey'] = '#D3D3D3';
191:$GLOBALS['csstidy']['replace_colors']['lightgreen'] = '#90EE90';
192:$GLOBALS['csstidy']['replace_colors']['lightpink'] = '#FFB6C1';
193:$GLOBALS['csstidy']['replace_colors']['lightsalmon'] = '#FFA07A';
194:$GLOBALS['csstidy']['replace_colors']['lightseagreen'] = '#20B2AA';
195:$GLOBALS['csstidy']['replace_colors']['lightskyblue'] = '#87CEFA';
196:$GLOBALS['csstidy']['replace_colors']['lightslateblue'] = '#8470FF';
197:$GLOBALS['csstidy']['replace_colors']['lightslategray'] = '#778899';
198:$GLOBALS['csstidy']['replace_colors']['lightsteelblue'] = '#B0C4DE';
199:$GLOBALS['csstidy']['replace_colors']['lightyellow'] = '#FFFFE0';
200:$GLOBALS['csstidy']['replace_colors']['limegreen'] = '#32CD32';
201:$GLOBALS['csstidy']['replace_colors']['linen'] = '#FAF0E6';
202:$GLOBALS['csstidy']['replace_colors']['magenta'] = '#FF00FF';
203:$GLOBALS['csstidy']['replace_colors']['mediumaquamarine'] = '#66CDAA';
204:$GLOBALS['csstidy']['replace_colors']['mediumblue'] = '#0000CD';
205:$GLOBALS['csstidy']['replace_colors']['mediumorchid'] = '#BA55D3';
206:$GLOBALS['csstidy']['replace_colors']['mediumpurple'] = '#9370D8';
207:$GLOBALS['csstidy']['replace_colors']['mediumseagreen'] = '#3CB371';
208:$GLOBALS['csstidy']['replace_colors']['mediumslateblue'] = '#7B68EE';
209:$GLOBALS['csstidy']['replace_colors']['mediumspringgreen'] = '#00FA9A';
210:$GLOBALS['csstidy']['replace_colors']['mediumturquoise'] = '#48D1CC';
211:$GLOBALS['csstidy']['replace_colors']['mediumvioletred'] = '#C71585';
212:$GLOBALS['csstidy']['replace_colors']['midnightblue'] = '#191970';
213:$GLOBALS['csstidy']['replace_colors']['mintcream'] = '#F5FFFA';
214:$GLOBALS['csstidy']['replace_colors']['mistyrose'] = '#FFE4E1';
215:$GLOBALS['csstidy']['replace_colors']['moccasin'] = '#FFE4B5';
216:$GLOBALS['csstidy']['replace_colors']['navajowhite'] = '#FFDEAD';
217:$GLOBALS['csstidy']['replace_colors']['oldlace'] = '#FDF5E6';
218:$GLOBALS['csstidy']['replace_colors']['olivedrab'] = '#6B8E23';
219:$GLOBALS['csstidy']['replace_colors']['orangered'] = '#FF4500';
220:$GLOBALS['csstidy']['replace_colors']['orchid'] = '#DA70D6';
221:$GLOBALS['csstidy']['replace_colors']['palegoldenrod'] = '#EEE8AA';
222:$GLOBALS['csstidy']['replace_colors']['palegreen'] = '#98FB98';
223:$GLOBALS['csstidy']['replace_colors']['paleturquoise'] = '#AFEEEE';
224:$GLOBALS['csstidy']['replace_colors']['palevioletred'] = '#D87093';
225:$GLOBALS['csstidy']['replace_colors']['papayawhip'] = '#FFEFD5';
226:$GLOBALS['csstidy']['replace_colors']['peachpuff'] = '#FFDAB9';
227:$GLOBALS['csstidy']['replace_colors']['peru'] = '#CD853F';
228:$GLOBALS['csstidy']['replace_colors']['pink'] = '#FFC0CB';
229:$GLOBALS['csstidy']['replace_colors']['plum'] = '#DDA0DD';
230:$GLOBALS['csstidy']['replace_colors']['powderblue'] = '#B0E0E6';
231:$GLOBALS['csstidy']['replace_colors']['rosybrown'] = '#BC8F8F';
232:$GLOBALS['csstidy']['replace_colors']['royalblue'] = '#4169E1';
233:$GLOBALS['csstidy']['replace_colors']['saddlebrown'] = '#8B4513';
234:$GLOBALS['csstidy']['replace_colors']['salmon'] = '#FA8072';
235:$GLOBALS['csstidy']['replace_colors']['sandybrown'] = '#F4A460';
236:$GLOBALS['csstidy']['replace_colors']['seagreen'] = '#2E8B57';
237:$GLOBALS['csstidy']['replace_colors']['seashell'] = '#FFF5EE';
238:$GLOBALS['csstidy']['replace_colors']['sienna'] = '#A0522D';
239:$GLOBALS['csstidy']['replace_colors']['skyblue'] = '#87CEEB';
240:$GLOBALS['csstidy']['replace_colors']['slateblue'] = '#6A5ACD';
241:$GLOBALS['csstidy']['replace_colors']['slategray'] = '#708090';
242:$GLOBALS['csstidy']['replace_colors']['snow'] = '#FFFAFA';
243:$GLOBALS['csstidy']['replace_colors']['springgreen'] = '#00FF7F';
244:$GLOBALS['csstidy']['replace_colors']['steelblue'] = '#4682B4';
245:$GLOBALS['csstidy']['replace_colors']['tan'] = '#D2B48C';
246:$GLOBALS['csstidy']['replace_colors']['thistle'] = '#D8BFD8';
247:$GLOBALS['csstidy']['replace_colors']['tomato'] = '#FF6347';
248:$GLOBALS['csstidy']['replace_colors']['turquoise'] = '#40E0D0';
249:$GLOBALS['csstidy']['replace_colors']['violet'] = '#EE82EE';
250:$GLOBALS['csstidy']['replace_colors']['violetred'] = '#D02090';
251:$GLOBALS['csstidy']['replace_colors']['wheat'] = '#F5DEB3';
252:$GLOBALS['csstidy']['replace_colors']['whitesmoke'] = '#F5F5F5';
253:$GLOBALS['csstidy']['replace_colors']['yellowgreen'] = '#9ACD32';
254-
255-
256-/**
257- * A list of all shorthand properties that are devided into four properties and/or have four subvalues
258- *
259: * @global array $GLOBALS['csstidy']['shorthands']
260- * @todo Are there new ones in CSS3?
261- * @see dissolve_4value_shorthands()
262- * @see merge_4value_shorthands()
263- * @version 1.0
264- */
265:$GLOBALS['csstidy']['shorthands'] = array();
266:$GLOBALS['csstidy']['shorthands']['border-color'] = array('border-top-color','border-right-color','border-bottom-color','border-left-color');
267:$GLOBALS['csstidy']['shorthands']['border-style'] = array('border-top-style','border-right-style','border-bottom-style','border-left-style');
268:$GLOBALS['csstidy']['shorthands']['border-width'] = array('border-top-width','border-right-width','border-bottom-width','border-left-width');
269:$GLOBALS['csstidy']['shorthands']['margin'] = array('margin-top','margin-right','margin-bottom','margin-left');
270:$GLOBALS['csstidy']['shorthands']['padding'] = array('padding-top','padding-right','padding-bottom','padding-left');
271:$GLOBALS['csstidy']['shorthands']['-moz-border-radius'] = 0;
272-
273-/**
274- * All CSS Properties. Needed for csstidy::property_is_next()
275- *
276: * @global array $GLOBALS['csstidy']['all_properties']
277- * @todo Add CSS3 properties
278- * @version 1.0
279- * @see csstidy::property_is_next()
280- */
281:$GLOBALS['csstidy']['all_properties'] = array();
282:$GLOBALS['csstidy']['all_properties']['background'] = 'CSS1.0,CSS2.0,CSS2.1';
283:$GLOBALS['csstidy']['all_properties']['background-color'] = 'CSS1.0,CSS2.0,CSS2.1';
284:$GLOBALS['csstidy']['all_properties']['background-image'] = 'CSS1.0,CSS2.0,CSS2.1';
285:$GLOBALS['csstidy']['all_properties']['background-repeat'] = 'CSS1.0,CSS2.0,CSS2.1';
286:$GLOBALS['csstidy']['all_properties']['background-attachment'] = 'CSS1.0,CSS2.0,CSS2.1';
287:$GLOBALS['csstidy']['all_properties']['background-position'] = 'CSS1.0,CSS2.0,CSS2.1';
288:$GLOBALS['csstidy']['all_properties']['border'] = 'CSS1.0,CSS2.0,CSS2.1';
289:$GLOBALS['csstidy']['all_properties']['border-top'] = 'CSS1.0,CSS2.0,CSS2.1';
290:$GLOBALS['csstidy']['all_properties']['border-right'] = 'CSS1.0,CSS2.0,CSS2.1';
291:$GLOBALS['csstidy']['all_properties']['border-bottom'] = 'CSS1.0,CSS2.0,CSS2.1';
292:$GLOBALS['csstidy']['all_properties']['border-left'] = 'CSS1.0,CSS2.0,CSS2.1';
293:$GLOBALS['csstidy']['all_properties']['border-color'] = 'CSS1.0,CSS2.0,CSS2.1';
294:$GLOBALS['csstidy']['all_properties']['border-top-color'] = 'CSS2.0,CSS2.1';
295:$GLOBALS['csstidy']['all_properties']['border-bottom-color'] = 'CSS2.0,CSS2.1';
296:$GLOBALS['csstidy']['all_properties']['border-left-color'] = 'CSS2.0,CSS2.1';
297:$GLOBALS['csstidy']['all_properties']['border-right-color'] = 'CSS2.0,CSS2.1';
298:$GLOBALS['csstidy']['all_properties']['border-style'] = 'CSS1.0,CSS2.0,CSS2.1';
299:$GLOBALS['csstidy']['all_properties']['border-top-style'] = 'CSS2.0,CSS2.1';
300:$GLOBALS['csstidy']['all_properties']['border-right-style'] = 'CSS2.0,CSS2.1';
301:$GLOBALS['csstidy']['all_properties']['border-left-style'] = 'CSS2.0,CSS2.1';
302:$GLOBALS['csstidy']['all_properties']['border-bottom-style'] = 'CSS2.0,CSS2.1';
303:$GLOBALS['csstidy']['all_properties']['border-width'] = 'CSS1.0,CSS2.0,CSS2.1';
304:$GLOBALS['csstidy']['all_properties']['border-top-width'] = 'CSS1.0,CSS2.0,CSS2.1';
305:$GLOBALS['csstidy']['all_properties']['border-right-width'] = 'CSS1.0,CSS2.0,CSS2.1';
306:$GLOBALS['csstidy']['all_properties']['border-left-width'] = 'CSS1.0,CSS2.0,CSS2.1';
307:$GLOBALS['csstidy']['all_properties']['border-bottom-width'] = 'CSS1.0,CSS2.0,CSS2.1';
308:$GLOBALS['csstidy']['all_properties']['border-collapse'] = 'CSS2.0,CSS2.1';
309:$GLOBALS['csstidy']['all_properties']['border-spacing'] = 'CSS2.0,CSS2.1';
310:$GLOBALS['csstidy']['all_properties']['bottom'] = 'CSS2.0,CSS2.1';
311:$GLOBALS['csstidy']['all_properties']['caption-side'] = 'CSS2.0,CSS2.1';
312:$GLOBALS['csstidy']['all_properties']['content'] = 'CSS2.0,CSS2.1';
313:$GLOBALS['csstidy']['all_properties']['clear'] = 'CSS1.0,CSS2.0,CSS2.1';
314:$GLOBALS['csstidy']['all_properties']['clip'] = 'CSS1.0,CSS2.0,CSS2.1';
315:$GLOBALS['csstidy']['all_properties']['color'] = 'CSS1.0,CSS2.0,CSS2.1';
316:$GLOBALS['csstidy']['all_properties']['counter-reset'] = 'CSS2.0,CSS2.1';
317:$GLOBALS['csstidy']['all_properties']['counter-increment'] = 'CSS2.0,CSS2.1';
318:$GLOBALS['csstidy']['all_properties']['cursor'] = 'CSS2.0,CSS2.1';
319:$GLOBALS['csstidy']['all_properties']['empty-cells'] = 'CSS2.0,CSS2.1';
320:$GLOBALS['csstidy']['all_properties']['display'] = 'CSS1.0,CSS2.0,CSS2.1';
321:$GLOBALS['csstidy']['all_properties']['direction'] = 'CSS2.0,CSS2.1';
322:$GLOBALS['csstidy']['all_properties']['float'] = 'CSS1.0,CSS2.0,CSS2.1';
323:$GLOBALS['csstidy']['all_properties']['font'] = 'CSS1.0,CSS2.0,CSS2.1';
324:$GLOBALS['csstidy']['all_properties']['font-family'] = 'CSS1.0,CSS2.0,CSS2.1';
325:$GLOBALS['csstidy']['all_properties']['font-style'] = 'CSS1.0,CSS2.0,CSS2.1';
326:$GLOBALS['csstidy']['all_properties']['font-variant'] = 'CSS1.0,CSS2.0,CSS2.1';
327:$GLOBALS['csstidy']['all_properties']['font-weight'] = 'CSS1.0,CSS2.0,CSS2.1';
328:$GLOBALS['csstidy']['all_properties']['font-stretch'] = 'CSS2.0';
329:$GLOBALS['csstidy']['all_properties']['font-size-adjust'] = 'CSS2.0';
330:$GLOBALS['csstidy']['all_properties']['font-size'] = 'CSS1.0,CSS2.0,CSS2.1';
331:$GLOBALS['csstidy']['all_properties']['height'] = 'CSS1.0,CSS2.0,CSS2.1';
332:$GLOBALS['csstidy']['all_properties']['left'] = 'CSS1.0,CSS2.0,CSS2.1';
333:$GLOBALS['csstidy']['all_properties']['line-height'] = 'CSS1.0,CSS2.0,CSS2.1';
334:$GLOBALS['csstidy']['all_properties']['list-style'] = 'CSS1.0,CSS2.0,CSS2.1';
335:$GLOBALS['csstidy']['all_properties']['list-style-type'] = 'CSS1.0,CSS2.0,CSS2.1';
336:$GLOBALS['csstidy']['all_properties']['list-style-image'] = 'CSS1.0,CSS2.0,CSS2.1';
337:$GLOBALS['csstidy']['all_properties']['list-style-position'] = 'CSS1.0,CSS2.0,CSS2.1';
338:$GLOBALS['csstidy']['all_properties']['margin'] = 'CSS1.0,CSS2.0,CSS2.1';
339:$GLOBALS['csstidy']['all_properties']['margin-top'] = 'CSS1.0,CSS2.0,CSS2.1';
340:$GLOBALS['csstidy']['all_properties']['margin-right'] = 'CSS1.0,CSS2.0,CSS2.1';
341:$GLOBALS['csstidy']['all_properties']['margin-bottom'] = 'CSS1.0,CSS2.0,CSS2.1';
342:$GLOBALS['csstidy']['all_properties']['margin-left'] = 'CSS1.0,CSS2.0,CSS2.1';
343:$GLOBALS['csstidy']['all_properties']['marks'] = 'CSS1.0,CSS2.0';
344:$GLOBALS['csstidy']['all_properties']['marker-offset'] = 'CSS2.0';
345:$GLOBALS['csstidy']['all_properties']['max-height'] = 'CSS2.0,CSS2.1';
346:$GLOBALS['csstidy']['all_properties']['max-width'] = 'CSS2.0,CSS2.1';
347:$GLOBALS['csstidy']['all_properties']['min-height'] = 'CSS2.0,CSS2.1';
348:$GLOBALS['csstidy']['all_properties']['min-width'] = 'CSS2.0,CSS2.1';
349:$GLOBALS['csstidy']['all_properties']['overflow'] = 'CSS1.0,CSS2.0,CSS2.1';
350:$GLOBALS['csstidy']['all_properties']['orphans'] = 'CSS2.0,CSS2.1';
351:$GLOBALS['csstidy']['all_properties']['outline'] = 'CSS2.0,CSS2.1';
352:$GLOBALS['csstidy']['all_properties']['outline-width'] = 'CSS2.0,CSS2.1';
353:$GLOBALS['csstidy']['all_properties']['outline-style'] = 'CSS2.0,CSS2.1';
354:$GLOBALS['csstidy']['all_properties']['outline-color'] = 'CSS2.0,CSS2.1';
355:$GLOBALS['csstidy']['all_properties']['padding'] = 'CSS1.0,CSS2.0,CSS2.1';
356:$GLOBALS['csstidy']['all_properties']['padding-top'] = 'CSS1.0,CSS2.0,CSS2.1';
357:$GLOBALS['csstidy']['all_properties']['padding-right'] = 'CSS1.0,CSS2.0,CSS2.1';
358:$GLOBALS['csstidy']['all_properties']['padding-bottom'] = 'CSS1.0,CSS2.0,CSS2.1';
359:$GLOBALS['csstidy']['all_properties']['padding-left'] = 'CSS1.0,CSS2.0,CSS2.1';
360:$GLOBALS['csstidy']['all_properties']['page-break-before'] = 'CSS1.0,CSS2.0,CSS2.1';
361:$GLOBALS['csstidy']['all_properties']['page-break-after'] = 'CSS1.0,CSS2.0,CSS2.1';
362:$GLOBALS['csstidy']['all_properties']['page-break-inside'] = 'CSS2.0,CSS2.1';
363:$GLOBALS['csstidy']['all_properties']['page'] = 'CSS2.0';
364:$GLOBALS['csstidy']['all_properties']['position'] = 'CSS1.0,CSS2.0,CSS2.1';
365:$GLOBALS['csstidy']['all_properties']['quotes'] = 'CSS2.0,CSS2.1';
366:$GLOBALS['csstidy']['all_properties']['right'] = 'CSS2.0,CSS2.1';
367:$GLOBALS['csstidy']['all_properties']['size'] = 'CSS1.0,CSS2.0';
368:$GLOBALS['csstidy']['all_properties']['speak-header'] = 'CSS2.0,CSS2.1';
369:$GLOBALS['csstidy']['all_properties']['table-layout'] = 'CSS2.0,CSS2.1';
370:$GLOBALS['csstidy']['all_properties']['top'] = 'CSS1.0,CSS2.0,CSS2.1';
371:$GLOBALS['csstidy']['all_properties']['text-indent'] = 'CSS1.0,CSS2.0,CSS2.1';
372:$GLOBALS['csstidy']['all_properties']['text-align'] = 'CSS1.0,CSS2.0,CSS2.1';
373:$GLOBALS['csstidy']['all_properties']['text-decoration'] = 'CSS1.0,CSS2.0,CSS2.1';
374:$GLOBALS['csstidy']['all_properties']['text-shadow'] = 'CSS2.0';
375:$GLOBALS['csstidy']['all_properties']['letter-spacing'] = 'CSS1.0,CSS2.0,CSS2.1';
376:$GLOBALS['csstidy']['all_properties']['word-spacing'] = 'CSS1.0,CSS2.0,CSS2.1';
377:$GLOBALS['csstidy']['all_properties']['text-transform'] = 'CSS1.0,CSS2.0,CSS2.1';
378:$GLOBALS['csstidy']['all_properties']['white-space'] = 'CSS1.0,CSS2.0,CSS2.1';
379:$GLOBALS['csstidy']['all_properties']['unicode-bidi'] = 'CSS2.0,CSS2.1';
380:$GLOBALS['csstidy']['all_properties']['vertical-align'] = 'CSS1.0,CSS2.0,CSS2.1';
381:$GLOBALS['csstidy']['all_properties']['visibility'] = 'CSS1.0,CSS2.0,CSS2.1';
382:$GLOBALS['csstidy']['all_properties']['width'] = 'CSS1.0,CSS2.0,CSS2.1';
383:$GLOBALS['csstidy']['all_properties']['widows'] = 'CSS2.0,CSS2.1';
384:$GLOBALS['csstidy']['all_properties']['z-index'] = 'CSS1.0,CSS2.0,CSS2.1';
385-/* Speech */
386:$GLOBALS['csstidy']['all_properties']['volume'] = 'CSS2.0,CSS2.1';
387:$GLOBALS['csstidy']['all_properties']['speak'] = 'CSS2.0,CSS2.1';
388:$GLOBALS['csstidy']['all_properties']['pause'] = 'CSS2.0,CSS2.1';
389:$GLOBALS['csstidy']['all_properties']['pause-before'] = 'CSS2.0,CSS2.1';
390:$GLOBALS['csstidy']['all_properties']['pause-after'] = 'CSS2.0,CSS2.1';
391:$GLOBALS['csstidy']['all_properties']['cue'] = 'CSS2.0,CSS2.1';
392:$GLOBALS['csstidy']['all_properties']['cue-before'] = 'CSS2.0,CSS2.1';
393:$GLOBALS['csstidy']['all_properties']['cue-after'] = 'CSS2.0,CSS2.1';
394:$GLOBALS['csstidy']['all_properties']['play-during'] = 'CSS2.0,CSS2.1';
395:$GLOBALS['csstidy']['all_properties']['azimuth'] = 'CSS2.0,CSS2.1';
396:$GLOBALS['csstidy']['all_properties']['elevation'] = 'CSS2.0,CSS2.1';
397:$GLOBALS['csstidy']['all_properties']['speech-rate'] = 'CSS2.0,CSS2.1';
398:$GLOBALS['csstidy']['all_properties']['voice-family'] = 'CSS2.0,CSS2.1';
399:$GLOBALS['csstidy']['all_properties']['pitch'] = 'CSS2.0,CSS2.1';
400:$GLOBALS['csstidy']['all_properties']['pitch-range'] = 'CSS2.0,CSS2.1';
401:$GLOBALS['csstidy']['all_properties']['stress'] = 'CSS2.0,CSS2.1';
402:$GLOBALS['csstidy']['all_properties']['richness'] = 'CSS2.0,CSS2.1';
403:$GLOBALS['csstidy']['all_properties']['speak-punctuation'] = 'CSS2.0,CSS2.1';
404:$GLOBALS['csstidy']['all_properties']['speak-numeral'] = 'CSS2.0,CSS2.1';
405-
406-/**
407- * An array containing all predefined templates.
408- *
409: * @global array $GLOBALS['csstidy']['predefined_templates']
410- * @version 1.0
411- * @see csstidy::load_template()
412- */
413:$GLOBALS['csstidy']['predefined_templates']['default'][] = '<span class="at">'; //string before @rule
414:$GLOBALS['csstidy']['predefined_templates']['default'][] = '</span> <span class="format">{</span>'."\n"; //bracket after @-rule
415:$GLOBALS['csstidy']['predefined_templates']['default'][] = '<span class="selector">'; //string before selector
416:$GLOBALS['csstidy']['predefined_templates']['default'][] = '</span> <span class="format">{</span>'."\n"; //bracket after selector
417:$GLOBALS['csstidy']['predefined_templates']['default'][] = '<span class="property">'; //string before property
418:$GLOBALS['csstidy']['predefined_templates']['default'][] = '</span><span class="value">'; //string after property+before value
419:$GLOBALS['csstidy']['predefined_templates']['default'][] = '</span><span class="format">;</span>'."\n"; //string after value
420:$GLOBALS['csstidy']['predefined_templates']['default'][] = '<span class="format">}</span>'; //closing bracket - selector
421:$GLOBALS['csstidy']['predefined_templates']['default'][] = "\n\n"; //space between blocks {...}
422:$GLOBALS['csstidy']['predefined_templates']['default'][] = "\n".'<span class="format">}</span>'. "\n\n"; //closing bracket @-rule
423:$GLOBALS['csstidy']['predefined_templates']['default'][] = ''; //indent in @-rule
424:$GLOBALS['csstidy']['predefined_templates']['default'][] = '<span class="comment">'; // before comment
425:$GLOBALS['csstidy']['predefined_templates']['default'][] = '</span>'."\n"; // after comment
426:$GLOBALS['csstidy']['predefined_templates']['default'][] = "\n"; // after last line @-rule
427-
428:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '<span class="at">';
429:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '</span> <span class="format">{</span>'."\n";
430:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '<span class="selector">';
431:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '</span><span class="format">{</span>';
432:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '<span class="property">';
433:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '</span><span class="value">';
434:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '</span><span class="format">;</span>';
435:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '<span class="format">}</span>';
436:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = "\n";
437:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = "\n". '<span class="format">}'."\n".'</span>';
438:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '';
439:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '<span class="comment">'; // before comment
440:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = '</span>'; // after comment
441:$GLOBALS['csstidy']['predefined_templates']['high_compression'][] = "\n";
442-
443:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '<span class="at">';
444:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '</span><span class="format">{</span>';
445:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '<span class="selector">';
446:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '</span><span class="format">{</span>';
447:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '<span class="property">';
448:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '</span><span class="value">';
449:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '</span><span class="format">;</span>';
450:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '<span class="format">}</span>';
451:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '';
452:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '<span class="format">}</span>';
453:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '';
454:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '<span class="comment">'; // before comment
455:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '</span>'; // after comment
456:$GLOBALS['csstidy']['predefined_templates']['highest_compression'][] = '';
457-
458:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '<span class="at">';
459:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '</span> <span class="format">{</span>'."\n";
460:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '<span class="selector">';
461:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '</span>'."\n".'<span class="format">{</span>'."\n";
462:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '	<span class="property">';
463:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '</span><span class="value">';
464:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '</span><span class="format">;</span>'."\n";
465:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '<span class="format">}</span>';
466:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = "\n\n";
467:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = "\n".'<span class="format">}</span>'."\n\n";
468:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '	';
469:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '<span class="comment">'; // before comment
470:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = '</span>'."\n"; // after comment
471:$GLOBALS['csstidy']['predefined_templates']['low_compression'][] = "\n";
472-
473-?>]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[359]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[356-{
357-	++$i;
358-	$add = '';
359:	$tokens =& $GLOBALS['csstidy']['tokens'];
360-	$replaced = false;
361-
362-	while($i < strlen($string) && (ctype_xdigit($string{$i}) || ctype_space($string{$i})) && strlen($add) < 6)]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[407]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[404- */
405-function load_template($content, $from_file=true)
406-{
407:	$predefined_templates =& $GLOBALS['csstidy']['predefined_templates'];
408-	if($content == 'high_compression' || $content == 'default' || $content == 'highest_compression' || $content == 'low_compression')
409-	{
410-		$this->template = $predefined_templates[$content];]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[447]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[444- */
445-function is_token(&$string, $i)
446-{
447:	$tokens =& $GLOBALS['csstidy']['tokens'];
448-	return (strpos($tokens, $string{$i}) !== false && !csstidy::escaped($string,$i));
449-}
450-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[464]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[461-    $this->print = new csstidy_print($this);
462-    $this->optimise = new csstidy_optimise($this);
463-
464:    $all_properties =& $GLOBALS['csstidy']['all_properties'];
465:    $at_rules =& $GLOBALS['csstidy']['at_rules'];
466-
467-    $this->css = array();
468-    $this->print->input_css = $string;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[785]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[782-                $temp_add = "\\A ";
783-                $this->log('Fixed incorrect newline in string','Warning');
784-            }
785:            if (!($this->str_char == ')' && in_array($string{$i}, $GLOBALS['csstidy']['whitespace']) && !$this->str_in_str)) {
786-                $this->cur_string .= $temp_add;
787-            }
788-            if($string{$i} == $this->str_char && !csstidy::escaped($string,$i) && !$this->str_in_str)
789-            {
790-                $this->status = $this->from;
791:                if (!preg_match('|[' . implode('', $GLOBALS['csstidy']['whitespace']) . ']|uis', $this->cur_string) && $this->property != 'content') {
792-                    if ($this->str_char == '"' || $this->str_char == '\'') {
793-						$this->cur_string = substr($this->cur_string, 1, -1);
794-					} else if (strlen($this->cur_string) > 3 && ($this->cur_string[1] == '"' || $this->cur_string[1] == '\'')) /* () */ {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[936]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[933- */
934-function is_important(&$value)
935-{
936:	return (!strcasecmp(substr(str_replace($GLOBALS['csstidy']['whitespace'],'',$value),-10,10),'!important'));
937-}
938-
939-/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[970]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[967- */
968-function property_is_next($istring, $pos)
969-{
970:	$all_properties =& $GLOBALS['csstidy']['all_properties'];
971-	$istring = substr($istring,$pos,strlen($istring)-$pos);
972-	$pos = strpos($istring,':');
973-	if($pos === false)]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[994]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[991- * @version 1.0
992- */
993-function property_is_valid($property) {
994:    $all_properties =& $GLOBALS['csstidy']['all_properties'];
995-    return (isset($all_properties[$property]) && strpos($all_properties[$property],strtoupper($this->get_cfg('css_level'))) !== false );
996-}
997-]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[105]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[102-     */
103-    function value()
104-    {
105:        $shorthands =& $GLOBALS['csstidy']['shorthands'];
106-
107-        // optimise shorthand properties
108-        if(isset($shorthands[$this->property]))]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[132]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[129-     */
130-    function shorthands()
131-    {
132:        $shorthands =& $GLOBALS['csstidy']['shorthands'];
133-
134-        if(!$this->parser->get_cfg('optimise_shorthands') || $this->parser->get_cfg('preserve_css')) {
135-            return;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[160]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[157-     */
158-    function subvalue()
159-    {
160:        $replace_colors =& $GLOBALS['csstidy']['replace_colors'];
161-
162-        $this->sub_value = trim($this->sub_value);
163-        if($this->sub_value == '') // caution : '0']]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[297]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[294-     */
295-    function cut_color($color)
296-    {
297:        $replace_colors =& $GLOBALS['csstidy']['replace_colors'];
298-
299-        // rgb(0,0,0) -> #000000 (or #000 in this case later)
300-        if(strtolower(substr($color,0,4)) == 'rgb(')]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[372]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[369-     */
370-    function compress_numbers($subvalue)
371-    {
372:        $units =& $GLOBALS['csstidy']['units'];
373:        $unit_values =& $GLOBALS['csstidy']['unit_values'];
374:        $color_values =& $GLOBALS['csstidy']['color_values'];
375-
376-        // for font:1em/1em sans-serif...;
377-        if($this->property == 'font')]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[497]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[494-     */
495-    function dissolve_4value_shorthands($property,$value)
496-    {
497:        $shorthands =& $GLOBALS['csstidy']['shorthands'];
498-        if(!is_array($shorthands[$property]))
499-        {
500-            $return[$property] = $value;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[611]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[608-    function merge_4value_shorthands($array)
609-    {
610-        $return = $array;
611:        $shorthands =& $GLOBALS['csstidy']['shorthands'];
612-
613-        foreach($shorthands as $key => $value)
614-        {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[651]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[648-     */
649-    function dissolve_short_bg($str_value)
650-    {
651:        $background_prop_default =& $GLOBALS['csstidy']['background_prop_default'];
652-        $repeat = array('repeat','repeat-x','repeat-y','no-repeat','space');
653-        $attachment = array('scroll','fixed','local');
654-        $clip = array('border','padding');]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[737]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[734-     */
735-    function merge_bg($input_css)
736-    {
737:        $background_prop_default =& $GLOBALS['csstidy']['background_prop_default'];
738-        // Max number of background images. CSS3 not yet fully implemented
739-        $number_of_values = @max(count(csstidy_optimise::explode_ws(',',$input_css['background-image'])),count(csstidy_optimise::explode_ws(',',$input_css['background-color'])),1);
740-        // Array with background images to check if BG image exists]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[543]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[540-                                            $guid = ltrim($upload_info['baseurlpath'] . $title, ',');
541-                                            $mime_type = w3_get_mime_type($dst);
542-
543:                                            @$GLOBALS['wp_rewrite'] = & new WP_Rewrite();
544-
545-                                            /**
546-                                             * Insert attachment]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4764]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[4761-                     */
4762-                    case ($template == 'taxonomy'):
4763-                        $taxonomy = '';
4764:                        if (isset($GLOBALS['wp_taxonomies']) && is_array($GLOBALS['wp_taxonomies'])) {
4765:                            foreach ($GLOBALS['wp_taxonomies'] as $wp_taxonomy) {
4766-                                if (!in_array($wp_taxonomy->name, array(
4767-                                    'category',
4768-                                    'post_tag',]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1076]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[1073-                                            $guid = ltrim($upload_info['baseurlpath'] . $title, ',');
1074-                                            $mime_type = w3_get_mime_type($dst);
1075-
1076:                                            $GLOBALS['wp_rewrite'] = & new WP_Rewrite();
1077-
1078-                                            /**
1079-                                             * Insert attachment]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCacheFlush.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[386]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[383-     * @return string
384-     */
385-    function _get_comments_pagenum_link($post_id, $pagenum = 1, $max_page = 0) {
386:        if (isset($GLOBALS['post']) && is_object($GLOBALS['post'])) {
387:            $old_post = &$GLOBALS['post'];
388-        } else {
389:            @$GLOBALS['post'] = & new stdClass();
390-            $old_post = null;
391-        }
392-
393:        $GLOBALS['post']->ID = $post_id;
394-
395-        $link = get_comments_pagenum_link($pagenum, $max_page);
396-
397-        if ($old_post) {
398:            $GLOBALS['post'] = &$old_post;
399-        }
400-
401-        return $link;]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[963]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[960-      
961-        foreach ($Object as $key => $val) {
962-          
963:          // Encoding the $GLOBALS PHP array causes an infinite loop
964-          // if the recursion is not reset here as it contains
965-          // a reference to itself. This is the only way I have come up
966-          // with to stop infinite recursion in this case.]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/FirePHP.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1352]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[1349-  */
1350-  private function json_name_value($name, $value)
1351-  {
1352:      // Encoding the $GLOBALS PHP array causes an infinite loop
1353-      // if the recursion is not reset here as it contains
1354-      // a reference to itself. This is the only way I have come up
1355-      // with to stop infinite recursion in this case.]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.nusoap_base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[74]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[71-
72-// class variable emulation
73-// cf. http://www.webkreator.com/php/techniques/php-static-class-variables.html
74:$GLOBALS['_transient']['static']['nusoap_base']['globalDebugLevel'] = 9;
75-
76-/**
77-*]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.nusoap_base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[226]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[223-	* @access	public
224-	*/
225-	function nusoap_base() {
226:		$this->debugLevel = $GLOBALS['_transient']['static']['nusoap_base']['globalDebugLevel'];
227-	}
228-
229-	/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.nusoap_base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[236]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[233-	* @access	public
234-	*/
235-	function getGlobalDebugLevel() {
236:		return $GLOBALS['_transient']['static']['nusoap_base']['globalDebugLevel'];
237-	}
238-
239-	/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.nusoap_base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[246]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[243-	* @access	public
244-	*/
245-	function setGlobalDebugLevel($level) {
246:		$GLOBALS['_transient']['static']['nusoap_base']['globalDebugLevel'] = $level;
247-	}
248-
249-	/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[74]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[71-
72-// class variable emulation
73-// cf. http://www.webkreator.com/php/techniques/php-static-class-variables.html
74:$GLOBALS['_transient']['static']['nusoap_base']['globalDebugLevel'] = 9;
75-
76-/**
77-*]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[226]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[223-	* @access	public
224-	*/
225-	function nusoap_base() {
226:		$this->debugLevel = $GLOBALS['_transient']['static']['nusoap_base']['globalDebugLevel'];
227-	}
228-
229-	/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[236]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[233-	* @access	public
234-	*/
235-	function getGlobalDebugLevel() {
236:		return $GLOBALS['_transient']['static']['nusoap_base']['globalDebugLevel'];
237-	}
238-
239-	/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[246]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[243-	* @access	public
244-	*/
245-	function setGlobalDebugLevel($level) {
246:		$GLOBALS['_transient']['static']['nusoap_base']['globalDebugLevel'] = $level;
247-	}
248-
249-	/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[416]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[413-        if (file_exists(W3TC_BLOGNAMES_PATH)) {
414-            // Get blognames from cache
415-            $blognames = w3_load_blognames();
416:        } elseif (isset($GLOBALS['wpdb'])) {
417-            // Get blognames from DB
418-            $blognames = w3_get_blognames();
419-        } else {]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[437]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[434- * @return integer
435- */
436-function w3_get_blog_id() {
437:    return (isset($GLOBALS['blog_id']) ? (int) $GLOBALS['blog_id'] : 0);
438-}
439-
440-/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[869]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[866-        '%DOMAIN%',
867-        '%BASE_PATH%'
868-    ), array(
869:        (isset($GLOBALS['blog_id']) ? (int) $GLOBALS['blog_id'] : 0),
870:        (isset($GLOBALS['post_id']) ? (int) $GLOBALS['post_id'] : 0),
871-        w3_get_blogname(),
872-        w3_get_host(),
873-        w3_get_domain(w3_get_host()),]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/plugin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[15]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[12- * @return void
13- */
14-function w3tc_add_action($action, $callback) {
15:    $GLOBALS['_w3tc_actions'][$action][] = $callback;
16-}
17-
18-/**]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/plugin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[26]]></line_number>
		<match><![CDATA[$GLOBALS]]></match>
		<name><![CDATA[$GLOBALS]]></name>
		<snippet><![CDATA[23- * @return mixed
24- */
25-function w3tc_do_action($action, $value = null) {
26:    if (isset($GLOBALS['_w3tc_actions'][$action])) {
27:        foreach ((array) $GLOBALS['_w3tc_actions'][$action] as $callback) {
28-            if (is_callable($callback)) {
29-                $value = call_user_func($callback, $value);
30-            }]]></snippet>
		<group><![CDATA[globals]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[758]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[756-                if ( !@mssql_select_db($db, $dbh) ) {
757-                        $this->ready = false;
758:                        $this->bail( sprintf( /*WP_I18N_DB_SELECT_DB*/'
759-<h1>Can&#8217;t select database</h1>
760-<p>We were able to connect to the database server (which means your username and password is okay) but not able to select the <code>%1$s</code> database.</p>
761-<ul>]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[766]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[763-<li>Does the user <code>%2$s</code> have permission to use the <code>%1$s</code> database?</li>
764-<li>On some systems the name of your database is prefixed with your username, so it would be like <code>username_%1$s</code>. Could that be the problem?</li>
765-</ul>
766:<p>If you don\'t know how to set up a database you should <strong>contact your host</strong>. If all else fails you may find help at the <a href="http://wordpress.org/support/">WordPress Support Forums</a>.</p>'/*/WP_I18N_DB_SELECT_DB*/, $db, $this->dbuser ), 'db_select_fail' );
767-                        return;
768-                }
769-        }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[882]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[879-         * Both %d and %s should be left unquoted in the query string.
880-         *
881-         * <code>
882:         * wpdb::prepare( "SELECT * FROM `table` WHERE `column` = %s AND `field` = %d", 'foo', 1337 )
883:         * wpdb::prepare( "SELECT DATE_FORMAT(`field`, '%%c') FROM `table` WHERE `column` = %s", 'foo' );
884-         * </code>
885-         *
886-         * @link http://php.net/sprintf Description of syntax.]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1038]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[1035-                $this->last_query  = null;
1036-        }
1037-
1038:        function db_connect( $query = "SELECT" ) {
1039-                global $db_list, $global_db_list;
1040-                if ( ! is_array( $db_list ) )
1041-                        return true;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1202]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[1199-                        $this->rows_affected = mssql_rows_affected($dbh);
1200-                        // Take note of the insert_id
1201-                        if ( preg_match("/^\\s*(insert|replace) /i",$query) ) {
1202:                                $result = @mssql_fetch_object(@mssql_query("SELECT SCOPE_IDENTITY() AS ID"));
1203-                                $this->insert_id = $result->ID;
1204-                        }
1205-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2220]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2217-
2218-        if ( stripos($query, 'INSERT') === 0 ) {
2219-            $this->insert_query = true;
2220:        } else if ( stripos($query, 'SELECT') === 0 ) {
2221-            $this->select_query = true;
2222-        } else if ( stripos($query, 'DELETE') === 0 ) {
2223-            $this->delete_query = true;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2245]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2242-    function translate_general($query)
2243-    {
2244-        // SERVER VERSION
2245:        if ( stripos($query, 'SELECT VERSION()' ) === 0) {
2246:            $query = substr_replace($query, 'SELECT @@VERSION', 0, 16);
2247-        }
2248-        // SQL_MODE NO EQUIV
2249-        if ( stripos($query, "SHOW VARIABLES LIKE 'sql_mode'" ) === 0) {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2264]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2261-        if ( stripos($query, 'show tables like ') === 0 ) {
2262-            $end_pos = strlen($query);
2263-            $param = substr($query, 17, $end_pos - 17);
2264:            $query = 'SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE ' . $param;
2265-        }
2266-        // SET NAMES doesn't exist in T-SQL
2267-        if ( stristr($query, "set names 'utf8'") !== FALSE ) {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2275]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2272-            $end_pos = strlen($query);
2273-            $param = substr($query, 18, $end_pos - 18);
2274-            $param = "'". trim($param, "'") . "'";
2275:            $query = 'SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ' . $param;
2276-        }
2277-
2278-        // SHOW INDEXES - issue with sql azure trying to fix....sys.sysindexes is coming back as invalid onject name
2279-        if ( stripos($query, 'SHOW INDEXES FROM ') === 0 ) {
2280-            return $query;
2281-            $table = substr($query, 18);
2282:            $query = "SELECT sys.sysindexes.name AS IndexName
2283-                      FROM sysobjects
2284-                       JOIN sys.key_constraints ON parent_object_id = sys.sysobjects.id
2285-                       JOIN sys.sysindexes ON sys.sysindexes.id = sys.sysobjects.id and sys.key_constraints.unique_index_id = sys.sysindexes.indid]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2349]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2346-        $query = str_replace('`', '', $query);
2347-
2348-        // avoiding some nested as Computed issues
2349:        if (stristr($query, 'SELECT COUNT(DISTINCT(' . $this->prefix . 'users.ID))') !== FALSE) {
2350-            $query = str_ireplace(
2351:                'SELECT COUNT(DISTINCT(' . $this->prefix . 'users.ID))',
2352:                'SELECT COUNT(DISTINCT(' . $this->prefix . 'users.ID)) as Computed', $query);
2353-        }
2354-
2355-        if (!preg_match('/CHAR_LENGTH\((.*?)\) as/i', $query)) {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2378]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2375-        // Remove uncessary ORDER BY clauses as ORDER BY fields needs to
2376-        // be contained in either an aggregate function or the GROUP BY clause.
2377-        // something that isn't enforced in mysql
2378:        if (preg_match('/SELECT COUNT\((.*?)\) as Computed FROM/i', $query)) {
2379-            $order_pos = stripos($query, 'ORDER BY');
2380-            if ($order_pos !== false) {
2381-                $query = substr($query, 0, $order_pos);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2429]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2426-                        $from = trim($matches[0][1], '= ');
2427-                        $this->preceeding_query = "SET IDENTITY_INSERT $table ON";
2428-                        // find a better way to get columns (field mapping doesn't grab all)
2429:                        $query = "INSERT INTO $table (term_id,name,slug,term_group) SELECT $to,name,slug,term_group FROM $table WHERE $pid = $from";
2430-                        $this->following_query = array("DELETE $table WHERE $pid = $from","SET IDENTITY_INSERT $table OFF");
2431-                        $this->verify = false;
2432-                    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2520]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2517-     */
2518-    function translate_specific($query)
2519-    {
2520:        if ($query == "SELECT COUNT(NULLIF(meta_value LIKE '%administrator%', FALSE) as Computed), "
2521-                        . "COUNT(NULLIF(meta_value LIKE '%editor%', FALSE) as Computed), "
2522-                        . "COUNT(NULLIF(meta_value LIKE '%author%', FALSE) as Computed), "
2523-                        . "COUNT(NULLIF(meta_value LIKE '%contributor%', FALSE) as Computed), "
2524-                        . "COUNT(NULLIF(meta_value LIKE '%subscriber%', FALSE) as Computed), "
2525-                        . "COUNT(*) as Computed FROM " . $this->prefix . "usermeta WHERE meta_key LIKE '" . $this->prefix . "capabilities'") {
2526:            $query = "SELECT
2527:    (SELECT COUNT(*) FROM " . $this->prefix . "usermeta WHERE meta_key LIKE '" . $this->prefix . "capabilities' AND meta_value LIKE '%administrator%') as ca,
2528:    (SELECT COUNT(*) FROM " . $this->prefix . "usermeta WHERE meta_key LIKE '" . $this->prefix . "capabilities' AND meta_value LIKE '%editor%') as cb,
2529:    (SELECT COUNT(*) FROM " . $this->prefix . "usermeta WHERE meta_key LIKE '" . $this->prefix . "capabilities' AND meta_value LIKE '%author%') as cc,
2530:    (SELECT COUNT(*) FROM " . $this->prefix . "usermeta WHERE meta_key LIKE '" . $this->prefix . "capabilities' AND meta_value LIKE '%contributor%') as cd,
2531:    (SELECT COUNT(*) FROM " . $this->prefix . "usermeta WHERE meta_key LIKE '" . $this->prefix . "capabilities' AND meta_value LIKE '%subscriber%') as ce,
2532-    COUNT(*) as c FROM " . $this->prefix . "usermeta WHERE meta_key LIKE '" . $this->prefix . "capabilities'";
2533-        }
2534-
2535:        if (stristr($query, "SELECT DISTINCT TOP 50 (" . $this->prefix . "users.ID) FROM " . $this->prefix . "users") !== FALSE) {
2536-            $query = str_ireplace(
2537:                "SELECT DISTINCT TOP 50 (" . $this->prefix . "users.ID) FROM",
2538:                "SELECT DISTINCT TOP 50 (" . $this->prefix . "users.ID), user_login FROM", $query);
2539-        }
2540-
2541-        if (stristr($query, 'INNER JOIN ' . $this->prefix . 'terms USING (term_id)') !== FALSE) {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2563]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2560-     */
2561-    function translate_limit($query)
2562-    {
2563:        if ( (stripos($query,'SELECT') !== 0 && stripos($query,'SELECT') !== FALSE)
2564-            && (stripos($query,'UPDATE') !== 0  && stripos($query,'UPDATE') !== FALSE) ) {
2565-            return $query;
2566-        }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2591]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[2588-                $query = str_ireplace('DISTINCT', 'DISTINCT TOP ' . $limit_matches[1] . ' ', $query);
2589-            } else {
2590-                $query = str_ireplace('DELETE ', 'DELETE TOP ' . $limit_matches[1] . ' ', $query);
2591:                $query = str_ireplace('SELECT ', 'SELECT TOP ' . $limit_matches[1] . ' ', $query);
2592-            }
2593-        } else {
2594-            $limit_matches[1] = (int) $limit_matches[1];]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3364]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[3361-    /**
3362-     * Check query to make sure translations weren't made to INSERT query values
3363-     * If so replace translation with original data.
3364:     * E.G. INSERT INTO wp_posts (wp_title) VALUES ('SELECT * FROM wp_posts LIMIT 1');
3365:     * The translations may change the value data to SELECT TOP 1 FROM wp_posts...in this case
3366-     * we don't want that to happen.
3367-     *
3368-     * @since 2.7.1]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3446]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[3443-    /**
3444-     * Check query to make sure translations weren't made to UPDATE query values
3445-     * If so replace translation with original data.
3446:     * E.G. UPDATE wp_posts SET post_title = 'SELECT * FROM wp_posts LIMIT 1' WHERE post_id = 1;
3447:     * The translations may change the value data to SELECT TOP 1 FROM wp_posts...in this case
3448-     * we don't want that to happen
3449-     *
3450-     * @since 2.7.1]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3523]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[3520-     */
3521-    function describe($table)
3522-    {
3523:        $sql = "SELECT
3524-            c.name AS Field
3525-            ,t.name + t.length_string AS Type
3526-            ,CASE c.is_nullable WHEN 1 THEN 'YES' ELSE 'NO' END AS [Null]
3527-            ,CASE
3528:                WHEN EXISTS (SELECT * FROM sys.key_constraints AS kc
3529-                               INNER JOIN sys.index_columns AS ic ON kc.unique_index_id = ic.index_id AND kc.parent_object_id = ic.object_id
3530-                               WHERE kc.type = 'PK' AND ic.column_id = c.column_id AND c.object_id = ic.object_id)
3531-                               THEN 'PRI'
3532:                WHEN EXISTS (SELECT * FROM sys.key_constraints AS kc
3533-                               INNER JOIN sys.index_columns AS ic ON kc.unique_index_id = ic.index_id AND kc.parent_object_id = ic.object_id
3534-                               WHERE kc.type <> 'PK' AND ic.column_id = c.column_id AND c.object_id = ic.object_id)
3535-                               THEN 'UNI'
3536-                ELSE ''
3537-            END AS [Key]
3538-            ,ISNULL((
3539:                SELECT TOP(1)
3540-                    dc.definition
3541-                FROM sys.default_constraints AS dc
3542-                WHERE dc.parent_column_id = c.column_id AND c.object_id = dc.parent_object_id)
3543-            ,'') AS [Default]
3544-            ,CASE
3545-                WHEN EXISTS (
3546:                    SELECT
3547-                        *
3548-                    FROM sys.identity_columns AS ic
3549-                    WHERE ic.column_id = c.column_id AND c.object_id = ic.object_id)]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3555]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[3552-            END AS Extra
3553-        FROM sys.columns AS c
3554-        CROSS APPLY (
3555:            SELECT
3556-                t.name AS n1
3557-                ,CASE
3558-                    -- Types with length]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[218]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[215-    function queue_get($limit = null) {
216-        global $wpdb;
217-
218:        $sql = sprintf('SELECT * FROM %s%s ORDER BY date', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
219-
220-        if ($limit) {
221-            $sql .= sprintf(' LIMIT %d', $limit);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[302]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[299-        $upload_info = w3_upload_info();
300-
301-        if ($upload_info) {
302:            $sql = sprintf('SELECT
303-        		pm.meta_value AS file,
304-                pm2.meta_value AS metadata
305-            FROM]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[386]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[383-            /**
384-             * Search for posts with links or images
385-             */
386:            $sql = sprintf('SELECT
387-        		ID,
388-        		post_content,
389-        		post_date]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[650]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[647-        }
648-
649-        if ($upload_info) {
650:            $sql = sprintf('SELECT
651-        		ID,
652-        		post_content,
653-        		post_date]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[717]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[714-    function get_attachments_count() {
715-        global $wpdb;
716-
717:        $sql = sprintf('SELECT
718-        		COUNT(DISTINCT p.ID)
719-            FROM
720-                %sposts AS p]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[737]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[734-    function get_import_posts_count() {
735-        global $wpdb;
736-
737:        $sql = sprintf('SELECT
738-        		COUNT(*)
739-            FROM
740-                %sposts]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5637]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[5634-            }
5635-        }
5636-
5637:        $mysql_version = $wpdb->get_var('SELECT VERSION()');
5638-        $mysql_variables_result = (array) $wpdb->get_results('SHOW VARIABLES', ARRAY_N);
5639-        $mysql_variables = array();
5640-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5709]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[5706-    function is_queue_empty() {
5707-        global $wpdb;
5708-
5709:        $sql = sprintf('SELECT COUNT(*) FROM %s', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE);
5710-        $result = $wpdb->get_var($sql);
5711-
5712-        return ($result == 0);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[27-        global $wpdb;
28-
29-        $table = $wpdb->prefix . W3TC_CDN_TABLE_QUEUE;
30:        $sql = sprintf('SELECT id FROM %s WHERE local_path = "%s" AND remote_path = "%s" AND command != %d', $table, $wpdb->escape($local_path), $wpdb->escape($remote_path), $command);
31-
32-        $row = $wpdb->get_row($sql);
33-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[514]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[511-         */
512-        if ($queue === null) {
513-            if (!w3_is_cdn_mirror($this->_config->get_string('cdn.engine'))) {
514:                $sql = sprintf('SELECT remote_path FROM %s', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE);
515-                $queue = $wpdb->get_col($sql);
516-            } else {
517-                $queue = false;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[591]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[588-        global $wpdb;
589-
590-        $table = $wpdb->prefix . W3TC_CDN_TABLE_QUEUE;
591:        $sql = sprintf('SELECT id FROM %s WHERE local_path = "%s" AND remote_path = "%s" AND command != %d', $table, $wpdb->escape($local_path), $wpdb->escape($remote_path), $command);
592-
593-        $row = $wpdb->get_row($sql);
594-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[656]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[653-    function queue_get($limit = null) {
654-        global $wpdb;
655-
656:        $sql = sprintf('SELECT * FROM %s%s ORDER BY date', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
657-
658-        if ($limit) {
659-            $sql .= sprintf(' LIMIT %d', $limit);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[833]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[830-        $upload_info = w3_upload_info();
831-
832-        if ($upload_info) {
833:            $sql = sprintf('SELECT
834-        		pm.meta_value AS file,
835-                pm2.meta_value AS metadata
836-            FROM]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[917]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[914-            /**
915-             * Search for posts with links or images
916-             */
917:            $sql = sprintf('SELECT
918-        		ID,
919-        		post_content,
920-        		post_date]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1183]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[1180-        }
1181-
1182-        if ($upload_info) {
1183:            $sql = sprintf('SELECT
1184-        		ID,
1185-        		post_content,
1186-        		post_date]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1250]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[1247-    function get_attachments_count() {
1248-        global $wpdb;
1249-
1250:        $sql = sprintf('SELECT
1251-        		COUNT(DISTINCT p.ID)
1252-            FROM
1253-                %sposts AS p]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1270]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[1267-    function get_import_posts_count() {
1268-        global $wpdb;
1269-
1270:        $sql = sprintf('SELECT
1271-        		COUNT(*)
1272-            FROM
1273-                %sposts]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1484]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[1481-         */
1482-        if ($queue === null) {
1483-            if (!w3_is_cdn_mirror($this->_config->get_string('cdn.engine'))) {
1484:                $sql = sprintf('SELECT remote_path FROM %s', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE);
1485-                $queue = $wpdb->get_col($sql);
1486-            } else {
1487-                $queue = false;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCacheFlush.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[434]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[431-
432-        $where = implode(' AND ', $filters);
433-
434:        $sql = sprintf('SELECT COUNT(*) FROM %s WHERE %s', $wpdb->posts, $where);
435-
436-        $count = (int) $wpdb->get_var($sql);
437-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[311]]></line_number>
		<match><![CDATA[SELECT]]></match>
		<name><![CDATA[SELECT]]></name>
		<snippet><![CDATA[308-
309-    $blognames = array();
310-
311:    $sql = sprintf('SELECT domain, path FROM %s', $wpdb->blogs);
312-    $blogs = $wpdb->get_results($sql);
313-
314-    if ($blogs) {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[86]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[84-
85-        /**
86:         * The ID generated for an AUTO_INCREMENT column by the previous query (usually INSERT).
87-         *
88-         * @since 0.71
89-         * @access public]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1149]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[1146-                        $this->preceeding_query = false;
1147-                }
1148-
1149:                // Check if array of queries (this happens for INSERTS with multiple VALUES blocks)
1150-                if (is_array($query)) {
1151-                        foreach ($query as $sub_query) {
1152-                                $this->_pre_query();]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1305]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[1302-         * @return int|false The number of rows inserted, or false on error.
1303-         */
1304-        function insert( $table, $data, $format = null ) {
1305:                return $this->_insert_replace_helper( $table, $data, $format, 'INSERT' );
1306-        }
1307-
1308-        /**]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1348]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[1345-         *      A format is one of '%d', '%s' (decimal number, string). If omitted, all values in $data will be treated as strings unless otherwise specified in wpdb::$field_types.
1346-         * @return int|false The number of rows affected, or false on error.
1347-         */
1348:        function _insert_replace_helper( $table, $data, $format = null, $type = 'INSERT' ) {
1349:                if ( ! in_array( strtoupper( $type ), array( 'REPLACE', 'INSERT' ) ) )
1350-                        return false;
1351-                $formats = $format = (array) $format;
1352-                $fields = array_keys( $data );]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2218]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[2215-        $this->alter_query  = false;
2216-        $this->create_query = false;
2217-
2218:        if ( stripos($query, 'INSERT') === 0 ) {
2219-            $this->insert_query = true;
2220-        } else if ( stripos($query, 'SELECT') === 0 ) {
2221-            $this->select_query = true;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2252]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[2249-        if ( stripos($query, "SHOW VARIABLES LIKE 'sql_mode'" ) === 0) {
2250-            $query = '';
2251-        }
2252:        // LAST INSERT ID
2253:        if ( stripos($query, 'LAST_INSERT_ID()') > 0 ) {
2254:            $start_pos = stripos($query, 'LAST_INSERT_ID()');
2255-            $query = substr_replace($query, '@@IDENTITY', $start_pos, 16);
2256-        }
2257-        // SHOW TABLES]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2385]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[2382-            }
2383-        }
2384-
2385:        // Turn on IDENTITY_INSERT for Importing inserts or category/tag adds that are
2386-        // trying to explicitly set and IDENTITY column
2387-        if ($this->insert_query) {
2388-            $tables = array(]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2408]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[2405-                    }
2406-
2407-                    if ($found) {
2408:                        $this->preceeding_query = "SET IDENTITY_INSERT $table ON";
2409:                        $this->following_query = "SET IDENTITY_INSERT $table OFF";
2410-                    }
2411-                }
2412-            }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2427]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[2424-                    if (!empty($matches) && count($matches[0]) == 2) {
2425-                        $to = trim($matches[0][0], '= ');
2426-                        $from = trim($matches[0][1], '= ');
2427:                        $this->preceeding_query = "SET IDENTITY_INSERT $table ON";
2428-                        // find a better way to get columns (field mapping doesn't grab all)
2429:                        $query = "INSERT INTO $table (term_id,name,slug,term_group) SELECT $to,name,slug,term_group FROM $table WHERE $pid = $from";
2430:                        $this->following_query = array("DELETE $table WHERE $pid = $from","SET IDENTITY_INSERT $table OFF");
2431-                        $this->verify = false;
2432-                    }
2433-                }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2792]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[2789-
2790-
2791-    /**
2792:     * When INSERTING 0000-00-00 00:00:00 or '' for datetime SQL Server says wtf
2793-     * because it's null value begins at 1900-01-01...so lets change this to current time.
2794-     *
2795-     * @since 2.7.1]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3299]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[3296-    }
3297-
3298-    /**
3299:     * Check to see if INSERT has an ON DUPLICATE KEY statement
3300-     * This is MySQL specific and will be removed and put into
3301-     * a following_query UPDATE STATEMENT
3302-     *]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3328]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[3325-     }
3326-
3327-    /**
3328:     * Check to see if an INSERT query has multiple VALUES blocks. If so we need create
3329-     * seperate queries for each.
3330-     * @since 2.7.1
3331-     *]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3339]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[3336-    function split_insert_values($query)
3337-    {
3338-        $arr = array();
3339:        if (stripos($query, 'INSERT') === 0) {
3340-            $first = substr($query, 0, (stripos($query, 'VALUES') + 7));
3341-            $values = substr($query, (stripos($query, 'VALUES') + 7));
3342-            $arr = preg_split('/\),\s+\(/', $values);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3362]]></line_number>
		<match><![CDATA[INSERT]]></match>
		<name><![CDATA[INSERT]]></name>
		<snippet><![CDATA[3359-    }
3360-
3361-    /**
3362:     * Check query to make sure translations weren't made to INSERT query values
3363-     * If so replace translation with original data.
3364:     * E.G. INSERT INTO wp_posts (wp_title) VALUES ('SELECT * FROM wp_posts LIMIT 1');
3365-     * The translations may change the value data to SELECT TOP 1 FROM wp_posts...in this case
3366-     * we don't want that to happen.
3367-     *]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[158]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[156-        # connect to SSL Websites. It is the first 3 letters of the PHP_OS
157-        # variable.
158:        $OS_CAFILE_NONUPDATED=array(
159-            "win","dar"
160-        ); 
161-
162:        if (in_array((strtolower (substr(PHP_OS, 0,3))), $OS_CAFILE_NONUPDATED))
163-            $this->ssl_use_cabundle();
164-        
165-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1415]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[1412-                        $wheres[] = "`$field` = {$form}";
1413-                }
1414-
1415:                $sql = "UPDATE `$table` SET " . implode( ', ', $bits ) . ' WHERE ' . implode( ' AND ', $wheres );
1416-                return $this->query( $this->prepare( $sql, array_merge( array_values( $data ), array_values( $where ) ) ) );
1417-        }
1418-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2224]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[2221-            $this->select_query = true;
2222-        } else if ( stripos($query, 'DELETE') === 0 ) {
2223-            $this->delete_query = true;
2224:        } else if ( stripos($query, 'UPDATE') === 0 ) {
2225-            $this->update_query = true;
2226-        } else if ( stripos($query, 'ALTER') === 0 ) {
2227-            $this->alter_query = true;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2415]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[2412-            }
2413-        }
2414-
2415:        // UPDATE queries trying to change an IDENTITY column this happens
2416:        // for cat/tag adds (WPMU) e.g. UPDATE wp_1_terms SET term_id = 5 WHERE term_id = 3330
2417-        if ($this->update_query) {
2418-            $tables = array(
2419-                $this->prefix . 'terms' => 'term_id',]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2564]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[2561-    function translate_limit($query)
2562-    {
2563-        if ( (stripos($query,'SELECT') !== 0 && stripos($query,'SELECT') !== FALSE)
2564:            && (stripos($query,'UPDATE') !== 0  && stripos($query,'UPDATE') !== FALSE) ) {
2565-            return $query;
2566-        }
2567-        $pattern = '/LIMIT\s*(\d+)((\s*,?\s*)(\d+)*)$/is';]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3301]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[3298-    /**
3299-     * Check to see if INSERT has an ON DUPLICATE KEY statement
3300-     * This is MySQL specific and will be removed and put into
3301:     * a following_query UPDATE STATEMENT
3302-     *
3303-     * @param string $query Query coming in
3304-     * @return string query without ON DUPLICATE KEY statement
3305-     */
3306-     function on_duplicate_key($query)
3307-     {
3308:        if ( stripos($query, 'ON DUPLICATE KEY UPDATE') > 0 ) {
3309-            $table = substr($query, 12, (strpos($query, ' ', 12) - 12));
3310-            // currently just deal with wp_options table
3311-            if (stristr($table, 'options') !== FALSE) {
3312:                $start_pos = stripos($query, 'ON DUPLICATE KEY UPDATE');
3313-                $query = substr_replace($query, '', $start_pos);
3314-                $values_pos = stripos($query, 'VALUES');
3315-                $first_paren = stripos($query, '(', $values_pos);
3316-                $last_paren = $this->get_matching_paren($query, $first_paren + 1);
3317-                $values = explode(',', substr($query, ($first_paren + 1), ($last_paren-($first_paren + 1))));
3318-                // change this to use mapped fields
3319:                $update = 'UPDATE ' . $table . ' SET option_value = ' . $values[1] . ', autoload = ' . $values[2] .
3320-                    ' WHERE option_name = ' . $values[0];
3321-                $this->following_query = $update;
3322-            }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3444]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[3441-    }
3442-
3443-    /**
3444:     * Check query to make sure translations weren't made to UPDATE query values
3445-     * If so replace translation with original data.
3446:     * E.G. UPDATE wp_posts SET post_title = 'SELECT * FROM wp_posts LIMIT 1' WHERE post_id = 1;
3447-     * The translations may change the value data to SELECT TOP 1 FROM wp_posts...in this case
3448-     * we don't want that to happen
3449-     *]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[176]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[173-    function queue_update($queue_id, $last_error) {
174-        global $wpdb;
175-
176:        $sql = sprintf('UPDATE %s SET last_error = "%s", date = NOW() WHERE id = %d', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE, $wpdb->escape($last_error), $queue_id);
177-
178-        return $wpdb->query($sql);
179-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[614]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[611-    function queue_update($queue_id, $last_error) {
612-        global $wpdb;
613-
614:        $sql = sprintf('UPDATE %s SET last_error = "%s", date = NOW() WHERE id = %d', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE, $wpdb->escape($last_error), $queue_id);
615-
616-        return $wpdb->query($sql);
617-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[158]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[155-	/**
156-	 * Put page write options
157-	 */
158:	const PAGE_WRITE_UPDATE = 'update';
159-	const PAGE_WRITE_CLEAR  = 'clear';
160-
161-	/**]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1070]]></line_number>
		<match><![CDATA[UPDATE]]></match>
		<name><![CDATA[UPDATE]]></name>
		<snippet><![CDATA[1067-	 * @param array  $additionalHeaders  Additional headers. See http://msdn.microsoft.com/en-us/library/dd179371.aspx for more information.
1068-	 * @throws Microsoft_WindowsAzure_Exception
1069-	 */
1070:	public function putPage($containerName = '', $blobName = '', $startByteOffset = 0, $endByteOffset = 0, $contents = '', $writeMethod = self::PAGE_WRITE_UPDATE, $leaseId = null, $additionalHeaders = array())
1071-	{
1072-		if ($containerName === '') {
1073-			throw new Microsoft_WindowsAzure_Exception('Container name is not specified.');]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[129]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[127-            "HEAD"      => NULL, # HEAD requests
128-            "PUT_CONT"  => NULL, # PUT container
129:            "DEL_POST"  => NULL, # DELETE containers/objects, POST objects
130-        );
131-
132-        $this->_user_read_progress_callback_func = NULL;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[521]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[518-        return $return_code;
519-    }
520-
521:    # DELETE /v1/Account/Container
522-    #
523-    function delete_container($container_name)
524-    {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[532]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[529-            throw new SyntaxException("Container name not set.");
530-
531-        $url_path = $this->_make_path("STORAGE", $container_name);
532:        $return_code = $this->_send_request("DEL_POST",$url_path,array(),"DELETE");
533-
534-        if (!$return_code) {
535-            $this->error_str .= ": Failed to obtain valid HTTP response.";]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[889]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[886-                NULL, NULL, NULL, NULL, array());
887-    }
888-
889:    # DELETE /v1/Account/Container/Object
890-    #
891-    function delete_object($container_name, $object_name)
892-    {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[909]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[906-        }
907-
908-        $url_path = $this->_make_path("STORAGE", $container_name,$object_name);
909:        $return_code = $this->_send_request("DEL_POST",$url_path,NULL,"DELETE");
910-        if (!$return_code) {
911-            $this->error_str .= ": Failed to obtain valid HTTP response.";
912-            return 0;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1295]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[1292-                );
1293-        
1294-        switch ($method) {
1295:        case "DELETE":
1296-            curl_setopt($this->connections[$conn_type],
1297:                CURLOPT_CUSTOMREQUEST, "DELETE");
1298-            break;
1299-        case "POST":
1300-            curl_setopt($this->connections[$conn_type],]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2222]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[2219-            $this->insert_query = true;
2220-        } else if ( stripos($query, 'SELECT') === 0 ) {
2221-            $this->select_query = true;
2222:        } else if ( stripos($query, 'DELETE') === 0 ) {
2223-            $this->delete_query = true;
2224-        } else if ( stripos($query, 'UPDATE') === 0 ) {
2225-            $this->update_query = true;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2430]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[2427-                        $this->preceeding_query = "SET IDENTITY_INSERT $table ON";
2428-                        // find a better way to get columns (field mapping doesn't grab all)
2429-                        $query = "INSERT INTO $table (term_id,name,slug,term_group) SELECT $to,name,slug,term_group FROM $table WHERE $pid = $from";
2430:                        $this->following_query = array("DELETE $table WHERE $pid = $from","SET IDENTITY_INSERT $table OFF");
2431-                        $this->verify = false;
2432-                    }
2433-                }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2590]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[2587-            if ( stripos($query, 'DISTINCT') > 0 ) {
2588-                $query = str_ireplace('DISTINCT', 'DISTINCT TOP ' . $limit_matches[1] . ' ', $query);
2589-            } else {
2590:                $query = str_ireplace('DELETE ', 'DELETE TOP ' . $limit_matches[1] . ' ', $query);
2591-                $query = str_ireplace('SELECT ', 'SELECT TOP ' . $limit_matches[1] . ' ', $query);
2592-            }
2593-        } else {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[190]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[187-    function queue_delete($queue_id) {
188-        global $wpdb;
189-
190:        $sql = sprintf('DELETE FROM %s WHERE id = %d', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE, $queue_id);
191-
192-        return $wpdb->query($sql);
193-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[204]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[201-    function queue_empty($command) {
202-        global $wpdb;
203-
204:        $sql = sprintf('DELETE FROM %s WHERE command = %d', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE, $command);
205-
206-        return $wpdb->query($sql);
207-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[263]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[260-                        $cdn->upload($files, $results, $force_rewrite);
261-                        break;
262-
263:                    case W3TC_CDN_COMMAND_DELETE:
264-                        $cdn->delete($files, $results);
265-                        break;
266-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[35]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[32-        $row = $wpdb->get_row($sql);
33-
34-        if ($row) {
35:            $sql = sprintf('DELETE FROM %s WHERE id = %d', $table, $row->id);
36-        } else {
37-            $sql = sprintf('REPLACE INTO %s (local_path, remote_path, command, last_error, date) VALUES ("%s", "%s", %d, "%s", NOW())', $table, $wpdb->escape($local_path), $wpdb->escape($remote_path), $command, $wpdb->escape($last_error));
38-        }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[193]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[190-        if (!$return && $queue_failed) {
191-            foreach ($results as $result) {
192-                if ($result['result'] != W3TC_CDN_RESULT_OK) {
193:                    $this->queue_add($result['local_path'], $result['remote_path'], W3TC_CDN_COMMAND_DELETE, $result['error']);
194-                }
195-            }
196-        }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[596]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[593-        $row = $wpdb->get_row($sql);
594-
595-        if ($row) {
596:            $sql = sprintf('DELETE FROM %s WHERE id = %d', $table, $row->id);
597-        } else {
598-            $sql = sprintf('REPLACE INTO %s (local_path, remote_path, command, last_error, date) VALUES ("%s", "%s", %d, "%s", NOW())', $table, $wpdb->escape($local_path), $wpdb->escape($remote_path), $command, $wpdb->escape($last_error));
599-        }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[628]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[625-    function queue_delete($queue_id) {
626-        global $wpdb;
627-
628:        $sql = sprintf('DELETE FROM %s WHERE id = %d', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE, $queue_id);
629-
630-        return $wpdb->query($sql);
631-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[642]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[639-    function queue_empty($command) {
640-        global $wpdb;
641-
642:        $sql = sprintf('DELETE FROM %s WHERE command = %d', $wpdb->prefix . W3TC_CDN_TABLE_QUEUE, $command);
643-
644-        return $wpdb->query($sql);
645-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[701]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[698-                        $cdn->upload($files, $results, $force_rewrite);
699-                        break;
700-
701:                    case W3TC_CDN_COMMAND_DELETE:
702-                        $cdn->delete($files, $results);
703-                        break;
704-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[766]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[763-        if (!$return && $queue_failed) {
764-            foreach ($results as $result) {
765-                if ($result['result'] != W3TC_CDN_RESULT_OK) {
766:                    $this->queue_add($result['local_path'], $result['remote_path'], W3TC_CDN_COMMAND_DELETE, $result['error']);
767-                }
768-            }
769-        }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[72]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[69-    const POST    = 'POST';
70-    const PUT     = 'PUT';
71-    const HEAD    = 'HEAD';
72:    const DELETE  = 'DELETE';
73-    const TRACE   = 'TRACE';
74-    const OPTIONS = 'OPTIONS';
75-    const CONNECT = 'CONNECT';]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[322]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[319-                }
320-                break;
321-
322:            case Microsoft_Http_Client::DELETE:
323-                $curlMethod = CURLOPT_CUSTOMREQUEST;
324:                $curlValue = "DELETE";
325-                break;
326-
327-            case Microsoft_Http_Client::OPTIONS:]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[291]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[288-		}
289-
290-		// Perform request
291:		$response = $this->_performRequest($queueName, '', Microsoft_Http_Client::DELETE);
292-		if (!$response->isSuccessful()) {
293-			throw new Microsoft_WindowsAzure_Exception($this->_getErrorMessage($response, 'Resource could not be accessed.'));
294-		}]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[506]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[503-		}
504-
505-		// Perform request
506:		$response = $this->_performRequest($queueName . '/messages', '', Microsoft_Http_Client::DELETE);
507-		if (!$response->isSuccessful()) {
508-			throw new Microsoft_WindowsAzure_Exception('Error clearing messages from queue.');
509-		}]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[532]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[529-		}
530-
531-		// Perform request
532:		$response = $this->_performRequest($queueName . '/messages/' . $message->MessageId, '?popreceipt=' . $message->PopReceipt, Microsoft_Http_Client::DELETE);
533-		if (!$response->isSuccessful()) {
534-			throw new Microsoft_WindowsAzure_Exception($this->_getErrorMessage($response, 'Resource could not be accessed.'));
535-		}]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[536]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[533-		}
534-
535-		// Perform request
536:		$response = $this->_performRequest($containerName, '?restype=container', Microsoft_Http_Client::DELETE, $headers, false, null, Microsoft_WindowsAzure_Storage::RESOURCE_CONTAINER, Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);
537-		if (!$response->isSuccessful()) {
538-			throw new Microsoft_WindowsAzure_Exception($this->_getErrorMessage($response, 'Resource could not be accessed.'));
539-		}]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1636]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[1633-		$resourceName = self::createResourceName($containerName , $blobName);
1634-
1635-		// Perform request
1636:		$response = $this->_performRequest($resourceName, $queryString, Microsoft_Http_Client::DELETE, $headers, false, null, Microsoft_WindowsAzure_Storage::RESOURCE_BLOB, Microsoft_WindowsAzure_Credentials_CredentialsAbstract::PERMISSION_WRITE);
1637-		if (!$response->isSuccessful()) {
1638-			throw new Microsoft_WindowsAzure_Exception($this->_getErrorMessage($response, 'Resource could not be accessed.'));
1639-		}]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Batch.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[187]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[184-		// Add headers
185-		if ($httpVerb != Microsoft_Http_Client::GET) {
186-    		$headers['Content-ID'] = count($this->_operations) + 1;
187:    		if ($httpVerb != Microsoft_Http_Client::DELETE) {
188-    		    $headers['Content-Type'] = 'application/atom+xml;type=entry';
189-    		}
190-    		$headers['Content-Length'] = strlen($rawData);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[338]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[335-        $headers['Content-Type'] = 'application/atom+xml';
336-
337-		// Perform request
338:		$response = $this->_performRequest('Tables(\'' . $tableName . '\')', '', Microsoft_Http_Client::DELETE, $headers, true, null);
339-		if (!$response->isSuccessful()) {
340-			throw new Microsoft_WindowsAzure_Exception($this->_getErrorMessage($response, 'Resource could not be accessed.'));
341-		}]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[447]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[444-		// Perform request
445-	    $response = null;
446-	    if ($this->isInBatch()) {
447:		    $this->getCurrentBatch()->enlistOperation($tableName . '(PartitionKey=\'' . $entity->getPartitionKey() . '\', RowKey=\'' . $entity->getRowKey() . '\')', '', Microsoft_Http_Client::DELETE, $headers, true, null);
448-		    return null;
449-		} else {
450:		    $response = $this->_performRequest($tableName . '(PartitionKey=\'' . $entity->getPartitionKey() . '\', RowKey=\'' . $entity->getRowKey() . '\')', '', Microsoft_Http_Client::DELETE, $headers, true, null);
451-		}
452-		if (!$response->isSuccessful()) {
453-		    throw new Microsoft_WindowsAzure_Exception($this->_getErrorMessage($response, 'Resource could not be accessed.'));]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/CredentialsAbstract.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[74]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[71-	 */
72-	const PERMISSION_READ        = "r";
73-	const PERMISSION_WRITE       = "w";
74:	const PERMISSION_DELETE      = "d";
75-	const PERMISSION_LIST        = "l";
76-
77-	/**]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[164]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[161-		// Content-Length header
162-		$contentLength = '';
163-		if (strtoupper($httpVerb) != Microsoft_Http_Client::GET
164:			 && strtoupper($httpVerb) != Microsoft_Http_Client::DELETE
165-			 && strtoupper($httpVerb) != Microsoft_Http_Client::HEAD) {
166-			$contentLength = 0;
167-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[61]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[58-    const ORD_LF            = 10;
59-    const ORD_SPACE         = 32;
60-    const ACTION_KEEP_A     = 1;
61:    const ACTION_DELETE_A   = 2;
62:    const ACTION_DELETE_A_B = 3;
63-    
64-    protected $a           = "\n";
65-    protected $b           = '';]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[122]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[119-        $this->input = str_replace("\r\n", "\n", $this->input);
120-        $this->inputLength = strlen($this->input);
121-
122:        $this->action(self::ACTION_DELETE_A_B);
123-        
124-        while ($this->a !== null) {
125-            // determine next command
126-            $command = self::ACTION_KEEP_A; // default
127-            if ($this->a === ' ') {
128-                if (! $this->isAlphaNum($this->b)) {
129:                    $command = self::ACTION_DELETE_A;
130-                }
131-            } elseif ($this->a === "\n") {
132-                if ($this->b === ' ') {
133:                    $command = self::ACTION_DELETE_A_B;
134-                // in case of mbstring.func_overload & 2, must check for null b,
135-                // otherwise mb_strpos will give WARNING
136-                } elseif ($this->b === null
137-                          || (false === strpos('{[(+-', $this->b)
138-                              && ! $this->isAlphaNum($this->b))) {
139:                    $command = self::ACTION_DELETE_A;
140-                }
141-            } elseif (! $this->isAlphaNum($this->a)) {
142-                if ($this->b === ' '
143-                    || ($this->b === "\n" 
144-                        && (false === strpos('}])+-"\'', $this->a)))) {
145:                    $command = self::ACTION_DELETE_A_B;
146-                }
147-            }
148-            $this->action($command);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[167]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[164-    
165-    /**
166-     * ACTION_KEEP_A = Output A. Copy B to A. Get the next B.
167:     * ACTION_DELETE_A = Copy B to A. Get the next B.
168:     * ACTION_DELETE_A_B = Get the next B.
169-     */
170-    protected function action($command)
171-    {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[176]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[173-            case self::ACTION_KEEP_A:
174-                $this->output .= $this->a;
175-                // fallthrough
176:            case self::ACTION_DELETE_A:
177-                $this->a = $this->b;
178-                if ($this->a === "'" || $this->a === '"') { // string literal
179-                    $str = $this->a; // in case needed for exception]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[200]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[197-                    }
198-                }
199-                // fallthrough
200:            case self::ACTION_DELETE_A_B:
201-                $this->b = $this->next();
202-                if ($this->b === '/' && $this->isRegexpLiteral()) { // RegExp literal
203-                    $this->output .= $this->a . $this->b;]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[223]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[220-                    }
221-                    $this->b = $this->next();
222-                }
223:            // end case ACTION_DELETE_A_B
224-        }
225-    }
226-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMinPlus.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[354]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[351-				$s = $this->parseTree($n->treeNodes[0]) . ' instanceof ' . $this->parseTree($n->treeNodes[1]);
352-			break;
353-
354:			case KEYWORD_DELETE:
355-				$s = 'delete ' . $this->parseTree($n->treeNodes[0]);
356-			break;
357-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/JSMinPlus.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1079]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[1076-					}
1077-				break;
1078-
1079:				case KEYWORD_DELETE: case KEYWORD_VOID: case KEYWORD_TYPEOF:
1080-				case OP_NOT: case OP_BITWISE_NOT: case OP_UNARY_PLUS: case OP_UNARY_MINUS:
1081-				case KEYWORD_NEW:
1082-					if (!$this->t->scanOperand)]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[259]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[256-	* @return boolean
257-	*/
258-	public static function deleteBucket($bucket) {
259:		$rest = new S3Request('DELETE', $bucket);
260-		$rest = $rest->getResponse();
261-		if ($rest->error === false && $rest->code !== 204)
262-			$rest->error = array('code' => $rest->code, 'message' => 'Unexpected HTTP status');]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[788]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[785-	* @return boolean
786-	*/
787-	public static function deleteObject($bucket, $uri) {
788:		$rest = new S3Request('DELETE', $bucket, $uri);
789-		$rest = $rest->getResponse();
790-		if ($rest->error === false && $rest->code !== 204)
791-			$rest->error = array('code' => $rest->code, 'message' => 'Unexpected HTTP status');]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[983]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[980-	*/
981-	public static function deleteDistribution($dist) {
982-		self::$useSSL = true; // CloudFront requires SSL
983:		$rest = new S3Request('DELETE', '', '2010-11-01/distribution/'.$dist['id'], 'cloudfront.amazonaws.com');
984-		$rest->setHeader('If-Match', $dist['hash']);
985-		$rest = self::__getCloudFrontResponse($rest);
986-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1492]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[1489-				curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'HEAD');
1490-				curl_setopt($curl, CURLOPT_NOBODY, true);
1491-			break;
1492:			case 'DELETE':
1493:				curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'DELETE');
1494-			break;
1495-			default: break;
1496-		}]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[58]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[55-define('W3TC_CONFIG_MASTER_PATH', WP_CONTENT_DIR . '/w3-total-cache-config.php');
56-define('W3TC_MINIFY_LOG_FILE', W3TC_LOG_DIR . '/minify.log');
57-define('W3TC_CDN_COMMAND_UPLOAD', 1);
58:define('W3TC_CDN_COMMAND_DELETE', 2);
59-define('W3TC_CDN_COMMAND_PURGE', 3);
60-define('W3TC_CDN_TABLE_QUEUE', 'w3tc_cdn_queue');
61-define('W3TC_CDN_LOG_FILE', W3TC_LOG_DIR . '/cdn.log');]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[39-</div>
40-
41-<div id="cdn_queue_delete" class="tab-content"<?php if ($cdn_queue_tab != 'delete'): ?> style="display: none;"<?php endif; ?>>
42:<?php if (! empty($queue[W3TC_CDN_COMMAND_DELETE])): ?>
43-	<table class="table queue">
44-		<tr>
45-			<th>Local Path</th>]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[51]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[48-			<th width="25%">Date</th>
49-			<th width="10%">Delete</th>
50-		</tr>
51:		<?php foreach ((array) $queue[W3TC_CDN_COMMAND_DELETE] as $result): ?>
52-		<tr>
53-			<td><?php echo htmlspecialchars($result->local_path); ?></td>
54-			<td><?php echo htmlspecialchars($result->remote_path); ?></td>]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[64]]></line_number>
		<match><![CDATA[DELETE]]></match>
		<name><![CDATA[DELETE]]></name>
		<snippet><![CDATA[61-		<?php endforeach; ?>
62-	</table>
63-	<p>
64:		<a href="admin.php?page=w3tc_cdn&amp;w3tc_cdn_queue&amp;cdn_queue_tab=delete&amp;cdn_queue_action=empty&amp;cdn_queue_type=<?php echo W3TC_CDN_COMMAND_DELETE; ?>&amp;_wpnonce=<?php echo $nonce; ?>" class="cdn_queue_empty">Empty delete queue</a>
65-	</p>
66-<?php else: ?>
67-	<p class="empty">Delete queue is empty</p>]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1328]]></line_number>
		<match><![CDATA[REPLACE]]></match>
		<name><![CDATA[REPLACE]]></name>
		<snippet><![CDATA[1326-         */
1327-        function replace( $table, $data, $format = null ) {
1328:                return $this->_insert_replace_helper( $table, $data, $format, 'REPLACE' );
1329-        }
1330-
1331-        /**]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1349]]></line_number>
		<match><![CDATA[REPLACE]]></match>
		<name><![CDATA[REPLACE]]></name>
		<snippet><![CDATA[1346-         * @return int|false The number of rows affected, or false on error.
1347-         */
1348-        function _insert_replace_helper( $table, $data, $format = null, $type = 'INSERT' ) {
1349:                if ( ! in_array( strtoupper( $type ), array( 'REPLACE', 'INSERT' ) ) )
1350-                        return false;
1351-                $formats = $format = (array) $format;
1352-                $fields = array_keys( $data );]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2621]]></line_number>
		<match><![CDATA[REPLACE]]></match>
		<name><![CDATA[REPLACE]]></name>
		<snippet><![CDATA[2618-        $query = preg_replace('/(from_unixtime|unix_timestamp)\s*\(([^\)]*)\)/i', $replacement, $query);
2619-        $query = str_ireplace('NOW()', $replacement, $query);
2620-
2621:        // REPLACE dayofmonth which doesn't exist in T-SQL
2622-        $check = $query;
2623-        $query = preg_replace('/dayofmonth\((.*?)\)/i', 'DATEPART(DD,\1)',$query);
2624-        if ($check !== $query) {]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2670]]></line_number>
		<match><![CDATA[REPLACE]]></match>
		<name><![CDATA[REPLACE]]></name>
		<snippet><![CDATA[2667-    }
2668-
2669-    /**
2670:     * To use REPLACE() fields need to be cast as varchar
2671-     *
2672-     * @since 2.7.1
2673-     *]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2680]]></line_number>
		<match><![CDATA[REPLACE]]></match>
		<name><![CDATA[REPLACE]]></name>
		<snippet><![CDATA[2677-     */
2678-     function translate_replace_casting($query)
2679-     {
2680:        $query = preg_replace('/REPLACE\((.*?),.*?(.*?),.*?(.*?)\)/i', 'REPLACE(cast(\1 as nvarchar(max)),cast(\2 as nvarchar(max)),cast(\3 as nvarchar(max)))', $query);
2681-        return $query;
2682-     }
2683-]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[37]]></line_number>
		<match><![CDATA[REPLACE]]></match>
		<name><![CDATA[REPLACE]]></name>
		<snippet><![CDATA[34-        if ($row) {
35-            $sql = sprintf('DELETE FROM %s WHERE id = %d', $table, $row->id);
36-        } else {
37:            $sql = sprintf('REPLACE INTO %s (local_path, remote_path, command, last_error, date) VALUES ("%s", "%s", %d, "%s", NOW())', $table, $wpdb->escape($local_path), $wpdb->escape($remote_path), $command, $wpdb->escape($last_error));
38-        }
39-
40-        return $wpdb->query($sql);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[598]]></line_number>
		<match><![CDATA[REPLACE]]></match>
		<name><![CDATA[REPLACE]]></name>
		<snippet><![CDATA[595-        if ($row) {
596-            $sql = sprintf('DELETE FROM %s WHERE id = %d', $table, $row->id);
597-        } else {
598:            $sql = sprintf('REPLACE INTO %s (local_path, remote_path, command, last_error, date) VALUES ("%s", "%s", %d, "%s", NOW())', $table, $wpdb->escape($local_path), $wpdb->escape($remote_path), $command, $wpdb->escape($last_error));
599-        }
600-
601-        return $wpdb->query($sql);]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[506]]></line_number>
		<match><![CDATA[REPLACE]]></match>
		<name><![CDATA[REPLACE]]></name>
		<snippet><![CDATA[503-		$rest->setAmzHeader('x-amz-acl', $acl);
504-		$rest->setAmzHeader('x-amz-copy-source', sprintf('/%s/%s', $srcBucket, $srcUri));
505-		if (sizeof($requestHeaders) > 0 || sizeof($metaHeaders) > 0)
506:			$rest->setAmzHeader('x-amz-metadata-directive', 'REPLACE');
507-		$rest = $rest->getResponse();
508-		if ($rest->error === false && $rest->code !== 200)
509-			$rest->error = array('code' => $rest->code, 'message' => 'Unexpected HTTP status');]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2324]]></line_number>
		<match><![CDATA[DROP]]></match>
		<name><![CDATA[DROP]]></name>
		<snippet><![CDATA[2322-        }
2323-
2324:        // DROP TABLES
2325:        if ( stripos($query, 'DROP TABLE IF EXISTS ') === 0 ) {
2326-            $table = substr($query, 21, strlen($query) - 21);
2327:            $query = 'DROP TABLE ' . $table;
2328:        } elseif ( stripos($query, 'DROP TABLE ') === 0 ) {
2329-            $table = substr($query, 11, strlen($query) - 11);
2330:            $query = 'DROP TABLE ' . $table;
2331-        }
2332-
2333-        // REGEXP - not supported in TSQL]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[116]]></line_number>
		<match><![CDATA[DROP]]></match>
		<name><![CDATA[DROP]]></name>
		<snippet><![CDATA[113-        global $wpdb;
114-
115-        if ($drop) {
116:            $sql = sprintf('DROP TABLE IF EXISTS `%s%s`', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
117-
118-            $wpdb->query($sql);
119-        }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[146]]></line_number>
		<match><![CDATA[DROP]]></match>
		<name><![CDATA[DROP]]></name>
		<snippet><![CDATA[143-    function table_delete() {
144-        global $wpdb;
145-
146:        $sql = sprintf('DROP TABLE IF EXISTS `%s%s`', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
147-
148-        return $wpdb->query($sql);
149-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[182]]></line_number>
		<match><![CDATA[DROP]]></match>
		<name><![CDATA[DROP]]></name>
		<snippet><![CDATA[179-        global $wpdb;
180-
181-        if ($drop) {
182:            $sql = sprintf('DROP TABLE IF EXISTS `%s%s`', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
183-
184-            $wpdb->query($sql);
185-        }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[212]]></line_number>
		<match><![CDATA[DROP]]></match>
		<name><![CDATA[DROP]]></name>
		<snippet><![CDATA[209-    function table_delete() {
210-        global $wpdb;
211-
212:        $sql = sprintf('DROP TABLE IF EXISTS `%s%s`', $wpdb->prefix, W3TC_CDN_TABLE_QUEUE);
213-
214-        return $wpdb->query($sql);
215-    }]]></snippet>
		<group><![CDATA[sql]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[71]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[69- * Properties that need a value with unit
70- *
71: * @todo CSS3 properties
72- * @see compress_numbers();
73- * @global array $GLOBALS['csstidy']['unit_values']
74- * @version 1.2]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[85]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[82-/**
83- * Properties that allow <color> as value
84- *
85: * @todo CSS3 properties
86- * @see compress_numbers();
87- * @global array $GLOBALS['csstidy']['color_values']
88- * @version 1.0]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[104]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[101-/**
102- * Default values for the background properties
103- *
104: * @todo Possibly property names will change during CSS3 development
105- * @global array $GLOBALS['csstidy']['background_prop_default']
106- * @see dissolve_short_bg()
107- * @see merge_bg()]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[260]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[257- * A list of all shorthand properties that are devided into four properties and/or have four subvalues
258- *
259- * @global array $GLOBALS['csstidy']['shorthands']
260: * @todo Are there new ones in CSS3?
261- * @see dissolve_4value_shorthands()
262- * @see merge_4value_shorthands()
263- * @version 1.0]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[277]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[274- * All CSS Properties. Needed for csstidy::property_is_next()
275- *
276- * @global array $GLOBALS['csstidy']['all_properties']
277: * @todo Add CSS3 properties
278- * @version 1.0
279- * @see csstidy::property_is_next()
280- */]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[647]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[644-     * @return array
645-     * @version 1.0
646-     * @see merge_bg()
647:     * @todo full CSS 3 compliance
648-     */
649-    function dissolve_short_bg($str_value)
650-    {]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/class.csstidy_optimise.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[733]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[730-     * @return array
731-     * @version 1.0
732-     * @see dissolve_short_bg()
733:     * @todo full CSS 3 compliance
734-     */
735-    function merge_bg($input_css)
736-    {]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/JSON.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[821]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[818-	}
819-
820-	/**
821:	* @todo Ultimately, this should just call PEAR::isError()
822-	*/
823-	function isError($data, $code = null)
824-	{]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/JSON.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[850]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[847-} else {
848-
849-	/**
850:	* @todo Ultimately, this class shall be descended from PEAR_Error
851-	*/
852-	class Services_JSON_Error
853-	{]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/CookieJar.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[357]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[354-     * @param Microsoft_Http_Response $response HTTP Response object
355-     * @param Microsoft_Uri_Http|string $uri The requested URI
356-     * @return Microsoft_Http_CookieJar
357:     * @todo Add the $uri functionality.
358-     */
359-    public static function fromResponse(Microsoft_Http_Response $response, $ref_uri)
360-    {]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[94-    /**
95-     * Cookie object constructor
96-     *
97:     * @todo Add validation of each one of the parameters (legal domain, etc.)
98-     *
99-     * @param string $name
100-     * @param string $value]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[55]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[52- * redirections, as well as more advanced features like proxy settings, HTTP
53- * authentication and cookie persistance (using a Microsoft_Http_CookieJar object)
54- *
55: * @todo Implement proxy settings
56- * @category   Microsoft
57- * @package    Microsoft_Http
58- * @subpackage Client]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1387]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[1384-
1385-            //case self::AUTH_DIGEST:
1386-                /**
1387:                 * @todo Implement digest authentication
1388-                 */
1389-            //    break;
1390-]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Packer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[36]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[33-class Minify_Packer {
34-    public static function minify($code, $options = array())
35-    {
36:        // @todo: set encoding options based on $options :)
37-        $packer = new JavascriptPacker($code, 'Normal', true, false);
38-        return trim($packer->pack());
39-    }]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/HTML.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[118]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[115-            ,$this->_html);
116-
117-        // trim each line.
118:        // @todo take into account attribute values that span multiple lines.
119-        $this->_html = preg_replace('/^\\s+|\\s+$/m', '', $this->_html);
120-
121-        // remove ws around block/undisplayed elements]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Page.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[39]]></line_number>
		<match><![CDATA[@todo]]></match>
		<name><![CDATA[@todo]]></name>
		<snippet><![CDATA[36-     * 'minifyAll': should all CSS and Javascript blocks be individually
37-     * minified? (default false)
38-     *
39:     * @todo Add 'file' option to read HTML file.
40-     */
41-    public function setupSources($options) {
42-        if (isset($options['file'])) {]]></snippet>
		<group><![CDATA[developer_notes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[12- *   #       call the CF_Authentication instance's 'ssl_use_cabundle()' method.
13- *   #
14: *   $auth = new CF_Authentication($username, $api_key);
15- *   # $auth->ssl_use_cabundle();  # bypass cURL's old CA bundle
16- *   $auth->authenticate();
17- *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[90]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[87- * <code>
88- * # Create the authentication instance
89- * #
90: * $auth = new CF_Authentication("username", "api_key");
91- *
92- * # NOTE: For UK Customers please specify your AuthURL Manually
93- * # There is a Predfined constant to use EX:
94- * #
95: * # $auth = new CF_Authentication("username, "api_key", NULL, UK_AUTHURL);
96- * # Using the UK_AUTHURL keyword will force the api to use the UK AuthUrl.
97- * # rather then the US one. The NULL Is passed for legacy purposes and must
98- * # be passed to function correctly.]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[117]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[114-class CF_Authentication
115-{
116-    public $dbug;
117:    public $username;
118-    public $api_key;
119-    public $auth_host;
120-    public $account;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[132]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[129-    /**
130-     * Class constructor (PHP 5 syntax)
131-     *
132:     * @param string $username Mosso username
133-     * @param string $api_key Mosso API Access Key
134-     * @param string $account  <i>Account name</i>
135-     * @param string $auth_host  <i>Authentication service URI</i>
136-     */
137:    function __construct($username=NULL, $api_key=NULL, $account=NULL, $auth_host=US_AUTHURL)
138-    {
139-
140-        $this->dbug = False;
141:        $this->username = $username;
142-        $this->api_key = $api_key;
143-        $this->account_name = $account;
144-        $this->auth_host = $auth_host;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[190]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[187-     * <code>
188-     * # Create the authentication instance
189-     * #
190:     * $auth = new CF_Authentication("username", "api_key");
191-     *
192-     * # Perform authentication request
193-     * #]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[205]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[202-    function authenticate($version=DEFAULT_CF_API_VERSION)
203-    {
204-        list($status,$reason,$surl,$curl,$atoken) =
205:                $this->cfs_http->authenticate($this->username, $this->api_key,
206-                $this->account_name, $this->auth_host);
207-
208-        if ($status == 401) {
209:            throw new AuthenticationException("Invalid username or access key.");
210-        }
211-        if ($status != 204) {
212-            throw new InvalidResponseException(]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[320]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[317- * <code>
318- * # Create the authentication instance
319- * #
320: * $auth = new CF_Authentication("username", "api_key");
321- *
322- * # Perform authentication request
323- * #]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[354]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[351-     * <code>
352-     * # Create the authentication instance
353-     * #
354:     * $auth = new CF_Authentication("username", "api_key");
355-     *
356-     * # Perform authentication request
357-     * #]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[893]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[890-    #private function _re_auth()
891-    #{
892-    #    $new_auth = new CF_Authentication(
893:    #        $this->cfs_auth->username,
894-    #        $this->cfs_auth->api_key,
895-    #        $this->cfs_auth->auth_host,
896-    #        $this->cfs_auth->account);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1573]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[1570-    #private function _re_auth()
1571-    #{
1572-    #    $new_auth = new CF_Authentication(
1573:    #        $this->cfs_auth->username,
1574-    #        $this->cfs_auth->api_key,
1575-    #        $this->cfs_auth->auth_host,
1576-    #        $this->cfs_auth->account);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2129]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[2126-    #private function _re_auth()
2127-    #{
2128-    #    $new_auth = new CF_Authentication(
2129:    #        $this->cfs_auth->username,
2130-    #        $this->cfs_auth->api_key,
2131-    #        $this->cfs_auth->auth_host,
2132-    #        $this->cfs_auth->account);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[535]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[532-                if ( !$this->dbh ) {
533-                        $this->bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
534-<h1>Error establishing a database connection</h1>
535:<p>This either means that the username and password information in your <code>wp-config.php</code> file is incorrect or we can't contact the database server at <code>%s</code>. This could mean your host's database server is down.</p>
536-<ul>
537:        <li>Are you sure you have the correct username and password?</li>
538-        <li>Are you sure that you have typed the correct hostname?</li>
539-        <li>Are you sure that the database server is running?</li>
540-</ul>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[760]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[757-                        $this->ready = false;
758-                        $this->bail( sprintf( /*WP_I18N_DB_SELECT_DB*/'
759-<h1>Can&#8217;t select database</h1>
760:<p>We were able to connect to the database server (which means your username and password is okay) but not able to select the <code>%1$s</code> database.</p>
761-<ul>
762-<li>Are you sure it exists?</li>
763-<li>Does the user <code>%2$s</code> have permission to use the <code>%1$s</code> database?</li>
764:<li>On some systems the name of your database is prefixed with your username, so it would be like <code>username_%1$s</code>. Could that be the problem?</li>
765-</ul>
766-<p>If you don\'t know how to set up a database you should <strong>contact your host</strong>. If all else fails you may find help at the <a href="http://wordpress.org/support/">WordPress Support Forums</a>.</p>'/*/WP_I18N_DB_SELECT_DB*/, $db, $this->dbuser ), 'db_select_fail' );
767-                        return;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1063]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[1060-                if (!$this->$dbhname ) {
1061-                        $this->bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
1062-<h1>Error establishing a database connection</h1>
1063:<p>This either means that the username and password information in your <code>wp-config.php</code> file is incorrect or we can't contact the database server at <code>%s</code>. This could mean your host's database server is down.</p>
1064-<ul>
1065:        <li>Are you sure you have the correct username and password?</li>
1066-        <li>Are you sure that you have typed the correct hostname?</li>
1067-        <li>Are you sure that the database server is running?</li>
1068-</ul>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[226]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[223-        'cdn.netdna.apikey' => 'string',
224-        'cdn.netdna.domain' => 'array',
225-        'cdn.netdna.ssl' => 'string',
226:        'cdn.cotendo.username' => 'string',
227-        'cdn.cotendo.password' => 'string',
228-        'cdn.cotendo.zones' => 'array',
229-        'cdn.cotendo.domain' => 'array',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[586]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[583-        'cdn.netdna.apikey' => '',
584-        'cdn.netdna.domain' => array(),
585-        'cdn.netdna.ssl' => 'auto',
586:        'cdn.cotendo.username' => '',
587-        'cdn.cotendo.password' => '',
588-        'cdn.cotendo.zones' => array(),
589-        'cdn.cotendo.domain' => array(),]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[367]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[364-
365-                case 'cotendo':
366-                    $engine_config = array(
367:                        'username' => $this->_config->get_string('cdn.cotendo.username'),
368-                        'password' => $this->_config->get_string('cdn.cotendo.password'),
369-                        'zones' => $this->_config->get_array('cdn.cotendo.zones'),
370-                        'domain' => $this->_config->get_array('cdn.cotendo.domain'),]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1714]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[1711-
1712-                case 'cotendo':
1713-                    $engine_config = array(
1714:                        'username' => $this->_config->get_string('cdn.cotendo.username'),
1715-                        'password' => $this->_config->get_string('cdn.cotendo.password'),
1716-                        'zones' => $this->_config->get_array('cdn.cotendo.zones'),
1717-                        'domain' => $this->_config->get_array('cdn.cotendo.domain'),]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[27]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[24-     */
25-    function __construct($config = array()) {
26-        $config = array_merge(array(
27:            'username' => '',
28-            'password' => '',
29-            'zones' => array(),
30-        ), $config);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[49-     * @return boolean
50-     */
51-    function purge($files, &$results) {
52:        if (empty($this->_config['username'])) {
53:            $results = $this->_get_results($files, W3TC_CDN_RESULT_HALT, 'Empty username.');
54-
55-            return false;
56-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[86]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[83-        }
84-
85-        $client->authtype = 'basic';
86:        $client->username = $this->_config['username'];
87-        $client->password = $this->_config['password'];
88-        $client->forceEndpoint = W3TC_CDN_MIRROR_COTENDO_ENDPOINT;
89-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Rscf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[72]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[69-     */
70-    function _init(&$error) {
71-        if (empty($this->_config['user'])) {
72:            $error = 'Empty username.';
73-
74-            return false;
75-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[180]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[177-     * HTTP Authentication settings
178-     *
179-     * Expected to be an associative array with this structure:
180:     * $this->auth = array('user' => 'username', 'password' => 'password', 'type' => 'basic')
181-     * Where 'type' should be one of the supported authentication types (see the AUTH_*
182-     * constants), for example 'basic' or 'digest'.
183-     *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[274]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[271-            throw new Microsoft_Http_Client_Exception('Passed parameter is not a valid HTTP URI.');
272-        }
273-
274:        // Set auth if username and password has been specified in the uri
275-        if ($uri->getUsername() && $uri->getPassword()) {
276-            $this->setAuth($uri->getUsername(), $uri->getPassword());
277-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[51]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[48-    const CHAR_UNWISE   = '{}|\\\\^`';
49-
50-    /**
51:     * HTTP username
52-     *
53-     * @var string
54-     */
55:    protected $_username = '';
56-
57-    /**
58-     * HTTP password]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[216]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[213-        $this->_query    = isset($matches[6]) === true ? $matches[6] : '';
214-        $this->_fragment = isset($matches[8]) === true ? $matches[8] : '';
215-
216:        // Additional decomposition to get username, password, host, and port
217-        $combo   = isset($matches[3]) === true ? $matches[3] : '';
218-        $pattern = '~^(([^:@]*)(:([^@]*))?@)?([^:]+)(:(.*))?$~';
219-        $status  = @preg_match($pattern, $combo, $matches);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[231]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[228-        }
229-
230-        // Save remaining URI components
231:        $this->_username = isset($matches[2]) === true ? $matches[2] : '';
232-        $this->_password = isset($matches[4]) === true ? $matches[4] : '';
233-        $this->_host     = isset($matches[5]) === true ? $matches[5] : '';
234-        $this->_port     = isset($matches[7]) === true ? $matches[7] : '';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[253]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[250-        }
251-
252-        $password = strlen($this->_password) > 0 ? ":$this->_password" : '';
253:        $auth     = strlen($this->_username) > 0 ? "$this->_username$password@" : '';
254-        $port     = strlen($this->_port) > 0 ? ":$this->_port" : '';
255-        $query    = strlen($this->_query) > 0 ? "?$this->_query" : '';
256-        $fragment = strlen($this->_fragment) > 0 ? "#$this->_fragment" : '';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[287]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[284-    }
285-
286-    /**
287:     * Returns the username portion of the URL, or FALSE if none.
288-     *
289-     * @return string
290-     */
291-    public function getUsername()
292-    {
293:        return strlen($this->_username) > 0 ? $this->_username : false;
294-    }
295-
296-    /**
297:     * Returns true if and only if the username passes validation. If no username is passed,
298:     * then the username contained in the instance variable is used.
299-     *
300:     * @param  string $username The HTTP username
301:     * @throws Microsoft_Uri_Exception When username validation fails
302-     * @return boolean
303-     * @link   http://www.faqs.org/rfcs/rfc2396.html
304-     */
305:    public function validateUsername($username = null)
306-    {
307:        if ($username === null) {
308:            $username = $this->_username;
309-        }
310-
311:        // If the username is empty, then it is considered valid
312:        if (strlen($username) === 0) {
313-            return true;
314-        }
315-
316:        // Check the username against the allowed values
317-        $status = @preg_match('/^(?:' . $this->_regex['escaped'] . '|[' .
318:            self::CHAR_ALNUM . self::CHAR_MARK . ';:&=+$,' . '])+$/', $username);
319-
320-        if ($status === false) {
321-            require_once 'Microsoft/Uri/Exception.php';
322:            throw new Microsoft_Uri_Exception('Internal error: username validation failed');
323-        }
324-
325-        return $status === 1;
326-    }
327-
328-    /**
329:     * Sets the username for the current URI, and returns the old username
330-     *
331:     * @param  string $username The HTTP username
332:     * @throws Microsoft_Uri_Exception When $username is not a valid HTTP username
333-     * @return string
334-     */
335:    public function setUsername($username)
336-    {
337:        if ($this->validateUsername($username) === false) {
338-            require_once 'Microsoft/Uri/Exception.php';
339:            throw new Microsoft_Uri_Exception("Username \"$username\" is not a valid HTTP username");
340-        }
341-
342:        $oldUsername     = $this->_username;
343:        $this->_username = $username;
344-
345-        return $oldUsername;
346-    }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[378]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[375-            return true;
376-        }
377-
378:        // If the password is nonempty, but there is no username, then it is considered invalid
379:        if (strlen($password) > 0 and strlen($this->_username) === 0) {
380-            return false;
381-        }
382-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Controller/Files.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[21]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[18- *     'files' => array(
19- *         '//js/jquery.js'
20- *         ,'//js/plugins.js'
21: *         ,'/home/username/file.js'
22- *     )
23- * ));
24- * </code>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[40]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[37-	var $ch_options = array();	// cURL custom options
38-	var $use_curl = false;		// force cURL use
39-	var $proxy = null;			// proxy information (associative array)
40:	var $username = '';
41-	var $password = '';
42-	var $authtype = '';
43-	var $digestRequest = array();]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[360]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[357-			}
358-		}
359-		if ($this->authtype && ($this->authtype != 'certificate')) {
360:			if ($this->username) {
361:				$this->debug('set cURL username/password');
362:				$this->setCurlOption(CURLOPT_USERPWD, "$this->username:$this->password");
363-			}
364-			if ($this->authtype == 'basic') {
365-				$this->debug('set cURL for Basic authentication');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[384]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[381-			} else {
382-				$this->setCurlOption(CURLOPT_PROXY, $this->proxy['host']);
383-			}
384:			if ($this->proxy['username'] || $this->proxy['password']) {
385-				$this->debug('set cURL proxy authentication options');
386:				$this->setCurlOption(CURLOPT_PROXYUSERPWD, $this->proxy['username'].':'.$this->proxy['password']);
387-				if ($this->proxy['authtype'] == 'basic') {
388-					$this->setCurlOption($CURLOPT_PROXYAUTH, $CURLAUTH_BASIC);
389-				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[462]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[459-	/**
460-	* if authenticating, set user credentials here
461-	*
462:	* @param    string $username
463-	* @param    string $password
464-	* @param	string $authtype (basic|digest|certificate|ntlm)
465-	* @param	array $digestRequest (keys must be nonce, nc, realm, qop)
466-	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
467-	* @access   public
468-	*/
469:	function setCredentials($username, $password, $authtype = 'basic', $digestRequest = array(), $certRequest = array()) {
470:		$this->debug("setCredentials username=$username authtype=$authtype digestRequest=");
471-		$this->appendDebug($this->varDump($digestRequest));
472-		$this->debug("certRequest=");
473-		$this->appendDebug($this->varDump($certRequest));
474-		// cf. RFC 2617
475-		if ($authtype == 'basic') {
476:			$this->setHeader('Authorization', 'Basic '.base64_encode(str_replace(':','',$username).':'.$password));
477-		} elseif ($authtype == 'digest') {
478-			if (isset($digestRequest['nonce'])) {
479-				$digestRequest['nc'] = isset($digestRequest['nc']) ? $digestRequest['nc']++ : 1;
480-
481-				// calculate the Digest hashes (calculate code based on digest implementation found at: http://www.rassoc.com/gregr/weblog/stories/2002/07/09/webServicesSecurityHttpDigestAuthenticationWithoutActiveDirectory.html)
482-
483:				// A1 = unq(username-value) ":" unq(realm-value) ":" passwd
484:				$A1 = $username. ':' . (isset($digestRequest['realm']) ? $digestRequest['realm'] : '') . ':' . $password;
485-
486-				// H(A1) = MD5(A1)
487-				$HA1 = md5($A1);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[522]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[519-					$opaque = ', opaque="' . $digestRequest['opaque'] . '"';
520-				}
521-
522:				$this->setHeader('Authorization', 'Digest username="' . $username . '", realm="' . $digestRequest['realm'] . '", nonce="' . $nonce . '", uri="' . $this->digest_uri . $opaque . '", cnonce="' . $cnonce . '", nc=' . sprintf("%08x", $digestRequest['nc']) . ', qop="' . $digestRequest['qop'] . '", response="' . $hashedDigest . '"');
523-			}
524-		} elseif ($authtype == 'certificate') {
525-			$this->certRequest = $certRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[531]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[528-			// do nothing
529-			$this->debug('Authorization header not set for ntlm');
530-		}
531:		$this->username = $username;
532-		$this->password = $password;
533-		$this->authtype = $authtype;
534-		$this->digestRequest = $digestRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[572]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[569-	*
570-	* @param    string $proxyhost use an empty string to remove proxy
571-	* @param    string $proxyport
572:	* @param	string $proxyusername
573-	* @param	string $proxypassword
574-	* @param	string $proxyauthtype (basic|ntlm)
575-	* @access   public
576-	*/
577:	function setProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '', $proxyauthtype = 'basic') {
578-		if ($proxyhost) {
579-			$this->proxy = array(
580-				'host' => $proxyhost,
581-				'port' => $proxyport,
582:				'username' => $proxyusername,
583-				'password' => $proxypassword,
584-				'authtype' => $proxyauthtype
585-			);
586:			if ($proxyusername != '' && $proxypassword != '' && $proxyauthtype = 'basic') {
587:				$this->setHeader('Proxy-Authorization', ' Basic '.base64_encode($proxyusername.':'.$proxypassword));
588-			}
589-		} else {
590-			$this->debug('remove proxy');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1079]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[1076-
1077-				// should have (at least) qop, realm, nonce
1078- 				if (isset($digestRequest['nonce'])) {
1079: 					$this->setCredentials($this->username, $this->password, 'digest', $digestRequest);
1080- 					$this->tryagain = true;
1081- 					return false;
1082- 				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2193]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[2190-	var $ch_options = array();	// cURL custom options
2191-	var $use_curl = false;		// force cURL use
2192-	var $proxy = null;			// proxy information (associative array)
2193:	var $username = '';
2194-	var $password = '';
2195-	var $authtype = '';
2196-	var $digestRequest = array();]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2513]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[2510-			}
2511-		}
2512-		if ($this->authtype && ($this->authtype != 'certificate')) {
2513:			if ($this->username) {
2514:				$this->debug('set cURL username/password');
2515:				$this->setCurlOption(CURLOPT_USERPWD, "$this->username:$this->password");
2516-			}
2517-			if ($this->authtype == 'basic') {
2518-				$this->debug('set cURL for Basic authentication');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2537]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[2534-			} else {
2535-				$this->setCurlOption(CURLOPT_PROXY, $this->proxy['host']);
2536-			}
2537:			if ($this->proxy['username'] || $this->proxy['password']) {
2538-				$this->debug('set cURL proxy authentication options');
2539:				$this->setCurlOption(CURLOPT_PROXYUSERPWD, $this->proxy['username'].':'.$this->proxy['password']);
2540-				if ($this->proxy['authtype'] == 'basic') {
2541-					$this->setCurlOption($CURLOPT_PROXYAUTH, $CURLAUTH_BASIC);
2542-				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2615]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[2612-	/**
2613-	* if authenticating, set user credentials here
2614-	*
2615:	* @param    string $username
2616-	* @param    string $password
2617-	* @param	string $authtype (basic|digest|certificate|ntlm)
2618-	* @param	array $digestRequest (keys must be nonce, nc, realm, qop)
2619-	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
2620-	* @access   public
2621-	*/
2622:	function setCredentials($username, $password, $authtype = 'basic', $digestRequest = array(), $certRequest = array()) {
2623:		$this->debug("setCredentials username=$username authtype=$authtype digestRequest=");
2624-		$this->appendDebug($this->varDump($digestRequest));
2625-		$this->debug("certRequest=");
2626-		$this->appendDebug($this->varDump($certRequest));
2627-		// cf. RFC 2617
2628-		if ($authtype == 'basic') {
2629:			$this->setHeader('Authorization', 'Basic '.base64_encode(str_replace(':','',$username).':'.$password));
2630-		} elseif ($authtype == 'digest') {
2631-			if (isset($digestRequest['nonce'])) {
2632-				$digestRequest['nc'] = isset($digestRequest['nc']) ? $digestRequest['nc']++ : 1;
2633-				
2634-				// calculate the Digest hashes (calculate code based on digest implementation found at: http://www.rassoc.com/gregr/weblog/stories/2002/07/09/webServicesSecurityHttpDigestAuthenticationWithoutActiveDirectory.html)
2635-	
2636:				// A1 = unq(username-value) ":" unq(realm-value) ":" passwd
2637:				$A1 = $username. ':' . (isset($digestRequest['realm']) ? $digestRequest['realm'] : '') . ':' . $password;
2638-	
2639-				// H(A1) = MD5(A1)
2640-				$HA1 = md5($A1);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2675]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[2672-					$opaque = ', opaque="' . $digestRequest['opaque'] . '"';
2673-				}
2674-
2675:				$this->setHeader('Authorization', 'Digest username="' . $username . '", realm="' . $digestRequest['realm'] . '", nonce="' . $nonce . '", uri="' . $this->digest_uri . $opaque . '", cnonce="' . $cnonce . '", nc=' . sprintf("%08x", $digestRequest['nc']) . ', qop="' . $digestRequest['qop'] . '", response="' . $hashedDigest . '"');
2676-			}
2677-		} elseif ($authtype == 'certificate') {
2678-			$this->certRequest = $certRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2684]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[2681-			// do nothing
2682-			$this->debug('Authorization header not set for ntlm');
2683-		}
2684:		$this->username = $username;
2685-		$this->password = $password;
2686-		$this->authtype = $authtype;
2687-		$this->digestRequest = $digestRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2725]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[2722-	*
2723-	* @param    string $proxyhost use an empty string to remove proxy
2724-	* @param    string $proxyport
2725:	* @param	string $proxyusername
2726-	* @param	string $proxypassword
2727-	* @param	string $proxyauthtype (basic|ntlm)
2728-	* @access   public
2729-	*/
2730:	function setProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '', $proxyauthtype = 'basic') {
2731-		if ($proxyhost) {
2732-			$this->proxy = array(
2733-				'host' => $proxyhost,
2734-				'port' => $proxyport,
2735:				'username' => $proxyusername,
2736-				'password' => $proxypassword,
2737-				'authtype' => $proxyauthtype
2738-			);
2739:			if ($proxyusername != '' && $proxypassword != '' && $proxyauthtype = 'basic') {
2740:				$this->setHeader('Proxy-Authorization', ' Basic '.base64_encode($proxyusername.':'.$proxypassword));
2741-			}
2742-		} else {
2743-			$this->debug('remove proxy');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3232]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[3229-
3230-				// should have (at least) qop, realm, nonce
3231- 				if (isset($digestRequest['nonce'])) {
3232: 					$this->setCredentials($this->username, $this->password, 'digest', $digestRequest);
3233- 					$this->tryagain = true;
3234- 					return false;
3235- 				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4628]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[4625-	// for getting wsdl
4626-	var $proxyhost = '';
4627-    var $proxyport = '';
4628:	var $proxyusername = '';
4629-	var $proxypassword = '';
4630-	var $timeout = 0;
4631-	var $response_timeout = 30;
4632-	var $curl_options = array();	// User-specified cURL options
4633-	var $use_curl = false;			// whether to always try to use cURL
4634-	// for HTTP authentication
4635:	var $username = '';				// Username for HTTP authentication
4636-	var $password = '';				// Password for HTTP authentication
4637-	var $authtype = '';				// Type of HTTP authentication
4638-	var $certRequest = array();		// Certificate for HTTP SSL authentication]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4646]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[4643-     * @param string $wsdl WSDL document URL
4644-	 * @param string $proxyhost
4645-	 * @param string $proxyport
4646:	 * @param string $proxyusername
4647-	 * @param string $proxypassword
4648-	 * @param integer $timeout set the connection timeout
4649-	 * @param integer $response_timeout set the response timeout]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4654]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[4651-	 * @param boolean $use_curl try to use cURL
4652-     * @access public 
4653-     */
4654:    function wsdl($wsdl = '',$proxyhost=false,$proxyport=false,$proxyusername=false,$proxypassword=false,$timeout=0,$response_timeout=30,$curl_options=null,$use_curl=false){
4655-		parent::nusoap_base();
4656-		$this->debug("ctor wsdl=$wsdl timeout=$timeout response_timeout=$response_timeout");
4657-        $this->proxyhost = $proxyhost;
4658-        $this->proxyport = $proxyport;
4659:		$this->proxyusername = $proxyusername;
4660-		$this->proxypassword = $proxypassword;
4661-		$this->timeout = $timeout;
4662-		$this->response_timeout = $response_timeout;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4796]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[4793-			$tr->request_method = 'GET';
4794-			$tr->useSOAPAction = false;
4795-			if($this->proxyhost && $this->proxyport){
4796:				$tr->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
4797-			}
4798-			if ($this->authtype != '') {
4799:				$tr->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);
4800-			}
4801-			$tr->setEncoding('gzip, deflate');
4802-			$wsdl_string = $tr->send('', $this->timeout, $this->response_timeout);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5138]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[5135-	/**
5136-	* if authenticating, set user credentials here
5137-	*
5138:	* @param    string $username
5139-	* @param    string $password
5140-	* @param	string $authtype (basic|digest|certificate|ntlm)
5141-	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
5142-	* @access   public
5143-	*/
5144:	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {
5145:		$this->debug("setCredentials username=$username authtype=$authtype certRequest=");
5146-		$this->appendDebug($this->varDump($certRequest));
5147:		$this->username = $username;
5148-		$this->password = $password;
5149-		$this->authtype = $authtype;
5150-		$this->certRequest = $certRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7185]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[7182-*/
7183-class nusoap_client extends nusoap_base  {
7184-
7185:	var $username = '';				// Username for HTTP authentication
7186-	var $password = '';				// Password for HTTP authentication
7187-	var $authtype = '';				// Type of HTTP authentication
7188-	var $certRequest = array();		// Certificate for HTTP SSL authentication]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7197]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[7194-	var $forceEndpoint = '';		// overrides WSDL endpoint
7195-    var $proxyhost = '';
7196-    var $proxyport = '';
7197:	var $proxyusername = '';
7198-	var $proxypassword = '';
7199-	var $portName = '';				// port name to use in WSDL
7200-    var $xml_encoding = '';			// character set encoding of incoming (response) messages]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7248]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[7245-	* @param    mixed $wsdl optional, set to 'wsdl' or true if using WSDL
7246-	* @param    string $proxyhost optional
7247-	* @param    string $proxyport optional
7248:	* @param	string $proxyusername optional
7249-	* @param	string $proxypassword optional
7250-	* @param	integer $timeout set the connection timeout
7251-	* @param	integer $response_timeout set the response timeout
7252-	* @param	string $portName optional portName in WSDL document
7253-	* @access   public
7254-	*/
7255:	function nusoap_client($endpoint,$wsdl = false,$proxyhost = false,$proxyport = false,$proxyusername = false, $proxypassword = false, $timeout = 0, $response_timeout = 30, $portName = ''){
7256-		parent::nusoap_base();
7257-		$this->endpoint = $endpoint;
7258-		$this->proxyhost = $proxyhost;
7259-		$this->proxyport = $proxyport;
7260:		$this->proxyusername = $proxyusername;
7261-		$this->proxypassword = $proxypassword;
7262-		$this->timeout = $timeout;
7263-		$this->response_timeout = $response_timeout;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7532]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[7529-	 */
7530-	function loadWSDL() {
7531-		$this->debug('instantiating wsdl class with doc: '.$this->wsdlFile);
7532:		$this->wsdl = new wsdl('',$this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword,$this->timeout,$this->response_timeout,$this->curl_options,$this->use_curl);
7533:		$this->wsdl->setCredentials($this->username, $this->password, $this->authtype, $this->certRequest);
7534-		$this->wsdl->fetchWSDL($this->wsdlFile);
7535-		$this->checkWSDL();
7536-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7589]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[7586-				$http->setContentType($this->getHTTPContentType(), $this->getHTTPContentTypeCharset());
7587-				$http->setSOAPAction($soapaction);
7588-				if($this->proxyhost && $this->proxyport){
7589:					$http->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
7590-				}
7591-                if($this->authtype != '') {
7592:					$http->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);
7593-				}
7594-				if($this->http_encoding != ''){
7595-					$http->setEncoding($this->http_encoding);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7760]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[7757-	*
7758-	* @param    string $proxyhost
7759-	* @param    string $proxyport
7760:	* @param	string $proxyusername
7761-	* @param	string $proxypassword
7762-	* @access   public
7763-	*/
7764:	function setHTTPProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '') {
7765-		$this->proxyhost = $proxyhost;
7766-		$this->proxyport = $proxyport;
7767:		$this->proxyusername = $proxyusername;
7768-		$this->proxypassword = $proxypassword;
7769-	}
7770-
7771-	/**
7772-	* if authenticating, set user credentials here
7773-	*
7774:	* @param    string $username
7775-	* @param    string $password
7776-	* @param	string $authtype (basic|digest|certificate|ntlm)
7777-	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
7778-	* @access   public
7779-	*/
7780:	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {
7781:		$this->debug("setCredentials username=$username authtype=$authtype certRequest=");
7782-		$this->appendDebug($this->varDump($certRequest));
7783:		$this->username = $username;
7784-		$this->password = $password;
7785-		$this->authtype = $authtype;
7786-		$this->certRequest = $certRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7878]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[7875-		$proxy->defaultRpcParams = $this->defaultRpcParams;
7876-		// transfer other state
7877-		$proxy->soap_defencoding = $this->soap_defencoding;
7878:		$proxy->username = $this->username;
7879-		$proxy->password = $this->password;
7880-		$proxy->authtype = $this->authtype;
7881-		$proxy->certRequest = $this->certRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7887]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[7884-		$proxy->forceEndpoint = $this->forceEndpoint;
7885-		$proxy->proxyhost = $this->proxyhost;
7886-		$proxy->proxyport = $this->proxyport;
7887:		$proxy->proxyusername = $this->proxyusername;
7888-		$proxy->proxypassword = $this->proxypassword;
7889-		$proxy->http_encoding = $this->http_encoding;
7890-		$proxy->timeout = $this->timeout;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[47]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[44-	// for getting wsdl
45-	var $proxyhost = '';
46-    var $proxyport = '';
47:	var $proxyusername = '';
48-	var $proxypassword = '';
49-	var $timeout = 0;
50-	var $response_timeout = 30;
51-	var $curl_options = array();	// User-specified cURL options
52-	var $use_curl = false;			// whether to always try to use cURL
53-	// for HTTP authentication
54:	var $username = '';				// Username for HTTP authentication
55-	var $password = '';				// Password for HTTP authentication
56-	var $authtype = '';				// Type of HTTP authentication
57-	var $certRequest = array();		// Certificate for HTTP SSL authentication]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[62-     * @param string $wsdl WSDL document URL
63-	 * @param string $proxyhost
64-	 * @param string $proxyport
65:	 * @param string $proxyusername
66-	 * @param string $proxypassword
67-	 * @param integer $timeout set the connection timeout
68-	 * @param integer $response_timeout set the response timeout]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[70-	 * @param boolean $use_curl try to use cURL
71-     * @access public
72-     */
73:    function wsdl($wsdl = '',$proxyhost=false,$proxyport=false,$proxyusername=false,$proxypassword=false,$timeout=0,$response_timeout=30,$curl_options=null,$use_curl=false){
74-		parent::nusoap_base();
75-		$this->debug("ctor wsdl=$wsdl timeout=$timeout response_timeout=$response_timeout");
76-        $this->proxyhost = $proxyhost;
77-        $this->proxyport = $proxyport;
78:		$this->proxyusername = $proxyusername;
79-		$this->proxypassword = $proxypassword;
80-		$this->timeout = $timeout;
81-		$this->response_timeout = $response_timeout;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[215]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[212-			$tr->request_method = 'GET';
213-			$tr->useSOAPAction = false;
214-			if($this->proxyhost && $this->proxyport){
215:				$tr->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
216-			}
217-			if ($this->authtype != '') {
218:				$tr->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);
219-			}
220-			$tr->setEncoding('gzip, deflate');
221-			$wsdl_string = $tr->send('', $this->timeout, $this->response_timeout);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[557]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[554-	/**
555-	* if authenticating, set user credentials here
556-	*
557:	* @param    string $username
558-	* @param    string $password
559-	* @param	string $authtype (basic|digest|certificate|ntlm)
560-	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
561-	* @access   public
562-	*/
563:	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {
564:		$this->debug("setCredentials username=$username authtype=$authtype certRequest=");
565-		$this->appendDebug($this->varDump($certRequest));
566:		$this->username = $username;
567-		$this->password = $password;
568-		$this->authtype = $authtype;
569-		$this->certRequest = $certRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[29]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[26-*/
27-class nusoap_client extends nusoap_base  {
28-
29:	var $username = '';				// Username for HTTP authentication
30-	var $password = '';				// Password for HTTP authentication
31-	var $authtype = '';				// Type of HTTP authentication
32-	var $certRequest = array();		// Certificate for HTTP SSL authentication]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[38-	var $forceEndpoint = '';		// overrides WSDL endpoint
39-    var $proxyhost = '';
40-    var $proxyport = '';
41:	var $proxyusername = '';
42-	var $proxypassword = '';
43-	var $portName = '';				// port name to use in WSDL
44-    var $xml_encoding = '';			// character set encoding of incoming (response) messages]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[92]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[89-	* @param    mixed $wsdl optional, set to 'wsdl' or true if using WSDL
90-	* @param    string $proxyhost optional
91-	* @param    string $proxyport optional
92:	* @param	string $proxyusername optional
93-	* @param	string $proxypassword optional
94-	* @param	integer $timeout set the connection timeout
95-	* @param	integer $response_timeout set the response timeout
96-	* @param	string $portName optional portName in WSDL document
97-	* @access   public
98-	*/
99:	function nusoap_client($endpoint,$wsdl = false,$proxyhost = false,$proxyport = false,$proxyusername = false, $proxypassword = false, $timeout = 0, $response_timeout = 30, $portName = ''){
100-		parent::nusoap_base();
101-		$this->endpoint = $endpoint;
102-		$this->proxyhost = $proxyhost;
103-		$this->proxyport = $proxyport;
104:		$this->proxyusername = $proxyusername;
105-		$this->proxypassword = $proxypassword;
106-		$this->timeout = $timeout;
107-		$this->response_timeout = $response_timeout;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[376]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[373-	 */
374-	function loadWSDL() {
375-		$this->debug('instantiating wsdl class with doc: '.$this->wsdlFile);
376:		$this->wsdl = new wsdl('',$this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword,$this->timeout,$this->response_timeout,$this->curl_options,$this->use_curl);
377:		$this->wsdl->setCredentials($this->username, $this->password, $this->authtype, $this->certRequest);
378-		$this->wsdl->fetchWSDL($this->wsdlFile);
379-		$this->checkWSDL();
380-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[433]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[430-				$http->setContentType($this->getHTTPContentType(), $this->getHTTPContentTypeCharset());
431-				$http->setSOAPAction($soapaction);
432-				if($this->proxyhost && $this->proxyport){
433:					$http->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
434-				}
435-                if($this->authtype != '') {
436:					$http->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);
437-				}
438-				if($this->http_encoding != ''){
439-					$http->setEncoding($this->http_encoding);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[604]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[601-	*
602-	* @param    string $proxyhost
603-	* @param    string $proxyport
604:	* @param	string $proxyusername
605-	* @param	string $proxypassword
606-	* @access   public
607-	*/
608:	function setHTTPProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '') {
609-		$this->proxyhost = $proxyhost;
610-		$this->proxyport = $proxyport;
611:		$this->proxyusername = $proxyusername;
612-		$this->proxypassword = $proxypassword;
613-	}
614-
615-	/**
616-	* if authenticating, set user credentials here
617-	*
618:	* @param    string $username
619-	* @param    string $password
620-	* @param	string $authtype (basic|digest|certificate|ntlm)
621-	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
622-	* @access   public
623-	*/
624:	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {
625:		$this->debug("setCredentials username=$username authtype=$authtype certRequest=");
626-		$this->appendDebug($this->varDump($certRequest));
627:		$this->username = $username;
628-		$this->password = $password;
629-		$this->authtype = $authtype;
630-		$this->certRequest = $certRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[722]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[719-		$proxy->defaultRpcParams = $this->defaultRpcParams;
720-		// transfer other state
721-		$proxy->soap_defencoding = $this->soap_defencoding;
722:		$proxy->username = $this->username;
723-		$proxy->password = $this->password;
724-		$proxy->authtype = $this->authtype;
725-		$proxy->certRequest = $this->certRequest;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[731]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[728-		$proxy->forceEndpoint = $this->forceEndpoint;
729-		$proxy->proxyhost = $this->proxyhost;
730-		$proxy->proxyport = $this->proxyport;
731:		$proxy->proxyusername = $this->proxyusername;
732-		$proxy->proxypassword = $this->proxypassword;
733-		$proxy->http_encoding = $this->http_encoding;
734-		$proxy->timeout = $this->timeout;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[1-<?php if (!defined('W3TC')) die(); ?>
2-<tr>
3:    <th style="width: 300px;"><label for="cdn_cotendo_username">Username:</label></th>
4-    <td>
5:        <input id="cdn_cotendo_username" class="w3tc-ignore-change" type="text" name="cdn.cotendo.username" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.cotendo.username')); ?>" size="60" />
6-    </td>
7-</tr>
8-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[17]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[14-	</td>
15-</tr>
16-<tr>
17:	<th><label for="cdn_ftp_user"><acronym title="File Transfer Protocol">FTP</acronym> username:</label></th>
18-	<td>
19-		<input id="cdn_ftp_user" class="w3tc-ignore-change" type="text" name="cdn.ftp.user" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.ftp.user')); ?>" size="30" />
20-	</td>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[342]]></line_number>
		<match><![CDATA[username]]></match>
		<name><![CDATA[username]]></name>
		<snippet><![CDATA[339-
340-        <?php echo $this->postbox_header('Network Performance &amp; Security powered by CloudFlare'); ?>
341-        <p>
342:            CloudFlare protects and accelerates websites. <a href="https://www.cloudflare.com/sign-up.html?affiliate=w3edge&amp;seed_domain=<?php echo w3_get_host(); ?>&amp;email=<?php echo htmlspecialchars($cloudflare_signup_email); ?>&amp;username=<?php echo htmlspecialchars($cloudflare_signup_user); ?>" target="_blank">Sign up now for free</a> to get started,
343-            or if you have an account simply log in to obtain your <acronym title="Application Programming Interface">API</acronym> key from the <a href="https://www.cloudflare.com/my-account.html">account page</a> to enter it below.
344-            Contact the CloudFlare <a href="http://www.cloudflare.com/help.html" target="_blank">support team</a> with any questions.
345-        </p>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[466]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[464-         *
465-         * @param string $dbuser MySQL database user
466:         * @param string $dbpassword MySQL database password
467-         * @param string $dbname MySQL database name
468-         * @param string $dbhost MySQL database host
469-         */
470:        function wpdb( $dbuser, $dbpassword, $dbname, $dbhost ) {
471-                if( defined( 'WP_USE_MULTIPLE_DB' ) && WP_USE_MULTIPLE_DB )
472-                        $this->db_connect();
473:                return $this->__construct( $dbuser, $dbpassword, $dbname, $dbhost );
474-        }
475-
476-        /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[487]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[484-         * @since 2.0.8
485-         *
486-         * @param string $dbuser MySQL database user
487:         * @param string $dbpassword MySQL database password
488-         * @param string $dbname MySQL database name
489-         * @param string $dbhost MySQL database host
490-         */
491:        function __construct( $dbuser, $dbpassword, $dbname, $dbhost ) {
492-                register_shutdown_function( array( &$this, '__destruct' ) );
493-
494-                if ( WP_DEBUG )]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[528]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[525-                        $dbhost = trim(str_replace("\\\\", "\\", $dbhost));
526-                }
527-
528:                $this->dbh = mssql_connect($dbhost, $dbuser, $dbpassword);
529-                mssql_min_error_severity(0);
530-                mssql_min_message_severity(17);
531-
532-                if ( !$this->dbh ) {
533-                        $this->bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
534-<h1>Error establishing a database connection</h1>
535:<p>This either means that the username and password information in your <code>wp-config.php</code> file is incorrect or we can't contact the database server at <code>%s</code>. This could mean your host's database server is down.</p>
536-<ul>
537:        <li>Are you sure you have the correct username and password?</li>
538-        <li>Are you sure that you have typed the correct hostname?</li>
539-        <li>Are you sure that the database server is running?</li>
540-</ul>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[760]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[757-                        $this->ready = false;
758-                        $this->bail( sprintf( /*WP_I18N_DB_SELECT_DB*/'
759-<h1>Can&#8217;t select database</h1>
760:<p>We were able to connect to the database server (which means your username and password is okay) but not able to select the <code>%1$s</code> database.</p>
761-<ul>
762-<li>Are you sure it exists?</li>
763-<li>Does the user <code>%2$s</code> have permission to use the <code>%1$s</code> database?</li>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1058]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[1055-                }
1056-
1057-                $dbhname = "dbh" . $action;
1058:                $this->$dbhname = @mssql_connect( $details[ 'db_host' ], $details[ 'db_user' ], $details[ 'db_password' ] );
1059-
1060-                if (!$this->$dbhname ) {
1061-                        $this->bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
1062-<h1>Error establishing a database connection</h1>
1063:<p>This either means that the username and password information in your <code>wp-config.php</code> file is incorrect or we can't contact the database server at <code>%s</code>. This could mean your host's database server is down.</p>
1064-<ul>
1065:        <li>Are you sure you have the correct username and password?</li>
1066-        <li>Are you sure that you have typed the correct hostname?</li>
1067-        <li>Are you sure that the database server is running?</li>
1068-</ul>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[88]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[85-
86-    /*
87-     * @param string $dbuser
88:     * @param string $dbpassword
89-     * @param string $dbname
90-     * @param string $dbhost
91-     */
92:    function __construct($dbuser, $dbpassword, $dbname, $dbhost) {
93-        $this->_config = & w3_instance('W3_Config');
94-        $this->_lifetime = $this->_config->get_integer('dbcache.lifetime');
95-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[103]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[100-            ));
101-        }
102-
103:        parent::__construct($dbuser, $dbpassword, $dbname, $dbhost);
104-    }
105-
106-    /**
107-     * PHP4 constructor
108-     *
109-     * @param string $dbuser
110:     * @param string $dbpassword
111-     * @param string $dbname
112-     * @param string $dbhost
113-     */
114:    function W3_Db($dbuser, $dbpassword, $dbname, $dbhost) {
115:        $this->__construct($dbuser, $dbpassword, $dbname, $dbhost);
116-    }
117-
118-    /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[227]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[224-        'cdn.netdna.domain' => 'array',
225-        'cdn.netdna.ssl' => 'string',
226-        'cdn.cotendo.username' => 'string',
227:        'cdn.cotendo.password' => 'string',
228-        'cdn.cotendo.zones' => 'array',
229-        'cdn.cotendo.domain' => 'array',
230-        'cdn.cotendo.ssl' => 'string',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[587]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[584-        'cdn.netdna.domain' => array(),
585-        'cdn.netdna.ssl' => 'auto',
586-        'cdn.cotendo.username' => '',
587:        'cdn.cotendo.password' => '',
588-        'cdn.cotendo.zones' => array(),
589-        'cdn.cotendo.domain' => array(),
590-        'cdn.cotendo.ssl' => 'auto',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[662]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[659-            'support_request_subject' => 'Please enter subject in the subject field.',
660-            'support_request_description' => 'Please describe the issue in the issue description field.',
661-            'support_request_wp_login' => 'Please enter an administrator login. Create a temporary one just for this support case if needed.',
662:            'support_request_wp_password' => 'Please enter WP Admin password, be sure it\'s spelled correctly.',
663-            'support_request_ftp_host' => 'Please enter <acronym title="Secure Shell">SSH</acronym> or <acronym title="File Transfer Protocol">FTP</acronym> host for the site.',
664-            'support_request_ftp_login' => 'Please enter <acronym title="Secure Shell">SSH</acronym> or <acronym title="File Transfer Protocol">FTP</acronym> login for the server. Create a temporary one just for this support case if needed.',
665:            'support_request_ftp_password' => 'Please enter <acronym title="Secure Shell">SSH</acronym> or <acronym title="File Transfer Protocol">FTP</acronym> password for the <acronym title="File Transfer Protocol">FTP</acronym> account.',
666-            'support_request' => 'Unable to send the support request.',
667-            'config_import_no_file' => 'Please select config file.',
668-            'config_import_upload' => 'Unable to upload config file.',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2222]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2219-        $templates = W3_Request::get_array('templates');
2220-        $forum_url = W3_Request::get_string('forum_url');
2221-        $wp_login = W3_Request::get_string('wp_login');
2222:        $wp_password = W3_Request::get_string('wp_password');
2223-        $ftp_host = W3_Request::get_string('ftp_host');
2224-        $ftp_login = W3_Request::get_string('ftp_login');
2225:        $ftp_password = W3_Request::get_string('ftp_password');
2226-
2227-        include W3TC_INC_DIR . '/options/support/form.php';
2228-    }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2251]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2248-        $templates = W3_Request::get_array('templates');
2249-        $forum_url = W3_Request::get_string('forum_url');
2250-        $wp_login = W3_Request::get_string('wp_login');
2251:        $wp_password = W3_Request::get_string('wp_password');
2252-        $ftp_host = W3_Request::get_string('ftp_host');
2253-        $ftp_login = W3_Request::get_string('ftp_login');
2254:        $ftp_password = W3_Request::get_string('ftp_password');
2255-
2256-        $params = array(
2257-            'request_type' => $request_type,]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2268]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2265-            'description' => $description,
2266-            'forum_url' => $forum_url,
2267-            'wp_login' => $wp_login,
2268:            'wp_password' => $wp_password,
2269-            'ftp_host' => $ftp_host,
2270-            'ftp_login' => $ftp_login,
2271:            'ftp_password' => $ftp_password
2272-        );
2273-
2274-        foreach ($templates as $template_index => $template) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2290]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2287-            'new_feature' => 'url,name,email,subject,description',
2288-            'email_support' => 'url,name,email,subject,description',
2289-            'phone_support' => 'url,name,email,subject,description,phone',
2290:            'plugin_config' => 'url,name,email,subject,description,wp_login,wp_password',
2291:            'theme_config' => 'url,name,email,subject,description,wp_login,wp_password,ftp_host,ftp_login,ftp_password',
2292:            'linux_config' => 'url,name,email,subject,description,wp_login,wp_password,ftp_host,ftp_login,ftp_password'
2293-        );
2294-
2295-        if (strstr($required[$request_type], 'url') !== false && $url == '') {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2337]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2334-            )));
2335-        }
2336-
2337:        if (strstr($required[$request_type], 'wp_password') !== false && $wp_password == '') {
2338-            $this->redirect(array_merge($params, array(
2339:                'w3tc_error' => 'support_request_wp_password'
2340-            )));
2341-        }
2342-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2355]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2352-            )));
2353-        }
2354-
2355:        if (strstr($required[$request_type], 'ftp_password') !== false && $ftp_password == '') {
2356-            $this->redirect(array_merge($params, array(
2357:                'w3tc_error' => 'support_request_ftp_password'
2358-            )));
2359-        }
2360-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2467]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2464-
2465-        $data = array();
2466-
2467:        if (!empty($wp_login) && !empty($wp_password)) {
2468-            $data['WP Admin login'] = $wp_login;
2469:            $data['WP Admin password'] = $wp_password;
2470-        }
2471-
2472:        if (!empty($ftp_host) && !empty($ftp_login) && !empty($ftp_password)) {
2473-            $data['SSH / FTP host'] = $ftp_host;
2474-            $data['SSH / FTP login'] = $ftp_login;
2475:            $data['SSH / FTP password'] = $ftp_password;
2476-        }
2477-
2478-        /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[368]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[365-                case 'cotendo':
366-                    $engine_config = array(
367-                        'username' => $this->_config->get_string('cdn.cotendo.username'),
368:                        'password' => $this->_config->get_string('cdn.cotendo.password'),
369-                        'zones' => $this->_config->get_array('cdn.cotendo.zones'),
370-                        'domain' => $this->_config->get_array('cdn.cotendo.domain'),
371-                        'ssl' => $this->_config->get_string('cdn.cotendo.ssl'),]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1715]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[1712-                case 'cotendo':
1713-                    $engine_config = array(
1714-                        'username' => $this->_config->get_string('cdn.cotendo.username'),
1715:                        'password' => $this->_config->get_string('cdn.cotendo.password'),
1716-                        'zones' => $this->_config->get_array('cdn.cotendo.zones'),
1717-                        'domain' => $this->_config->get_array('cdn.cotendo.domain'),
1718-                        'ssl' => $this->_config->get_string('cdn.cotendo.ssl'),]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[25-    function __construct($config = array()) {
26-        $config = array_merge(array(
27-            'username' => '',
28:            'password' => '',
29-            'zones' => array(),
30-        ), $config);
31-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[58]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[55-            return false;
56-        }
57-
58:        if (empty($this->_config['password'])) {
59:            $results = $this->_get_results($files, W3TC_CDN_RESULT_HALT, 'Empty password.');
60-
61-            return false;
62-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Mirror/Cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[87]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[84-
85-        $client->authtype = 'basic';
86-        $client->username = $this->_config['username'];
87:        $client->password = $this->_config['password'];
88-        $client->forceEndpoint = W3TC_CDN_MIRROR_COTENDO_ENDPOINT;
89-
90-        foreach ((array) $this->_config['zones'] as $zone) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[83]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[80-        }
81-
82-        if (!@ftp_login($this->_ftp, $this->_config['user'], $this->_config['pass'])) {
83:            $error = sprintf('Incorrect login or password (%s).', $this->_get_last_error());
84-
85-            $this->_restore_error_handler();
86-            $this->_disconnect();]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[180]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[177-     * HTTP Authentication settings
178-     *
179-     * Expected to be an associative array with this structure:
180:     * $this->auth = array('user' => 'username', 'password' => 'password', 'type' => 'basic')
181-     * Where 'type' should be one of the supported authentication types (see the AUTH_*
182-     * constants), for example 'basic' or 'digest'.
183-     *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[274]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[271-            throw new Microsoft_Http_Client_Exception('Passed parameter is not a valid HTTP URI.');
272-        }
273-
274:        // Set auth if username and password has been specified in the uri
275-        if ($uri->getUsername() && $uri->getPassword()) {
276-            $this->setAuth($uri->getUsername(), $uri->getPassword());
277-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[537]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[534-     *
535-     * @see http://www.faqs.org/rfcs/rfc2617.html
536-     * @param string|false $user User name or false disable authentication
537:     * @param string $password Password
538-     * @param string $type Authentication type
539-     * @return Microsoft_Http_Client
540-     * @throws Microsoft_Http_Client_Exception
541-     */
542:    public function setAuth($user, $password = '', $type = self::AUTH_BASIC)
543-    {
544-        // If we got false or null, disable authentication
545-        if ($user === false || $user === null) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[564]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[561-
562-            $this->auth = array(
563-                'user' => (string) $user,
564:                'password' => (string) $password,
565-                'type' => $type
566-            );
567-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1113]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[1110-
1111-        // Set HTTP authentication if needed
1112-        if (is_array($this->auth)) {
1113:            $auth = self::encodeAuthHeader($this->auth['user'], $this->auth['password'], $this->auth['type']);
1114-            $headers[] = "Authorization: {$auth}";
1115-        }
1116-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1360]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[1357-
1358-    /**
1359-     * Create a HTTP authentication "Authorization:" header according to the
1360:     * specified user, password and authentication method.
1361-     *
1362-     * @see http://www.faqs.org/rfcs/rfc2617.html
1363-     * @param string $user
1364:     * @param string $password
1365-     * @param string $type
1366-     * @return string
1367-     * @throws Microsoft_Http_Client_Exception
1368-     */
1369:    public static function encodeAuthHeader($user, $password, $type = self::AUTH_BASIC)
1370-    {
1371-        $authHeader = null;
1372-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1382]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[1379-                    throw new Microsoft_Http_Client_Exception("The user name cannot contain ':' in 'Basic' HTTP authentication");
1380-                }
1381-
1382:                $authHeader = 'Basic ' . base64_encode($user . ':' . $password);
1383-                break;
1384-
1385-            //case self::AUTH_DIGEST:]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[58]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[55-    protected $_username = '';
56-
57-    /**
58:     * HTTP password
59-     *
60-     * @var string
61-     */
62:    protected $_password = '';
63-
64-    /**
65-     * HTTP host]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[216]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[213-        $this->_query    = isset($matches[6]) === true ? $matches[6] : '';
214-        $this->_fragment = isset($matches[8]) === true ? $matches[8] : '';
215-
216:        // Additional decomposition to get username, password, host, and port
217-        $combo   = isset($matches[3]) === true ? $matches[3] : '';
218-        $pattern = '~^(([^:@]*)(:([^@]*))?@)?([^:]+)(:(.*))?$~';
219-        $status  = @preg_match($pattern, $combo, $matches);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[232]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[229-
230-        // Save remaining URI components
231-        $this->_username = isset($matches[2]) === true ? $matches[2] : '';
232:        $this->_password = isset($matches[4]) === true ? $matches[4] : '';
233-        $this->_host     = isset($matches[5]) === true ? $matches[5] : '';
234-        $this->_port     = isset($matches[7]) === true ? $matches[7] : '';
235-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[252]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[249-            throw new Microsoft_Uri_Exception('One or more parts of the URI are invalid');
250-        }
251-
252:        $password = strlen($this->_password) > 0 ? ":$this->_password" : '';
253:        $auth     = strlen($this->_username) > 0 ? "$this->_username$password@" : '';
254-        $port     = strlen($this->_port) > 0 ? ":$this->_port" : '';
255-        $query    = strlen($this->_query) > 0 ? "?$this->_query" : '';
256-        $fragment = strlen($this->_fragment) > 0 ? "#$this->_fragment" : '';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[349]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[346-    }
347-
348-    /**
349:     * Returns the password portion of the URL, or FALSE if none.
350-     *
351-     * @return string
352-     */
353-    public function getPassword()
354-    {
355:        return strlen($this->_password) > 0 ? $this->_password : false;
356-    }
357-
358-    /**
359:     * Returns true if and only if the password passes validation. If no password is passed,
360:     * then the password contained in the instance variable is used.
361-     *
362:     * @param  string $password The HTTP password
363:     * @throws Microsoft_Uri_Exception When password validation fails
364-     * @return boolean
365-     * @link   http://www.faqs.org/rfcs/rfc2396.html
366-     */
367:    public function validatePassword($password = null)
368-    {
369:        if ($password === null) {
370:            $password = $this->_password;
371-        }
372-
373:        // If the password is empty, then it is considered valid
374:        if (strlen($password) === 0) {
375-            return true;
376-        }
377-
378:        // If the password is nonempty, but there is no username, then it is considered invalid
379:        if (strlen($password) > 0 and strlen($this->_username) === 0) {
380-            return false;
381-        }
382-
383:        // Check the password against the allowed values
384-        $status = @preg_match('/^(?:' . $this->_regex['escaped'] . '|[' .
385:            self::CHAR_ALNUM . self::CHAR_MARK . ';:&=+$,' . '])+$/', $password);
386-
387-        if ($status === false) {
388-            require_once 'Microsoft/Uri/Exception.php';
389:            throw new Microsoft_Uri_Exception('Internal error: password validation failed.');
390-        }
391-
392-        return $status == 1;
393-    }
394-
395-    /**
396:     * Sets the password for the current URI, and returns the old password
397-     *
398:     * @param  string $password The HTTP password
399:     * @throws Microsoft_Uri_Exception When $password is not a valid HTTP password
400-     * @return string
401-     */
402:    public function setPassword($password)
403-    {
404:        if ($this->validatePassword($password) === false) {
405-            require_once 'Microsoft/Uri/Exception.php';
406:            throw new Microsoft_Uri_Exception("Password \"$password\" is not a valid HTTP password.");
407-        }
408-
409:        $oldPassword     = $this->_password;
410:        $this->_password = $password;
411-
412-        return $oldPassword;
413-    }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[38-	var $use_curl = false;		// force cURL use
39-	var $proxy = null;			// proxy information (associative array)
40-	var $username = '';
41:	var $password = '';
42-	var $authtype = '';
43-	var $digestRequest = array();
44:	var $certRequest = array();	// keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional)
45-								// cainfofile: certificate authority file, e.g. '$pathToPemFiles/rootca.pem'
46-								// sslcertfile: SSL certificate file, e.g. '$pathToPemFiles/mycert.pem'
47-								// sslkeyfile: SSL key file, e.g. '$pathToPemFiles/mykey.pem'
48:								// passphrase: SSL key password/passphrase
49:								// certpassword: SSL certificate password
50-								// verifypeer: default is 1
51-								// verifyhost: default is 1
52-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[354]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[351-				if (isset($this->certRequest['passphrase'])) {
352-					$this->setCurlOption(CURLOPT_SSLKEYPASSWD, $this->certRequest['passphrase']);
353-				}
354:				if (isset($this->certRequest['certpassword'])) {
355:					$this->setCurlOption(CURLOPT_SSLCERTPASSWD, $this->certRequest['certpassword']);
356-				}
357-			}
358-		}
359-		if ($this->authtype && ($this->authtype != 'certificate')) {
360-			if ($this->username) {
361:				$this->debug('set cURL username/password');
362:				$this->setCurlOption(CURLOPT_USERPWD, "$this->username:$this->password");
363-			}
364-			if ($this->authtype == 'basic') {
365-				$this->debug('set cURL for Basic authentication');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[384]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[381-			} else {
382-				$this->setCurlOption(CURLOPT_PROXY, $this->proxy['host']);
383-			}
384:			if ($this->proxy['username'] || $this->proxy['password']) {
385-				$this->debug('set cURL proxy authentication options');
386:				$this->setCurlOption(CURLOPT_PROXYUSERPWD, $this->proxy['username'].':'.$this->proxy['password']);
387-				if ($this->proxy['authtype'] == 'basic') {
388-					$this->setCurlOption($CURLOPT_PROXYAUTH, $CURLAUTH_BASIC);
389-				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[463]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[460-	* if authenticating, set user credentials here
461-	*
462-	* @param    string $username
463:	* @param    string $password
464-	* @param	string $authtype (basic|digest|certificate|ntlm)
465-	* @param	array $digestRequest (keys must be nonce, nc, realm, qop)
466:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
467-	* @access   public
468-	*/
469:	function setCredentials($username, $password, $authtype = 'basic', $digestRequest = array(), $certRequest = array()) {
470-		$this->debug("setCredentials username=$username authtype=$authtype digestRequest=");
471-		$this->appendDebug($this->varDump($digestRequest));
472-		$this->debug("certRequest=");
473-		$this->appendDebug($this->varDump($certRequest));
474-		// cf. RFC 2617
475-		if ($authtype == 'basic') {
476:			$this->setHeader('Authorization', 'Basic '.base64_encode(str_replace(':','',$username).':'.$password));
477-		} elseif ($authtype == 'digest') {
478-			if (isset($digestRequest['nonce'])) {
479-				$digestRequest['nc'] = isset($digestRequest['nc']) ? $digestRequest['nc']++ : 1;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[484]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[481-				// calculate the Digest hashes (calculate code based on digest implementation found at: http://www.rassoc.com/gregr/weblog/stories/2002/07/09/webServicesSecurityHttpDigestAuthenticationWithoutActiveDirectory.html)
482-
483-				// A1 = unq(username-value) ":" unq(realm-value) ":" passwd
484:				$A1 = $username. ':' . (isset($digestRequest['realm']) ? $digestRequest['realm'] : '') . ':' . $password;
485-
486-				// H(A1) = MD5(A1)
487-				$HA1 = md5($A1);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[532]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[529-			$this->debug('Authorization header not set for ntlm');
530-		}
531-		$this->username = $username;
532:		$this->password = $password;
533-		$this->authtype = $authtype;
534-		$this->digestRequest = $digestRequest;
535-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[573]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[570-	* @param    string $proxyhost use an empty string to remove proxy
571-	* @param    string $proxyport
572-	* @param	string $proxyusername
573:	* @param	string $proxypassword
574-	* @param	string $proxyauthtype (basic|ntlm)
575-	* @access   public
576-	*/
577:	function setProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '', $proxyauthtype = 'basic') {
578-		if ($proxyhost) {
579-			$this->proxy = array(
580-				'host' => $proxyhost,
581-				'port' => $proxyport,
582-				'username' => $proxyusername,
583:				'password' => $proxypassword,
584-				'authtype' => $proxyauthtype
585-			);
586:			if ($proxyusername != '' && $proxypassword != '' && $proxyauthtype = 'basic') {
587:				$this->setHeader('Proxy-Authorization', ' Basic '.base64_encode($proxyusername.':'.$proxypassword));
588-			}
589-		} else {
590-			$this->debug('remove proxy');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1079]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[1076-
1077-				// should have (at least) qop, realm, nonce
1078- 				if (isset($digestRequest['nonce'])) {
1079: 					$this->setCredentials($this->username, $this->password, 'digest', $digestRequest);
1080- 					$this->tryagain = true;
1081- 					return false;
1082- 				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2194]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2191-	var $use_curl = false;		// force cURL use
2192-	var $proxy = null;			// proxy information (associative array)
2193-	var $username = '';
2194:	var $password = '';
2195-	var $authtype = '';
2196-	var $digestRequest = array();
2197:	var $certRequest = array();	// keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional)
2198-								// cainfofile: certificate authority file, e.g. '$pathToPemFiles/rootca.pem'
2199-								// sslcertfile: SSL certificate file, e.g. '$pathToPemFiles/mycert.pem'
2200-								// sslkeyfile: SSL key file, e.g. '$pathToPemFiles/mykey.pem'
2201:								// passphrase: SSL key password/passphrase
2202:								// certpassword: SSL certificate password
2203-								// verifypeer: default is 1
2204-								// verifyhost: default is 1
2205-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2507]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2504-				if (isset($this->certRequest['passphrase'])) {
2505-					$this->setCurlOption(CURLOPT_SSLKEYPASSWD, $this->certRequest['passphrase']);
2506-				}
2507:				if (isset($this->certRequest['certpassword'])) {
2508:					$this->setCurlOption(CURLOPT_SSLCERTPASSWD, $this->certRequest['certpassword']);
2509-				}
2510-			}
2511-		}
2512-		if ($this->authtype && ($this->authtype != 'certificate')) {
2513-			if ($this->username) {
2514:				$this->debug('set cURL username/password');
2515:				$this->setCurlOption(CURLOPT_USERPWD, "$this->username:$this->password");
2516-			}
2517-			if ($this->authtype == 'basic') {
2518-				$this->debug('set cURL for Basic authentication');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2537]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2534-			} else {
2535-				$this->setCurlOption(CURLOPT_PROXY, $this->proxy['host']);
2536-			}
2537:			if ($this->proxy['username'] || $this->proxy['password']) {
2538-				$this->debug('set cURL proxy authentication options');
2539:				$this->setCurlOption(CURLOPT_PROXYUSERPWD, $this->proxy['username'].':'.$this->proxy['password']);
2540-				if ($this->proxy['authtype'] == 'basic') {
2541-					$this->setCurlOption($CURLOPT_PROXYAUTH, $CURLAUTH_BASIC);
2542-				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2616]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2613-	* if authenticating, set user credentials here
2614-	*
2615-	* @param    string $username
2616:	* @param    string $password
2617-	* @param	string $authtype (basic|digest|certificate|ntlm)
2618-	* @param	array $digestRequest (keys must be nonce, nc, realm, qop)
2619:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
2620-	* @access   public
2621-	*/
2622:	function setCredentials($username, $password, $authtype = 'basic', $digestRequest = array(), $certRequest = array()) {
2623-		$this->debug("setCredentials username=$username authtype=$authtype digestRequest=");
2624-		$this->appendDebug($this->varDump($digestRequest));
2625-		$this->debug("certRequest=");
2626-		$this->appendDebug($this->varDump($certRequest));
2627-		// cf. RFC 2617
2628-		if ($authtype == 'basic') {
2629:			$this->setHeader('Authorization', 'Basic '.base64_encode(str_replace(':','',$username).':'.$password));
2630-		} elseif ($authtype == 'digest') {
2631-			if (isset($digestRequest['nonce'])) {
2632-				$digestRequest['nc'] = isset($digestRequest['nc']) ? $digestRequest['nc']++ : 1;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2637]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2634-				// calculate the Digest hashes (calculate code based on digest implementation found at: http://www.rassoc.com/gregr/weblog/stories/2002/07/09/webServicesSecurityHttpDigestAuthenticationWithoutActiveDirectory.html)
2635-	
2636-				// A1 = unq(username-value) ":" unq(realm-value) ":" passwd
2637:				$A1 = $username. ':' . (isset($digestRequest['realm']) ? $digestRequest['realm'] : '') . ':' . $password;
2638-	
2639-				// H(A1) = MD5(A1)
2640-				$HA1 = md5($A1);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2685]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2682-			$this->debug('Authorization header not set for ntlm');
2683-		}
2684-		$this->username = $username;
2685:		$this->password = $password;
2686-		$this->authtype = $authtype;
2687-		$this->digestRequest = $digestRequest;
2688-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2726]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[2723-	* @param    string $proxyhost use an empty string to remove proxy
2724-	* @param    string $proxyport
2725-	* @param	string $proxyusername
2726:	* @param	string $proxypassword
2727-	* @param	string $proxyauthtype (basic|ntlm)
2728-	* @access   public
2729-	*/
2730:	function setProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '', $proxyauthtype = 'basic') {
2731-		if ($proxyhost) {
2732-			$this->proxy = array(
2733-				'host' => $proxyhost,
2734-				'port' => $proxyport,
2735-				'username' => $proxyusername,
2736:				'password' => $proxypassword,
2737-				'authtype' => $proxyauthtype
2738-			);
2739:			if ($proxyusername != '' && $proxypassword != '' && $proxyauthtype = 'basic') {
2740:				$this->setHeader('Proxy-Authorization', ' Basic '.base64_encode($proxyusername.':'.$proxypassword));
2741-			}
2742-		} else {
2743-			$this->debug('remove proxy');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3232]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[3229-
3230-				// should have (at least) qop, realm, nonce
3231- 				if (isset($digestRequest['nonce'])) {
3232: 					$this->setCredentials($this->username, $this->password, 'digest', $digestRequest);
3233- 					$this->tryagain = true;
3234- 					return false;
3235- 				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4629]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[4626-	var $proxyhost = '';
4627-    var $proxyport = '';
4628-	var $proxyusername = '';
4629:	var $proxypassword = '';
4630-	var $timeout = 0;
4631-	var $response_timeout = 30;
4632-	var $curl_options = array();	// User-specified cURL options
4633-	var $use_curl = false;			// whether to always try to use cURL
4634-	// for HTTP authentication
4635-	var $username = '';				// Username for HTTP authentication
4636:	var $password = '';				// Password for HTTP authentication
4637-	var $authtype = '';				// Type of HTTP authentication
4638-	var $certRequest = array();		// Certificate for HTTP SSL authentication
4639-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4647]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[4644-	 * @param string $proxyhost
4645-	 * @param string $proxyport
4646-	 * @param string $proxyusername
4647:	 * @param string $proxypassword
4648-	 * @param integer $timeout set the connection timeout
4649-	 * @param integer $response_timeout set the response timeout
4650-	 * @param array $curl_options user-specified cURL options
4651-	 * @param boolean $use_curl try to use cURL
4652-     * @access public 
4653-     */
4654:    function wsdl($wsdl = '',$proxyhost=false,$proxyport=false,$proxyusername=false,$proxypassword=false,$timeout=0,$response_timeout=30,$curl_options=null,$use_curl=false){
4655-		parent::nusoap_base();
4656-		$this->debug("ctor wsdl=$wsdl timeout=$timeout response_timeout=$response_timeout");
4657-        $this->proxyhost = $proxyhost;
4658-        $this->proxyport = $proxyport;
4659-		$this->proxyusername = $proxyusername;
4660:		$this->proxypassword = $proxypassword;
4661-		$this->timeout = $timeout;
4662-		$this->response_timeout = $response_timeout;
4663-		if (is_array($curl_options))]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4796]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[4793-			$tr->request_method = 'GET';
4794-			$tr->useSOAPAction = false;
4795-			if($this->proxyhost && $this->proxyport){
4796:				$tr->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
4797-			}
4798-			if ($this->authtype != '') {
4799:				$tr->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);
4800-			}
4801-			$tr->setEncoding('gzip, deflate');
4802-			$wsdl_string = $tr->send('', $this->timeout, $this->response_timeout);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5139]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[5136-	* if authenticating, set user credentials here
5137-	*
5138-	* @param    string $username
5139:	* @param    string $password
5140-	* @param	string $authtype (basic|digest|certificate|ntlm)
5141:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
5142-	* @access   public
5143-	*/
5144:	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {
5145-		$this->debug("setCredentials username=$username authtype=$authtype certRequest=");
5146-		$this->appendDebug($this->varDump($certRequest));
5147-		$this->username = $username;
5148:		$this->password = $password;
5149-		$this->authtype = $authtype;
5150-		$this->certRequest = $certRequest;
5151-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7186]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[7183-class nusoap_client extends nusoap_base  {
7184-
7185-	var $username = '';				// Username for HTTP authentication
7186:	var $password = '';				// Password for HTTP authentication
7187-	var $authtype = '';				// Type of HTTP authentication
7188-	var $certRequest = array();		// Certificate for HTTP SSL authentication
7189-	var $requestHeaders = false;	// SOAP headers in request (text)]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7198]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[7195-    var $proxyhost = '';
7196-    var $proxyport = '';
7197-	var $proxyusername = '';
7198:	var $proxypassword = '';
7199-	var $portName = '';				// port name to use in WSDL
7200-    var $xml_encoding = '';			// character set encoding of incoming (response) messages
7201-	var $http_encoding = false;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7249]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[7246-	* @param    string $proxyhost optional
7247-	* @param    string $proxyport optional
7248-	* @param	string $proxyusername optional
7249:	* @param	string $proxypassword optional
7250-	* @param	integer $timeout set the connection timeout
7251-	* @param	integer $response_timeout set the response timeout
7252-	* @param	string $portName optional portName in WSDL document
7253-	* @access   public
7254-	*/
7255:	function nusoap_client($endpoint,$wsdl = false,$proxyhost = false,$proxyport = false,$proxyusername = false, $proxypassword = false, $timeout = 0, $response_timeout = 30, $portName = ''){
7256-		parent::nusoap_base();
7257-		$this->endpoint = $endpoint;
7258-		$this->proxyhost = $proxyhost;
7259-		$this->proxyport = $proxyport;
7260-		$this->proxyusername = $proxyusername;
7261:		$this->proxypassword = $proxypassword;
7262-		$this->timeout = $timeout;
7263-		$this->response_timeout = $response_timeout;
7264-		$this->portName = $portName;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7532]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[7529-	 */
7530-	function loadWSDL() {
7531-		$this->debug('instantiating wsdl class with doc: '.$this->wsdlFile);
7532:		$this->wsdl = new wsdl('',$this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword,$this->timeout,$this->response_timeout,$this->curl_options,$this->use_curl);
7533:		$this->wsdl->setCredentials($this->username, $this->password, $this->authtype, $this->certRequest);
7534-		$this->wsdl->fetchWSDL($this->wsdlFile);
7535-		$this->checkWSDL();
7536-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7589]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[7586-				$http->setContentType($this->getHTTPContentType(), $this->getHTTPContentTypeCharset());
7587-				$http->setSOAPAction($soapaction);
7588-				if($this->proxyhost && $this->proxyport){
7589:					$http->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
7590-				}
7591-                if($this->authtype != '') {
7592:					$http->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);
7593-				}
7594-				if($this->http_encoding != ''){
7595-					$http->setEncoding($this->http_encoding);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7761]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[7758-	* @param    string $proxyhost
7759-	* @param    string $proxyport
7760-	* @param	string $proxyusername
7761:	* @param	string $proxypassword
7762-	* @access   public
7763-	*/
7764:	function setHTTPProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '') {
7765-		$this->proxyhost = $proxyhost;
7766-		$this->proxyport = $proxyport;
7767-		$this->proxyusername = $proxyusername;
7768:		$this->proxypassword = $proxypassword;
7769-	}
7770-
7771-	/**
7772-	* if authenticating, set user credentials here
7773-	*
7774-	* @param    string $username
7775:	* @param    string $password
7776-	* @param	string $authtype (basic|digest|certificate|ntlm)
7777-	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
7778-	* @access   public
7779-	*/
7780:	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {
7781-		$this->debug("setCredentials username=$username authtype=$authtype certRequest=");
7782-		$this->appendDebug($this->varDump($certRequest));
7783-		$this->username = $username;
7784:		$this->password = $password;
7785-		$this->authtype = $authtype;
7786-		$this->certRequest = $certRequest;
7787-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7879]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[7876-		// transfer other state
7877-		$proxy->soap_defencoding = $this->soap_defencoding;
7878-		$proxy->username = $this->username;
7879:		$proxy->password = $this->password;
7880-		$proxy->authtype = $this->authtype;
7881-		$proxy->certRequest = $this->certRequest;
7882-		$proxy->requestHeaders = $this->requestHeaders;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7888]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[7885-		$proxy->proxyhost = $this->proxyhost;
7886-		$proxy->proxyport = $this->proxyport;
7887-		$proxy->proxyusername = $this->proxyusername;
7888:		$proxy->proxypassword = $this->proxypassword;
7889-		$proxy->http_encoding = $this->http_encoding;
7890-		$proxy->timeout = $this->timeout;
7891-		$proxy->response_timeout = $this->response_timeout;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[48]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[45-	var $proxyhost = '';
46-    var $proxyport = '';
47-	var $proxyusername = '';
48:	var $proxypassword = '';
49-	var $timeout = 0;
50-	var $response_timeout = 30;
51-	var $curl_options = array();	// User-specified cURL options
52-	var $use_curl = false;			// whether to always try to use cURL
53-	// for HTTP authentication
54-	var $username = '';				// Username for HTTP authentication
55:	var $password = '';				// Password for HTTP authentication
56-	var $authtype = '';				// Type of HTTP authentication
57-	var $certRequest = array();		// Certificate for HTTP SSL authentication
58-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[66]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[63-	 * @param string $proxyhost
64-	 * @param string $proxyport
65-	 * @param string $proxyusername
66:	 * @param string $proxypassword
67-	 * @param integer $timeout set the connection timeout
68-	 * @param integer $response_timeout set the response timeout
69-	 * @param array $curl_options user-specified cURL options
70-	 * @param boolean $use_curl try to use cURL
71-     * @access public
72-     */
73:    function wsdl($wsdl = '',$proxyhost=false,$proxyport=false,$proxyusername=false,$proxypassword=false,$timeout=0,$response_timeout=30,$curl_options=null,$use_curl=false){
74-		parent::nusoap_base();
75-		$this->debug("ctor wsdl=$wsdl timeout=$timeout response_timeout=$response_timeout");
76-        $this->proxyhost = $proxyhost;
77-        $this->proxyport = $proxyport;
78-		$this->proxyusername = $proxyusername;
79:		$this->proxypassword = $proxypassword;
80-		$this->timeout = $timeout;
81-		$this->response_timeout = $response_timeout;
82-		if (is_array($curl_options))]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[215]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[212-			$tr->request_method = 'GET';
213-			$tr->useSOAPAction = false;
214-			if($this->proxyhost && $this->proxyport){
215:				$tr->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
216-			}
217-			if ($this->authtype != '') {
218:				$tr->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);
219-			}
220-			$tr->setEncoding('gzip, deflate');
221-			$wsdl_string = $tr->send('', $this->timeout, $this->response_timeout);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[558]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[555-	* if authenticating, set user credentials here
556-	*
557-	* @param    string $username
558:	* @param    string $password
559-	* @param	string $authtype (basic|digest|certificate|ntlm)
560:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
561-	* @access   public
562-	*/
563:	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {
564-		$this->debug("setCredentials username=$username authtype=$authtype certRequest=");
565-		$this->appendDebug($this->varDump($certRequest));
566-		$this->username = $username;
567:		$this->password = $password;
568-		$this->authtype = $authtype;
569-		$this->certRequest = $certRequest;
570-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[30]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[27-class nusoap_client extends nusoap_base  {
28-
29-	var $username = '';				// Username for HTTP authentication
30:	var $password = '';				// Password for HTTP authentication
31-	var $authtype = '';				// Type of HTTP authentication
32-	var $certRequest = array();		// Certificate for HTTP SSL authentication
33-	var $requestHeaders = false;	// SOAP headers in request (text)]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[42]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[39-    var $proxyhost = '';
40-    var $proxyport = '';
41-	var $proxyusername = '';
42:	var $proxypassword = '';
43-	var $portName = '';				// port name to use in WSDL
44-    var $xml_encoding = '';			// character set encoding of incoming (response) messages
45-	var $http_encoding = false;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[93]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[90-	* @param    string $proxyhost optional
91-	* @param    string $proxyport optional
92-	* @param	string $proxyusername optional
93:	* @param	string $proxypassword optional
94-	* @param	integer $timeout set the connection timeout
95-	* @param	integer $response_timeout set the response timeout
96-	* @param	string $portName optional portName in WSDL document
97-	* @access   public
98-	*/
99:	function nusoap_client($endpoint,$wsdl = false,$proxyhost = false,$proxyport = false,$proxyusername = false, $proxypassword = false, $timeout = 0, $response_timeout = 30, $portName = ''){
100-		parent::nusoap_base();
101-		$this->endpoint = $endpoint;
102-		$this->proxyhost = $proxyhost;
103-		$this->proxyport = $proxyport;
104-		$this->proxyusername = $proxyusername;
105:		$this->proxypassword = $proxypassword;
106-		$this->timeout = $timeout;
107-		$this->response_timeout = $response_timeout;
108-		$this->portName = $portName;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[376]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[373-	 */
374-	function loadWSDL() {
375-		$this->debug('instantiating wsdl class with doc: '.$this->wsdlFile);
376:		$this->wsdl = new wsdl('',$this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword,$this->timeout,$this->response_timeout,$this->curl_options,$this->use_curl);
377:		$this->wsdl->setCredentials($this->username, $this->password, $this->authtype, $this->certRequest);
378-		$this->wsdl->fetchWSDL($this->wsdlFile);
379-		$this->checkWSDL();
380-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[433]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[430-				$http->setContentType($this->getHTTPContentType(), $this->getHTTPContentTypeCharset());
431-				$http->setSOAPAction($soapaction);
432-				if($this->proxyhost && $this->proxyport){
433:					$http->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
434-				}
435-                if($this->authtype != '') {
436:					$http->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);
437-				}
438-				if($this->http_encoding != ''){
439-					$http->setEncoding($this->http_encoding);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[605]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[602-	* @param    string $proxyhost
603-	* @param    string $proxyport
604-	* @param	string $proxyusername
605:	* @param	string $proxypassword
606-	* @access   public
607-	*/
608:	function setHTTPProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '') {
609-		$this->proxyhost = $proxyhost;
610-		$this->proxyport = $proxyport;
611-		$this->proxyusername = $proxyusername;
612:		$this->proxypassword = $proxypassword;
613-	}
614-
615-	/**
616-	* if authenticating, set user credentials here
617-	*
618-	* @param    string $username
619:	* @param    string $password
620-	* @param	string $authtype (basic|digest|certificate|ntlm)
621-	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
622-	* @access   public
623-	*/
624:	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {
625-		$this->debug("setCredentials username=$username authtype=$authtype certRequest=");
626-		$this->appendDebug($this->varDump($certRequest));
627-		$this->username = $username;
628:		$this->password = $password;
629-		$this->authtype = $authtype;
630-		$this->certRequest = $certRequest;
631-	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[723]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[720-		// transfer other state
721-		$proxy->soap_defencoding = $this->soap_defencoding;
722-		$proxy->username = $this->username;
723:		$proxy->password = $this->password;
724-		$proxy->authtype = $this->authtype;
725-		$proxy->certRequest = $this->certRequest;
726-		$proxy->requestHeaders = $this->requestHeaders;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[732]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[729-		$proxy->proxyhost = $this->proxyhost;
730-		$proxy->proxyport = $this->proxyport;
731-		$proxy->proxyusername = $this->proxyusername;
732:		$proxy->proxypassword = $this->proxypassword;
733-		$proxy->http_encoding = $this->http_encoding;
734-		$proxy->timeout = $this->timeout;
735-		$proxy->response_timeout = $this->response_timeout;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/email_support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[62-        <td><input id="support_wp_login" type="text" name="wp_login" value="<?php echo htmlspecialchars($wp_login); ?>" size="80" /></td>
63-    </tr>
64-    <tr>
65:        <th><label for="support_wp_password"><acronym title="WordPress">WP</acronym> Admin password:</label></th>
66:        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
67-    </tr>
68-    <tr>
69-        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/email_support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[77]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[74-        <td><input id="support_ftp_login" type="text" name="ftp_login" value="<?php echo htmlspecialchars($ftp_login); ?>" size="80" /></td>
75-    </tr>
76-    <tr>
77:        <th><label for="support_ftp_password"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> password:</label></th>
78:        <td><input id="support_ftp_password" type="text" name="ftp_password" value="<?php echo htmlspecialchars($ftp_password); ?>" size="80" /></td>
79-    </tr>
80-</table>
81-<?php echo $this->postbox_footer(); ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/linux_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[44]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[41-        <td><input id="support_wp_login" type="text" name="wp_login" value="<?php echo htmlspecialchars($wp_login); ?>" size="80" /></td>
42-    </tr>
43-    <tr>
44:        <th><label for="support_wp_password"><acronym title="WordPress">WP</acronym> Admin password:</label></th>
45:        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
46-    </tr>
47-    <tr>
48-        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/linux_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[56]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[53-        <td><input id="support_ftp_login" type="text" name="ftp_login" value="<?php echo htmlspecialchars($ftp_login); ?>" size="80" /></td>
54-    </tr>
55-    <tr>
56:        <th><label for="support_ftp_password"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> password:</label></th>
57:        <td><input id="support_ftp_password" type="text" name="ftp_password" value="<?php echo htmlspecialchars($ftp_password); ?>" size="80" /></td>
58-    </tr>
59-</table>
60-<?php echo $this->postbox_footer(); ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/bug_report.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[62-        <td><input id="support_wp_login" type="text" name="wp_login" value="<?php echo htmlspecialchars($wp_login); ?>" size="80" /></td>
63-    </tr>
64-    <tr>
65:        <th><label for="support_wp_password"><acronym title="WordPress">WP</acronym> Admin password:</label></th>
66:        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
67-    </tr>
68-    <tr>
69-        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/bug_report.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[77]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[74-        <td><input id="support_ftp_login" type="text" name="ftp_login" value="<?php echo htmlspecialchars($ftp_login); ?>" size="80" /></td>
75-    </tr>
76-    <tr>
77:        <th><label for="support_ftp_password"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> password:</label></th>
78:        <td><input id="support_ftp_password" type="text" name="ftp_password" value="<?php echo htmlspecialchars($ftp_password); ?>" size="80" /></td>
79-    </tr>
80-</table>
81-<?php echo $this->postbox_footer(); ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/phone_support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[62-        <td><input id="support_wp_login" type="text" name="wp_login" value="<?php echo htmlspecialchars($wp_login); ?>" size="80" /></td>
63-    </tr>
64-    <tr>
65:        <th><label for="support_wp_password"><acronym title="WordPress">WP</acronym> Admin password:</label></th>
66:        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
67-    </tr>
68-    <tr>
69-        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/phone_support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[77]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[74-        <td><input id="support_ftp_login" type="text" name="ftp_login" value="<?php echo htmlspecialchars($ftp_login); ?>" size="80" /></td>
75-    </tr>
76-    <tr>
77:        <th><label for="support_ftp_password"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> password:</label></th>
78:        <td><input id="support_ftp_password" type="text" name="ftp_password" value="<?php echo htmlspecialchars($ftp_password); ?>" size="80" /></td>
79-    </tr>
80-</table>
81-<?php echo $this->postbox_footer(); ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/theme_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[49-        <td><input id="support_wp_login" type="text" name="wp_login" value="<?php echo htmlspecialchars($wp_login); ?>" size="80" /></td>
50-    </tr>
51-    <tr>
52:        <th><label for="support_wp_password"><acronym title="WordPress">WP</acronym> Admin password:</label></th>
53:        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
54-    </tr>
55-    <tr>
56-        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/theme_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[64]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[61-        <td><input id="support_ftp_login" type="text" name="ftp_login" value="<?php echo htmlspecialchars($ftp_login); ?>" size="80" /></td>
62-    </tr>
63-    <tr>
64:        <th><label for="support_ftp_password"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> password:</label></th>
65:        <td><input id="support_ftp_password" type="text" name="ftp_password" value="<?php echo htmlspecialchars($ftp_password); ?>" size="80" /></td>
66-    </tr>
67-</table>
68-<?php echo $this->postbox_footer(); ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/plugin_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[52]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[49-        <td><input id="support_wp_login" type="text" name="wp_login" value="<?php echo htmlspecialchars($wp_login); ?>" size="80" /></td>
50-    </tr>
51-    <tr>
52:        <th><label for="support_wp_password"><acronym title="WordPress">WP</acronym> Admin password:</label></th>
53:        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
54-    </tr>
55-</table>
56-<?php echo $this->postbox_footer(); ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/plugin_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[70-        <td><input id="support_ftp_login" type="text" name="ftp_login" value="<?php echo htmlspecialchars($ftp_login); ?>" size="80" /></td>
71-    </tr>
72-    <tr>
73:        <th><label for="support_ftp_password"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> password:</label></th>
74:        <td><input id="support_ftp_password" type="text" name="ftp_password" value="<?php echo htmlspecialchars($ftp_password); ?>" size="80" /></td>
75-    </tr>
76-</table>
77-<?php echo $this->postbox_footer(); ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[9]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[6-    </td>
7-</tr>
8-<tr>
9:    <th><label for="cdn_cotendo_password">Password:</label></th>
10-    <td>
11:        <input id="cdn_cotendo_password" class="w3tc-ignore-change" type="password" name="cdn.cotendo.password" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.cotendo.password')); ?>" size="60" />
12-    </td>
13-</tr>
14-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/rscf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[8-<tr>
9-	<th><label for="cdn_rscf_key"><acronym title="Application Programming Interface">API</acronym> key:</label></th>
10-	<td>
11:		<input id="cdn_rscf_key" class="w3tc-ignore-change" type="password" name="cdn.rscf.key" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.rscf.key')); ?>" size="60" />
12-	</td>
13-</tr>
14-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/netdna.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[8-<tr>
9-    <th><label for="cdn_netdna_apikey"><acronym title="Application Programming Interface">API</acronym> key:</label></th>
10-    <td>
11:        <input id="cdn_netdna_apikey" class="w3tc-ignore-change" type="password" name="cdn.netdna.apikey" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.netdna.apikey')); ?>" size="60" />
12-    </td>
13-</tr>
14-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cf2.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[8-<tr>
9-	<th><label for="cdn_cf2_secret">Secret key:</label></th>
10-	<td>
11:		<input id="cdn_cf2_secret" class="w3tc-ignore-change" type="password" name="cdn.cf2.secret" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.cf2.secret')); ?>" size="60" />
12-	</td>
13-</tr>
14-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[23]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[20-	</td>
21-</tr>
22-<tr>
23:	<th><label for="cdn_ftp_pass"><acronym title="File Transfer Protocol">FTP</acronym> password:</label></th>
24-	<td>
25:		<input id="cdn_ftp_pass" class="w3tc-ignore-change" type="password" name="cdn.ftp.pass" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.ftp.pass')); ?>" size="30" />
26-	</td>
27-</tr>
28-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/edgecast.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[8-<tr>
9-    <th><label for="cdn_edgecast_token">Token:</th>
10-    <td>
11:        <input id="cdn_edgecast_token" class="w3tc-ignore-change" type="password" name="cdn.edgecast.token" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.edgecast.token')); ?>" size="60" />
12-    </td>
13-</tr>
14-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[8-<tr>
9-	<th><label for="cdn_cf_secret">Secret key:</label></th>
10-	<td>
11:		<input id="cdn_cf_secret" class="w3tc-ignore-change" type="password" name="cdn.cf.secret" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.cf.secret')); ?>" size="60" />
12-	</td>
13-</tr>
14-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[8-<tr>
9-	<th><label for="cdn_azure_key">Account key:</label></th>
10-	<td>
11:		<input id="cdn_azure_key" class="w3tc-ignore-change" type="password" name="cdn.azure.key" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.azure.key')); ?>" size="60" />
12-	</td>
13-</tr>
14-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/s3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[8-<tr>
9-	<th><label for="cdn_s3_secret">Secret key:</label></th>
10-	<td>
11:		<input id="cdn_s3_secret" class="w3tc-ignore-change" type="password" name="cdn.s3.secret" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.s3.secret')); ?>" size="60" />
12-	</td>
13-</tr>
14-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[364]]></line_number>
		<match><![CDATA[password]]></match>
		<name><![CDATA[password]]></name>
		<snippet><![CDATA[361-            <tr>
362-                <th><label for="cloudflare_key"><acronym title="Application Programming Interface">API</acronym> key:</label></th>
363-                <td>
364:                    <input id="cloudflare_key" class="w3tc-ignore-change" type="password" name="cloudflare.key" value="<?php echo htmlspecialchars($this->_config->get_string('cloudflare.key')); ?>" size="60" /> (<a href="https://www.cloudflare.com/my-account.html">find it here</a>)
365-                </td>
366-            </tr>
367-            <tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CSSTidy/data.inc.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[172]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[170-$GLOBALS['csstidy']['replace_colors']['forestgreen'] = '#228B22';
171-$GLOBALS['csstidy']['replace_colors']['gainsboro'] = '#DCDCDC';
172:$GLOBALS['csstidy']['replace_colors']['ghostwhite'] = '#F8F8FF';
173-$GLOBALS['csstidy']['replace_colors']['gold'] = '#FFD700';
174-$GLOBALS['csstidy']['replace_colors']['goldenrod'] = '#DAA520';
175-$GLOBALS['csstidy']['replace_colors']['greenyellow'] = '#ADFF2F';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[183]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[180-
181-    # Uses separate cURL connection to authenticate
182-    #
183:    function authenticate($user, $pass, $acct=NULL, $host=NULL)
184-    {
185-        $path = array();
186-        if (isset($acct)){]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[191]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[188-                sprintf("%s: %s", AUTH_USER_HEADER_LEGACY, $user),
189-                sprintf("%s: %s", AUTH_KEY_HEADER_LEGACY, $pass),
190-                );
191:            $path[] = $host;
192-            $path[] = rawurlencode(sprintf("v%d",$this->api_version));
193-            $path[] = rawurlencode($acct);
194-        } else {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[199]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[196-                sprintf("%s: %s", AUTH_USER_HEADER, $user),
197-                sprintf("%s: %s", AUTH_KEY_HEADER, $pass),
198-                );
199:	    $path[] = $host;
200-        }
201-	$path[] = "v1.0";
202-        $url = implode("/", $path);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[119]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[116-    public $dbug;
117-    public $username;
118-    public $api_key;
119:    public $auth_host;
120-    public $account;
121-
122-    /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[135]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[132-     * @param string $username Mosso username
133-     * @param string $api_key Mosso API Access Key
134-     * @param string $account  <i>Account name</i>
135:     * @param string $auth_host  <i>Authentication service URI</i>
136-     */
137:    function __construct($username=NULL, $api_key=NULL, $account=NULL, $auth_host=US_AUTHURL)
138-    {
139-
140-        $this->dbug = False;
141-        $this->username = $username;
142-        $this->api_key = $api_key;
143-        $this->account_name = $account;
144:        $this->auth_host = $auth_host;
145-
146-        $this->storage_url = NULL;
147-        $this->cdnm_url = NULL;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[206]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[203-    {
204-        list($status,$reason,$surl,$curl,$atoken) =
205-                $this->cfs_http->authenticate($this->username, $this->api_key,
206:                $this->account_name, $this->auth_host);
207-
208-        if ($status == 401) {
209-            throw new AuthenticationException("Invalid username or access key.");]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[895]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[892-    #    $new_auth = new CF_Authentication(
893-    #        $this->cfs_auth->username,
894-    #        $this->cfs_auth->api_key,
895:    #        $this->cfs_auth->auth_host,
896-    #        $this->cfs_auth->account);
897-    #    $new_auth->authenticate();
898-    #    $this->cfs_auth = $new_auth;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1575]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1572-    #    $new_auth = new CF_Authentication(
1573-    #        $this->cfs_auth->username,
1574-    #        $this->cfs_auth->api_key,
1575:    #        $this->cfs_auth->auth_host,
1576-    #        $this->cfs_auth->account);
1577-    #    $new_auth->authenticate();
1578-    #    $this->cfs_auth = $new_auth;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/CF/cloudfiles.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2131]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2128-    #    $new_auth = new CF_Authentication(
2129-    #        $this->cfs_auth->username,
2130-    #        $this->cfs_auth->api_key,
2131:    #        $this->cfs_auth->auth_host,
2132-    #        $this->cfs_auth->account);
2133-    #    $new_auth->authenticate();
2134-    #    $this->container->cfs_auth = $new_auth;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[309]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[306-        if ($this->_config->get_string('minify.engine') == 'file') {
307-            $cache_id = $file;
308-        } else {
309:            $cache_id = sprintf('w3tc_%s_minify_%s', w3_get_host_id(), md5($file));
310-        }
311-
312-        return $cache_id;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[382]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[379-        if ($this->_config->get_string('minify.engine') == 'file') {
380-            $key = sprintf('%s/%s.%s.%s.id', $theme, $template, $location, $type);
381-        } else {
382:            $key = sprintf('w3tc_%s_minify_id_%s', w3_get_host_id(), md5($theme . $template . $location . $type));
383-        }
384-
385-        return $key;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[399]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[396-        if ($this->_config->get_string('minify.engine') == 'file') {
397-            $key = sprintf('%s.%s.id', $hash, $type);
398-        } else {
399:            $key = sprintf('w3tc_%s_minify_id_%s', w3_get_host_id(), md5($hash . $type));
400-        }
401-
402-        return $key;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[480]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[477-        if ($this->_config->get_string('minify.engine') == 'file') {
478-            $key = sprintf('%s.%s.files', $hash, $type);
479-        } else {
480:            $key = sprintf('w3tc_%s_minify_files_%s', w3_get_host_id(), md5($hash . $type));
481-        }
482-
483-        return $key;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[561]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[558-        }
559-
560-        /**
561:         * Check hostname
562-         */
563:        if ($this->_config->get_boolean('pgcache.check.domain') && w3_get_host() != w3_get_home_domain()) {
564-            $this->cache_reject_reason = 'Hostname mismatch';
565-
566-            return false;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[948]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[945-
946-            $key .= '_index';
947-        } else {
948:            $key = sprintf('w3tc_%s_page_%s', w3_get_host_id(), md5($key));
949-        }
950-
951-        /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[468]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[465-         * @param string $dbuser MySQL database user
466-         * @param string $dbpassword MySQL database password
467-         * @param string $dbname MySQL database name
468:         * @param string $dbhost MySQL database host
469-         */
470:        function wpdb( $dbuser, $dbpassword, $dbname, $dbhost ) {
471-                if( defined( 'WP_USE_MULTIPLE_DB' ) && WP_USE_MULTIPLE_DB )
472-                        $this->db_connect();
473:                return $this->__construct( $dbuser, $dbpassword, $dbname, $dbhost );
474-        }
475-
476-        /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[489]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[486-         * @param string $dbuser MySQL database user
487-         * @param string $dbpassword MySQL database password
488-         * @param string $dbname MySQL database name
489:         * @param string $dbhost MySQL database host
490-         */
491:        function __construct( $dbuser, $dbpassword, $dbname, $dbhost ) {
492-                register_shutdown_function( array( &$this, '__destruct' ) );
493-
494-                if ( WP_DEBUG )]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[525]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[522-                ini_set('mssql.textsize', 2147483647);
523-
524-                if (get_magic_quotes_gpc()) {
525:                        $dbhost = trim(str_replace("\\\\", "\\", $dbhost));
526-                }
527-
528:                $this->dbh = mssql_connect($dbhost, $dbuser, $dbpassword);
529-                mssql_min_error_severity(0);
530-                mssql_min_message_severity(17);
531-
532-                if ( !$this->dbh ) {
533-                        $this->bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
534-<h1>Error establishing a database connection</h1>
535:<p>This either means that the username and password information in your <code>wp-config.php</code> file is incorrect or we can't contact the database server at <code>%s</code>. This could mean your host's database server is down.</p>
536-<ul>
537-        <li>Are you sure you have the correct username and password?</li>
538:        <li>Are you sure that you have typed the correct hostname?</li>
539-        <li>Are you sure that the database server is running?</li>
540-</ul>
541:<p>If you're unsure what these terms mean you should probably contact your host. If you still need help you can always visit the <a href='http://wordpress.org/support/'>WordPress Support Forums</a>.</p>
542:"/*/WP_I18N_DB_CONN_ERROR*/, $dbhost ), 'db_connect_fail' );
543-                        if ( defined( 'WP_SETUP_CONFIG' ) )
544-                            return;
545-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[766]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[763-<li>Does the user <code>%2$s</code> have permission to use the <code>%1$s</code> database?</li>
764-<li>On some systems the name of your database is prefixed with your username, so it would be like <code>username_%1$s</code>. Could that be the problem?</li>
765-</ul>
766:<p>If you don\'t know how to set up a database you should <strong>contact your host</strong>. If all else fails you may find help at the <a href="http://wordpress.org/support/">WordPress Support Forums</a>.</p>'/*/WP_I18N_DB_SELECT_DB*/, $db, $this->dbuser ), 'db_select_fail' );
767-                        return;
768-                }
769-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1058]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1055-                }
1056-
1057-                $dbhname = "dbh" . $action;
1058:                $this->$dbhname = @mssql_connect( $details[ 'db_host' ], $details[ 'db_user' ], $details[ 'db_password' ] );
1059-
1060-                if (!$this->$dbhname ) {
1061-                        $this->bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
1062-<h1>Error establishing a database connection</h1>
1063:<p>This either means that the username and password information in your <code>wp-config.php</code> file is incorrect or we can't contact the database server at <code>%s</code>. This could mean your host's database server is down.</p>
1064-<ul>
1065-        <li>Are you sure you have the correct username and password?</li>
1066:        <li>Are you sure that you have typed the correct hostname?</li>
1067-        <li>Are you sure that the database server is running?</li>
1068-</ul>
1069:<p>If you're unsure what these terms mean you should probably contact your host. If you still need help you can always visit the <a href='http://wordpress.org/support/'>WordPress Support Forums</a>.</p>
1070:"/*/WP_I18N_DB_CONN_ERROR*/, $details['db_host'] ), 'db_connect_fail' );
1071-                }
1072-
1073-                mssql_min_error_severity(0);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[90]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[87-     * @param string $dbuser
88-     * @param string $dbpassword
89-     * @param string $dbname
90:     * @param string $dbhost
91-     */
92:    function __construct($dbuser, $dbpassword, $dbname, $dbhost) {
93-        $this->_config = & w3_instance('W3_Config');
94-        $this->_lifetime = $this->_config->get_integer('dbcache.lifetime');
95-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[103]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[100-            ));
101-        }
102-
103:        parent::__construct($dbuser, $dbpassword, $dbname, $dbhost);
104-    }
105-
106-    /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[112]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[109-     * @param string $dbuser
110-     * @param string $dbpassword
111-     * @param string $dbname
112:     * @param string $dbhost
113-     */
114:    function W3_Db($dbuser, $dbpassword, $dbname, $dbhost) {
115:        $this->__construct($dbuser, $dbpassword, $dbname, $dbhost);
116-    }
117-
118-    /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[680]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[677-     * @return string
678-     */
679-    function _get_cache_key($sql) {
680:        $key = sprintf('w3tc_%s_sql_%s', w3_get_host_id(), md5($sql));
681-
682-        /**
683-         * Allow to modify cache key by W3TC plugins]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[750]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[747-    /**
748-     * PHP4 constructor
749-     *
750:     * @param string $dbhost
751-     */
752-    function W3_Db_Nocache($object_doing_query) {
753-        $this->__construct($object_doing_query);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[185]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[182-        'cdn.force.rewrite' => 'boolean',
183-        'cdn.autoupload.enabled' => 'boolean',
184-        'cdn.autoupload.interval' => 'integer',
185:        'cdn.ftp.host' => 'string',
186-        'cdn.ftp.port' => 'integer',
187-        'cdn.ftp.user' => 'string',
188-        'cdn.ftp.pass' => 'string',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[545]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[542-        'cdn.force.rewrite' => false,
543-        'cdn.autoupload.enabled' => false,
544-        'cdn.autoupload.interval' => 3600,
545:        'cdn.ftp.host' => '',
546-        'cdn.ftp.port' => 21,
547-        'cdn.ftp.user' => '',
548-        'cdn.ftp.pass' => '',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[663]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[660-            'support_request_description' => 'Please describe the issue in the issue description field.',
661-            'support_request_wp_login' => 'Please enter an administrator login. Create a temporary one just for this support case if needed.',
662-            'support_request_wp_password' => 'Please enter WP Admin password, be sure it\'s spelled correctly.',
663:            'support_request_ftp_host' => 'Please enter <acronym title="Secure Shell">SSH</acronym> or <acronym title="File Transfer Protocol">FTP</acronym> host for the site.',
664-            'support_request_ftp_login' => 'Please enter <acronym title="Secure Shell">SSH</acronym> or <acronym title="File Transfer Protocol">FTP</acronym> login for the server. Create a temporary one just for this support case if needed.',
665-            'support_request_ftp_password' => 'Please enter <acronym title="Secure Shell">SSH</acronym> or <acronym title="File Transfer Protocol">FTP</acronym> password for the <acronym title="File Transfer Protocol">FTP</acronym> account.',
666-            'support_request' => 'Unable to send the support request.',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[795]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[792-                }
793-
794-                if ($this->_config->get_boolean('notes.cdn_reupload')) {
795:                    $notes[] = sprintf('Settings that effect Browser Cache settings for files hosted by the CDN have been changed. To apply the new settings %s and %s. %s', $this->button_popup('export the media library', 'cdn_export_library'), implode(', ', $cdn_upload_buttons), $this->button_hide_note('Hide this message', 'cdn_reupload'));
796-                }
797-            }
798-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1233]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1230-
1231-            switch (true) {
1232-                case ($cdn_engine == 'ftp' && !count($this->_config->get_array('cdn.ftp.domain'))):
1233:                    $this->_errors[] = 'Content Delivery Network Error: The <strong>"Replace default hostname with"</strong> field must be populated. Enter <acronym title="Content Delivery Network">CDN</acronym> provider hostname. <em>(This is the hostname used in order to view objects in a browser.)</em>';
1234-                    break;
1235-
1236-                case ($cdn_engine == 's3' && ($this->_config->get_string('cdn.s3.key') == '' || $this->_config->get_string('cdn.s3.secret') == '' || $this->_config->get_string('cdn.s3.bucket') == '')):]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1241]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1238-                    break;
1239-
1240-                case ($cdn_engine == 'cf' && ($this->_config->get_string('cdn.cf.key') == '' || $this->_config->get_string('cdn.cf.secret') == '' || $this->_config->get_string('cdn.cf.bucket') == '' || ($this->_config->get_string('cdn.cf.id') == '' && !count($this->_config->get_array('cdn.cf.cname'))))):
1241:                    $this->_errors[] = 'Content Delivery Network Error: The <strong>"Access key", "Secret key", "Bucket" and "Replace default hostname with"</strong> fields must be populated.';
1242-                    break;
1243-
1244-                case ($cdn_engine == 'cf2' && ($this->_config->get_string('cdn.cf2.key') == '' || $this->_config->get_string('cdn.cf2.secret') == '' || ($this->_config->get_string('cdn.cf2.id') == '' && !count($this->_config->get_array('cdn.cf2.cname'))))):
1245:                    $this->_errors[] = 'Content Delivery Network Error: The <strong>"Access key", "Secret key" and "Replace default hostname with"</strong> fields must be populated.';
1246-                    break;
1247-
1248-                case ($cdn_engine == 'rscf' && ($this->_config->get_string('cdn.rscf.user') == '' || $this->_config->get_string('cdn.rscf.key') == '' || $this->_config->get_string('cdn.rscf.container') == '' || !count($this->_config->get_array('cdn.rscf.cname')))):
1249:                    $this->_errors[] = 'Content Delivery Network Error: The <strong>"Username", "API key", "Container" and "Replace default hostname with"</strong> fields must be populated.';
1250-                    break;
1251-
1252-                case ($cdn_engine == 'azure' && ($this->_config->get_string('cdn.azure.user') == '' || $this->_config->get_string('cdn.azure.key') == '' || $this->_config->get_string('cdn.azure.container') == '')):]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1257]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1254-                    break;
1255-
1256-                case ($cdn_engine == 'mirror' && !count($this->_config->get_array('cdn.mirror.domain'))):
1257:                    $this->_errors[] = 'Content Delivery Network Error: The <strong>"Replace default hostname with"</strong> field must be populated.';
1258-                    break;
1259-
1260-                case ($cdn_engine == 'netdna' && !count($this->_config->get_array('cdn.netdna.domain'))):
1261:                    $this->_errors[] = 'Content Delivery Network Error: The <strong>"Replace default hostname with"</strong> field must be populated.';
1262-                    break;
1263-
1264-                case ($cdn_engine == 'cotendo' && !count($this->_config->get_array('cdn.cotendo.domain'))):
1265:                    $this->_errors[] = 'Content Delivery Network Error: The <strong>"Replace default hostname with"</strong> field must be populated.';
1266-                    break;
1267-
1268-                case ($cdn_engine == 'edgecast' && !count($this->_config->get_array('cdn.edgecast.domain'))):
1269:                    $this->_errors[] = 'Content Delivery Network Error: The <strong>"Replace default hostname with"</strong> field must be populated.';
1270-                    break;
1271-            }
1272-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2223]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2220-        $forum_url = W3_Request::get_string('forum_url');
2221-        $wp_login = W3_Request::get_string('wp_login');
2222-        $wp_password = W3_Request::get_string('wp_password');
2223:        $ftp_host = W3_Request::get_string('ftp_host');
2224-        $ftp_login = W3_Request::get_string('ftp_login');
2225-        $ftp_password = W3_Request::get_string('ftp_password');
2226-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2252]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2249-        $forum_url = W3_Request::get_string('forum_url');
2250-        $wp_login = W3_Request::get_string('wp_login');
2251-        $wp_password = W3_Request::get_string('wp_password');
2252:        $ftp_host = W3_Request::get_string('ftp_host');
2253-        $ftp_login = W3_Request::get_string('ftp_login');
2254-        $ftp_password = W3_Request::get_string('ftp_password');
2255-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2269]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2266-            'forum_url' => $forum_url,
2267-            'wp_login' => $wp_login,
2268-            'wp_password' => $wp_password,
2269:            'ftp_host' => $ftp_host,
2270-            'ftp_login' => $ftp_login,
2271-            'ftp_password' => $ftp_password
2272-        );]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2291]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2288-            'email_support' => 'url,name,email,subject,description',
2289-            'phone_support' => 'url,name,email,subject,description,phone',
2290-            'plugin_config' => 'url,name,email,subject,description,wp_login,wp_password',
2291:            'theme_config' => 'url,name,email,subject,description,wp_login,wp_password,ftp_host,ftp_login,ftp_password',
2292:            'linux_config' => 'url,name,email,subject,description,wp_login,wp_password,ftp_host,ftp_login,ftp_password'
2293-        );
2294-
2295-        if (strstr($required[$request_type], 'url') !== false && $url == '') {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2343]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2340-            )));
2341-        }
2342-
2343:        if (strstr($required[$request_type], 'ftp_host') !== false && $ftp_host == '') {
2344-            $this->redirect(array_merge($params, array(
2345:                'w3tc_error' => 'support_request_ftp_host'
2346-            )));
2347-        }
2348-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2472]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2469-            $data['WP Admin password'] = $wp_password;
2470-        }
2471-
2472:        if (!empty($ftp_host) && !empty($ftp_login) && !empty($ftp_password)) {
2473:            $data['SSH / FTP host'] = $ftp_host;
2474-            $data['SSH / FTP login'] = $ftp_login;
2475-            $data['SSH / FTP password'] = $ftp_password;
2476-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2650]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2647-        $cdn = & $w3_plugin_cdncommon->get_cdn();
2648-
2649-        $total = $w3_plugin_cdn->get_import_posts_count();
2650:        $cdn_host = $cdn->get_domain();
2651-
2652-        $title = 'Media Library import';
2653-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5392]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[5389-        $site_url = get_option('siteurl');
5390-        $parse_url = @parse_url($site_url);
5391-
5392:        if ($parse_url && !empty($parse_url['host'])) {
5393:            return $parse_url['host'];
5394-        }
5395-
5396-        return $_SERVER['HTTP_HOST'];]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnCommon.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[278]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[275-            switch ($engine) {
276-                case 'ftp':
277-                    $engine_config = array(
278:                        'host' => $this->_config->get_string('cdn.ftp.host'),
279-                        'port' => $this->_config->get_integer('cdn.ftp.port'),
280-                        'user' => $this->_config->get_string('cdn.ftp.user'),
281-                        'pass' => $this->_config->get_string('cdn.ftp.pass'),]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[428]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[425-     */
426-    function generate_rules_core_apache() {
427-        $is_network = w3_is_network();
428:        $is_vhost = w3_is_subdomain_install();
429-
430-        $base_path = w3_get_base_path();
431-        $home_path = w3_get_home_path();]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[548]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[545-            /**
546-             * If VHOST is off, detect blogname from URI
547-             */
548:            if (!$is_vhost) {
549-                $blognames = w3_get_blognames();
550-
551-                if (count($blognames)) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[630]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[627-        $use_cache_rules .= "    RewriteCond %{QUERY_STRING} =\"\"\n";
628-
629-        /**
630:         * Check hostname
631-         */
632-        if ($this->_config->get_boolean('pgcache.check.domain')) {
633-            $use_cache_rules .= "    RewriteCond %{HTTP_HOST} =" . w3_get_home_domain() . "\n";]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[709]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[706-     */
707-    function generate_rules_core_nginx() {
708-        $is_network = w3_is_network();
709:        $is_vhost = w3_is_subdomain_install();
710-
711-        $base_path = w3_get_base_path();
712-        $cache_dir = w3_path(W3TC_CACHE_FILE_PGCACHE_DIR);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[827]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[824-        $rules .= "}\n";
825-
826-        /**
827:         * Check hostname
828-         */
829-        if ($this->_config->get_boolean('pgcache.check.domain')) {
830:            $rules .= "if (\$http_host != \"" . w3_get_home_domain() . "\") {\n";
831-            $rules .= "    set \$w3tc_rewrite 0;\n";
832-            $rules .= "}\n";
833-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[905]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[902-             * Detect domain
903-             */
904-            $rules .= "set \$w3tc_domain \"\";\n";
905:            $rules .= "if (\$http_host ~ ^(www\\.)?([a-z0-9\\-\\.]+\\.[a-z]+)\\.?(:[0-9]+)?$) {\n";
906-            $rules .= "    set \$w3tc_domain $2;\n";
907-            $rules .= "}\n";
908-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/PgCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[914]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[911-            /**
912-             * If VHOST is off, detect blogname from URI
913-             */
914:            if (!$is_vhost) {
915-                $blognames = w3_get_blognames();
916-
917-                if (count($blognames)) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1625]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1622-            switch ($engine) {
1623-                case 'ftp':
1624-                    $engine_config = array(
1625:                        'host' => $this->_config->get_string('cdn.ftp.host'),
1626-                        'port' => $this->_config->get_integer('cdn.ftp.port'),
1627-                        'user' => $this->_config->get_string('cdn.ftp.user'),
1628-                        'pass' => $this->_config->get_string('cdn.ftp.pass'),]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[383]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[380-                 * Add footer comment
381-                 */
382-                $date = date_i18n('Y-m-d H:i:s');
383:                $host = (!empty($_SERVER['SERVER_NAME']) ? $_SERVER['SERVER_NAME'] : 'localhost');
384-
385-                if ($this->_config->get_string('common.support') != '' || $this->_config->get_boolean('common.tweeted')) {
386:                    $buffer .= sprintf("\r\n<!-- Served from: %s @ %s by W3 Total Cache -->", w3_escape_comment($host), $date);
387-                } else {
388-                    $strings = array();
389-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[449]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[446-                        $buffer .= "\r\n" . implode("\r\n", $strings) . "\r\n";
447-                    }
448-
449:                    $buffer .= sprintf("\r\nServed from: %s @ %s -->", w3_escape_comment($host), $date);
450-                }
451-            }
452-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[177]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[174-            }
175-
176-            /**
177:             * Custom host for SSL
178-             */
179-            list($domain_http, $domain_https) = array_map('trim', explode(',', $domain . ','));
180-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[440]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[437-        $domains = $this->get_domains();
438-
439-        if (!count($domains)) {
440:            $error = 'Empty hostname / CNAME list.';
441-
442-            return false;
443-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[453]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[450-                $matches = null;
451-
452-                if (preg_match('~^([a-z0-9\-\.]*)~i', $_domain, $matches)) {
453:                    $hostname = $matches[1];
454-                } else {
455:                    $hostname = $_domain;
456-                }
457-
458:                if (!$hostname) {
459:                    $error = 'Empty hostname';
460-
461-                    return false;
462-                }
463-
464:                if (gethostbyname($hostname) === $hostname) {
465:                    $error = sprintf('Unable to resolve hostname: %s.', $hostname);
466-
467-                    return false;
468-                }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Base.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[527]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[524-
525-        if ($count) {
526-            /**
527:             * Use for equal URLs same host to allow caching by browser
528-             */
529-            $hash = $this->_get_hash($path);
530-            $domain = $domains[$hash % $count];]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Rscf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[92]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[89-        switch ($this->_config['location']) {
90-            default:
91-            case 'us':
92:                $host = US_AUTHURL;
93-                break;
94-
95-            case 'uk':
96:                $host = UK_AUTHURL;
97-                break;
98-        }
99-
100-        try {
101:            $this->_auth = new CF_Authentication($this->_config['user'], $this->_config['key'], null, $host);
102-            $this->_auth->ssl_use_cabundle();
103-            $this->_auth->authenticate();
104-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[32]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[29-     */
30-    function __construct($config = array()) {
31-        $config = array_merge(array(
32:            'host' => '',
33-            'port' => 21,
34-            'user' => '',
35-            'pass' => '',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[60]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[57-     * @return boolean
58-     */
59-    function _connect(&$error) {
60:        if (empty($this->_config['host'])) {
61:            $error = 'Empty host.';
62-
63-            return false;
64-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/Ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[72]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[69-
70-        $this->_set_error_handler();
71-
72:        $this->_ftp = @ftp_connect($this->_config['host'], (int) $this->_config['port'], W3TC_CDN_FTP_CONNECT_TIMEOUT);
73-
74-        if (!$this->_ftp) {
75:            $error = sprintf('Unable to connect to %s:%d (%s).', $this->_config['host'], $this->_config['port'], $this->_get_last_error());
76-
77-            $this->_restore_error_handler();
78-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Cdn/S3/Cf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[97]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[94-        if ($this->type == W3TC_CDN_CF_TYPE_S3) {
95-            $origin = sprintf('%s.s3.amazonaws.com', $this->_config['bucket']);
96-        } else {
97:            $origin = w3_get_host();
98-        }
99-
100-        return $origin;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/ObjectCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[434]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[431-        if (isset($this->_key_cache[$key_cache_id])) {
432-            $key = $this->_key_cache[$key_cache_id];
433-        } else {
434:            $host = w3_get_host();
435-
436-            if (in_array($group, $this->global_groups)) {
437:                $host_id = $host;
438-            } else {
439:                $host_id = sprintf('%s_%d', $host, $blog_id);
440-            }
441-
442:            $key = sprintf('w3tc_%s_object_%s', $host_id, md5($group . $id));
443-
444-            $this->_key_cache[$key_cache_id] = $key;
445-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[355]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[352-    }
353-
354-    /**
355:     * Check if a cookie's domain matches a host name.
356-     *
357-     * Used by Microsoft_Http_Cookie and Microsoft_Http_CookieJar for cookie matching
358-     *
359-     * @param  string $cookieDomain
360:     * @param  string $host
361-     *
362-     * @return boolean
363-     */
364:    public static function matchCookieDomain($cookieDomain, $host)
365-    {
366-        if (! $cookieDomain) {
367-            require_once 'Microsoft/Http/Exception.php';
368-            throw new Microsoft_Http_Exception("\$cookieDomain is expected to be a cookie domain");
369-        }
370-
371:        if (! $host) {
372-            require_once 'Microsoft/Http/Exception.php';
373:            throw new Microsoft_Http_Exception("\$host is expected to be a host name");
374-        }
375-
376-        $cookieDomain = strtolower($cookieDomain);
377:        $host = strtolower($host);
378-
379-        if ($cookieDomain[0] == '.') {
380-            $cookieDomain = substr($cookieDomain, 1);
381-        }
382-
383-        // Check for either exact match or suffix match
384:        return ($cookieDomain == $host ||
385:                preg_match("/\.$cookieDomain$/", $host));
386-    }
387-
388-    /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Cookie.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[406]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[403-
404-        if (! $path) {
405-            require_once 'Microsoft/Http/Exception.php';
406:            throw new Microsoft_Http_Exception("\$path is expected to be a host name");
407-        }
408-
409-        return (strpos($path, $cookiePath) === 0);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[372]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[369-     * 2. By providing a single header string as the only parameter
370-     *    eg. 'Host: www.example.com'
371-     * 3. By providing an array of headers as the first parameter
372:     *    eg. array('host' => 'www.example.com', 'x-foo: bar'). In This case
373-     *    the function will call itself recursively for each array item.
374-     *
375-     * @param string|array $name Header name, full header string ('Header: value')]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1023]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1020-
1021-                // If we got a well formed absolute URI
1022-                if (Microsoft_Uri_Http::check($location)) {
1023:                    $this->setHeaders('host', null);
1024-                    $this->setUri($location);
1025-
1026-                } else {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1069]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1066-    {
1067-        $headers = array();
1068-
1069:        // Set the host header
1070:        if (! isset($this->headers['host'])) {
1071:            $host = $this->uri->getHost();
1072-
1073-            // If the port is not default, add it
1074-            if (! (($this->uri->getScheme() == 'http' && $this->uri->getPort() == 80) ||
1075-                  ($this->uri->getScheme() == 'https' && $this->uri->getPort() == 443))) {
1076:                $host .= ':' . $this->uri->getPort();
1077-            }
1078-
1079:            $headers[] = "Host: {$host}";
1080-        }
1081-
1082-        // Set the connection header]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[66]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[63-        'ssltransport'  => 'ssl',
64-        'sslcert'       => null,
65-        'sslpassphrase' => null,
66:        'proxy_host'    => '',
67-        'proxy_port'    => 8080,
68-        'proxy_user'    => '',
69-        'proxy_pass'    => '',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[87]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[84-     * Will try to connect to the proxy server. If no proxy was set, will
85-     * fall back to the target server (behave like regular Socket adapter)
86-     *
87:     * @param string  $host
88-     * @param int     $port
89-     * @param boolean $secure
90-     */
91:    public function connect($host, $port = 80, $secure = false)
92-    {
93-        // If no proxy is set, fall back to Socket adapter
94:        if (! $this->config['proxy_host']) {
95:            return parent::connect($host, $port, $secure);
96-        }
97-
98-        // Connect (a non-secure connection) to the proxy server
99-        return parent::connect(
100:            $this->config['proxy_host'],
101-            $this->config['proxy_port'],
102-            false
103-        );]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[119]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[116-    public function write($method, $uri, $http_ver = '1.1', $headers = array(), $body = '')
117-    {
118-        // If no proxy is set, fall back to default Socket adapter
119:        if (! $this->config['proxy_host']) return parent::write($method, $uri, $http_ver, $headers, $body);
120-
121-        // Make sure we're properly connected
122-        if (! $this->socket) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[127]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[124-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are not connected");
125-        }
126-
127:        $host = $this->config['proxy_host'];
128-        $port = $this->config['proxy_port'];
129-
130:        if ($this->connected_to[0] != "tcp://$host" || $this->connected_to[1] != $port) {
131-            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
132-            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are connected to the wrong proxy server");
133-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[183]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[180-    /**
181-     * Preform handshaking with HTTPS proxy using CONNECT method
182-     *
183:     * @param string  $host
184-     * @param integer $port
185-     * @param string  $http_ver
186-     * @param array   $headers
187-     */
188:    protected function connectHandshake($host, $port = 443, $http_ver = '1.1', array &$headers = array())
189-    {
190:        $request = "CONNECT $host:$port HTTP/$http_ver\r\n" .
191:                   "Host: " . $this->config['proxy_host'] . "\r\n";
192-
193-        // Add the user-agent header
194-        if (isset($this->config['useragent'])) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Proxy.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[199]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[196-        }
197-
198-        // If the proxy-authorization header is set, send it to proxy but remove
199:        // it from headers sent to target host
200-        if (isset($headers['proxy-authorization'])) {
201-            $request .= "Proxy-authorization: " . $headers['proxy-authorization'] . "\r\n";
202-            unset($headers['proxy-authorization']);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[61]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[58-    protected $_config = array();
59-
60-    /**
61:     * What host/port are we connected to?
62-     *
63-     * @var array
64-     */]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[151]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[148-        foreach ($config as $k => $v) {
149-            $option = strtolower($k);
150-            switch($option) {
151:                case 'proxy_host':
152-                    $this->setCurlOption(CURLOPT_PROXY, $v);
153-                    break;
154-                case 'proxy_port':]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[195]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[192-    /**
193-     * Initialize curl
194-     *
195:     * @param  string  $host
196-     * @param  int     $port
197-     * @param  boolean $secure
198-     * @return void
199-     * @throws Microsoft_Http_Client_Adapter_Exception if unable to connect
200-     */
201:    public function connect($host, $port = 80, $secure = false)
202-    {
203-        // If we're already connected, disconnect first
204-        if ($this->_curl) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[211]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[208-        // If we are connected to a different server or port, disconnect first
209-        if ($this->_curl
210-            && is_array($this->_connected_to)
211:            && ($this->_connected_to[0] != $host
212-            || $this->_connected_to[1] != $port)
213-        ) {
214-            $this->close();]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[233]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[230-            $this->close();
231-
232-            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
233:            throw new Microsoft_Http_Client_Adapter_Exception('Unable to Connect to ' .  $host . ':' . $port);
234-        }
235-
236-        if ($secure !== false) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[247]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[244-        }
245-
246-        // Update connected_to
247:        $this->_connected_to = array($host, $port);
248-    }
249-
250-    /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[259]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[256-     * @param  array         $headers
257-     * @param  string        $body
258-     * @return string        $request
259:     * @throws Microsoft_Http_Client_Adapter_Exception If connection fails, connected to wrong host, no PUT file defined, unsupported method, or unsupported cURL option
260-     */
261-    public function write($method, $uri, $httpVersion = 1.1, $headers = array(), $body = '')
262-    {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Curl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[271]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[268-
269-        if ($this->_connected_to[0] != $uri->getHost() || $this->_connected_to[1] != $uri->getPort()) {
270-            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
271:            throw new Microsoft_Http_Client_Adapter_Exception("Trying to write but we are connected to the wrong host");
272-        }
273-
274-        // set URL]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Interface.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[48]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[45-    /**
46-     * Connect to the remote server
47-     *
48:     * @param string  $host
49-     * @param int     $port
50-     * @param boolean $secure
51-     */
52:    public function connect($host, $port = 80, $secure = false);
53-
54-    /**
55-     * Send request to the remote server]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[60]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[57-    protected $socket = null;
58-
59-    /**
60:     * What host/port are we connected to?
61-     *
62-     * @var array
63-     */]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[187]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[184-    /**
185-     * Connect to the remote server
186-     *
187:     * @param string  $host
188-     * @param int     $port
189-     * @param boolean $secure
190-     */
191:    public function connect($host, $port = 80, $secure = false)
192-    {
193-        // If the URI should be accessed via SSL, prepend the Hostname with ssl://
194:        $host = ($secure ? $this->config['ssltransport'] : 'tcp') . '://' . $host;
195-
196:        // If we are connected to the wrong host, disconnect first
197:        if (($this->connected_to[0] != $host || $this->connected_to[1] != $port)) {
198-            if (is_resource($this->socket)) $this->close();
199-        }
200-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[224]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[221-            $flags = STREAM_CLIENT_CONNECT;
222-            if ($this->config['persistent']) $flags |= STREAM_CLIENT_PERSISTENT;
223-
224:            $this->socket = @stream_socket_client($host . ':' . $port,
225-                                                  $errno,
226-                                                  $errstr,
227-                                                  (int) $this->config['timeout'],]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[235]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[232-                $this->close();
233-                require_once 'Microsoft/Http/Client/Adapter/Exception.php';
234-                throw new Microsoft_Http_Client_Adapter_Exception(
235:                    'Unable to Connect to ' . $host . ':' . $port . '. Error #' . $errno . ': ' . $errstr);
236-            }
237-
238-            // Set the stream timeout]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[245]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[242-            }
243-
244-            // Update connected_to
245:            $this->connected_to = array($host, $port);
246-        }
247-    }
248-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client/Adapter/Socket.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[267]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[264-            throw new Microsoft_Http_Client_Adapter_Exception('Trying to write but we are not connected');
265-        }
266-
267:        $host = $uri->getHost();
268:        $host = (strtolower($uri->getScheme()) == 'https' ? $this->config['ssltransport'] : 'tcp') . '://' . $host;
269:        if ($this->connected_to[0] != $host || $this->connected_to[1] != $uri->getPort()) {
270-            require_once 'Microsoft/Http/Client/Adapter/Exception.php';
271:            throw new Microsoft_Http_Client_Adapter_Exception('Trying to write but we are connected to the wrong host');
272-        }
273-
274-        // Save request method for later]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[117]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[114-	protected $_apiVersion = '2009-09-19';
115-
116-	/**
117:	 * Storage host name
118-	 *
119-	 * @var string
120-	 */
121:	protected $_host = '';
122-
123-	/**
124-	 * Account name for Windows Azure]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[196]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[193-	/**
194-	 * Creates a new Microsoft_WindowsAzure_Storage instance
195-	 *
196:	 * @param string $host Storage host name
197-	 * @param string $accountName Account name for Windows Azure
198-	 * @param string $accountKey Account key for Windows Azure
199-	 * @param boolean $usePathStyleUri Use path-style URI's
200-	 * @param Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract $retryPolicy Retry policy to use when making requests
201-	 */
202-	public function __construct(
203:		$host = self::URL_DEV_BLOB,
204-		$accountName = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_ACCOUNT,
205-		$accountKey = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_KEY,
206-		$usePathStyleUri = false,
207-		Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract $retryPolicy = null
208-	) {
209:		$this->_host = $host;
210-		$this->_accountName = $accountName;
211-		$this->_accountKey = $accountKey;
212-		$this->_usePathStyleUri = $usePathStyleUri;
213-
214-		// Using local storage?
215-		if (!$this->_usePathStyleUri
216:			&& ($this->_host == self::URL_DEV_BLOB
217:				|| $this->_host == self::URL_DEV_QUEUE
218:				|| $this->_host == self::URL_DEV_TABLE)
219-		) {
220-			// Local storage
221-			$this->_usePathStyleUri = true;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[300]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[297-	    	$credentials = explode(':', $this->_proxyCredentials);
298-
299-	    	$this->_httpClientChannel->setConfig(array(
300:				'proxy_host' => $this->_proxyUrl,
301-	    		'proxy_port' => $this->_proxyPort,
302-	    		'proxy_user' => $credentials[0],
303-	    		'proxy_pass' => $credentials[1],
304-	    	));
305-	    } else {
306-			$this->_httpClientChannel->setConfig(array(
307:				'proxy_host' => '',
308-	    		'proxy_port' => 8080,
309-	    		'proxy_user' => '',
310-	    		'proxy_pass' => '',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[333]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[330-	public function getBaseUrl()
331-	{
332-		if ($this->_usePathStyleUri) {
333:			return 'http://' . $this->_host . '/' . $this->_accountName;
334-		} else {
335:			return 'http://' . $this->_accountName . '.' . $this->_host;
336-		}
337-	}
338-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[114]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[111-	/**
112-	 * Checks if a configuration for a specific role instance exists.
113-	 *
114:	 * @param string $roleInstance Role instance name, can be found in $_SERVER['RdRoleId'] when hosted on Windows Azure.
115-	 * @return boolean
116-	 * @throws Microsoft_WindowsAzure_Diagnostics_Exception
117-	 */
118-	public function configurationForRoleInstanceExists($roleInstance = null)
119-	{
120-		if (is_null($roleInstance)) {
121:			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Role instance should be specified. Try reading $_SERVER[\'RdRoleId\'] for this information if the application is hosted on Windows Azure Fabric or Development Fabric.');
122-		}
123-
124-		return $this->_blobStorageClient->blobExists($this->_controlContainer, $roleInstance);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[194]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[191-	/**
192-	 * Get configuration for a specific role instance
193-	 *
194:	 * @param string $roleInstance Role instance name, can be found in $_SERVER['RdRoleId'] when hosted on Windows Azure.
195-	 * @return Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance
196-	 * @throws Microsoft_WindowsAzure_Diagnostics_Exception
197-	 */
198-	public function getConfigurationForRoleInstance($roleInstance = null)
199-	{
200-		if (is_null($roleInstance)) {
201:			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Role instance should be specified. Try reading $_SERVER[\'RdRoleId\'] for this information if the application is hosted on Windows Azure Fabric or Development Fabric.');
202-		}
203-
204-		if ($this->_blobStorageClient->blobExists($this->_controlContainer, $roleInstance)) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Diagnostics/Manager.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[216]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[213-	/**
214-	 * Set configuration for a specific role instance
215-	 *
216:	 * @param string $roleInstance Role instance name, can be found in $_SERVER['RdRoleId'] when hosted on Windows Azure.
217-	 * @param Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance $configuration Configuration to apply
218-	 * @throws Microsoft_WindowsAzure_Diagnostics_Exception
219-	 */
220-	public function setConfigurationForRoleInstance($roleInstance = null, Microsoft_WindowsAzure_Diagnostics_ConfigurationInstance $configuration)
221-	{
222-		if (is_null($roleInstance)) {
223:			throw new Microsoft_WindowsAzure_Diagnostics_Exception('Role instance should be specified. Try reading $_SERVER[\'RdRoleId\'] for this information if the application is hosted on Windows Azure Fabric or Development Fabric.');
224-		}
225-
226-		$this->_blobStorageClient->putBlobData($this->_controlContainer, $roleInstance, $configuration->toXml(), array(), null, array('Content-Type' => 'text/xml'));]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Queue.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[102]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[99-	/**
100-	 * Creates a new Microsoft_WindowsAzure_Storage_Queue instance
101-	 *
102:	 * @param string $host Storage host name
103-	 * @param string $accountName Account name for Windows Azure
104-	 * @param string $accountKey Account key for Windows Azure
105-	 * @param boolean $usePathStyleUri Use path-style URI's
106-	 * @param Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract $retryPolicy Retry policy to use when making requests
107-	 */
108:	public function __construct($host = Microsoft_WindowsAzure_Storage::URL_DEV_QUEUE, $accountName = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_ACCOUNT, $accountKey = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_KEY, $usePathStyleUri = false, Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract $retryPolicy = null)
109-	{
110:		parent::__construct($host, $accountName, $accountKey, $usePathStyleUri, $retryPolicy);
111-
112-		// API version
113-		$this->_apiVersion = '2009-09-19';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[178]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[175-	/**
176-	 * Creates a new Microsoft_WindowsAzure_Storage_Blob instance
177-	 *
178:	 * @param string $host Storage host name
179-	 * @param string $accountName Account name for Windows Azure
180-	 * @param string $accountKey Account key for Windows Azure
181-	 * @param boolean $usePathStyleUri Use path-style URI's
182-	 * @param Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract $retryPolicy Retry policy to use when making requests
183-	 */
184:	public function __construct($host = Microsoft_WindowsAzure_Storage::URL_DEV_BLOB, $accountName = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_ACCOUNT, $accountKey = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_KEY, $usePathStyleUri = false, Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract $retryPolicy = null)
185-	{
186:		parent::__construct($host, $accountName, $accountKey, $usePathStyleUri, $retryPolicy);
187-
188-		// API version
189-		$this->_apiVersion = '2009-09-19';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Table.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[145]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[142-	/**
143-	 * Creates a new Microsoft_WindowsAzure_Storage_Table instance
144-	 *
145:	 * @param string $host Storage host name
146-	 * @param string $accountName Account name for Windows Azure
147-	 * @param string $accountKey Account key for Windows Azure
148-	 * @param boolean $usePathStyleUri Use path-style URI's
149-	 * @param Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract $retryPolicy Retry policy to use when making requests
150-	 */
151:	public function __construct($host = Microsoft_WindowsAzure_Storage::URL_DEV_TABLE, $accountName = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_ACCOUNT, $accountKey = Microsoft_WindowsAzure_Credentials_CredentialsAbstract::DEVSTORE_KEY, $usePathStyleUri = false, Microsoft_WindowsAzure_RetryPolicy_RetryPolicyAbstract $retryPolicy = null)
152-	{
153:		parent::__construct($host, $accountName, $accountKey, $usePathStyleUri, $retryPolicy);
154-
155-	    // Always use SharedKeyLite authentication
156-	    $this->_credentials = new Microsoft_WindowsAzure_Credentials_SharedKeyLite($accountName, $accountKey, $this->_usePathStyleUri);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[133]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[130-    protected function _getContainerName($path)
131-    {
132-        $url = parse_url($path);
133:        if ($url['host']) {
134:            return $url['host'];
135-        }
136-
137-        return '';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Storage/Blob/Stream.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[149]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[146-    protected function _getFileName($path)
147-    {
148-        $url = parse_url($path);
149:        if ($url['host']) {
150:            $fileName = isset($url['path']) ? $url['path'] : $url['host'];
151-    	    if (strpos($fileName, '/') === 0) {
152-    	        $fileName = substr($fileName, 1);
153-    	    }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[62-    protected $_password = '';
63-
64-    /**
65:     * HTTP host
66-     *
67-     * @var string
68-     */
69:    protected $_host = '';
70-
71-    /**
72-     * HTTP post]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[216]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[213-        $this->_query    = isset($matches[6]) === true ? $matches[6] : '';
214-        $this->_fragment = isset($matches[8]) === true ? $matches[8] : '';
215-
216:        // Additional decomposition to get username, password, host, and port
217-        $combo   = isset($matches[3]) === true ? $matches[3] : '';
218-        $pattern = '~^(([^:@]*)(:([^@]*))?@)?([^:]+)(:(.*))?$~';
219-        $status  = @preg_match($pattern, $combo, $matches);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[233]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[230-        // Save remaining URI components
231-        $this->_username = isset($matches[2]) === true ? $matches[2] : '';
232-        $this->_password = isset($matches[4]) === true ? $matches[4] : '';
233:        $this->_host     = isset($matches[5]) === true ? $matches[5] : '';
234-        $this->_port     = isset($matches[7]) === true ? $matches[7] : '';
235-
236-    }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[261]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[258-        return $this->_scheme
259-             . '://'
260-             . $auth
261:             . $this->_host
262-             . $port
263-             . $this->_path
264-             . $query]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[416]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[413-    }
414-
415-    /**
416:     * Returns the domain or host IP portion of the URL, or FALSE if none.
417-     *
418-     * @return string
419-     */
420-    public function getHost()
421-    {
422:        return strlen($this->_host) > 0 ? $this->_host : false;
423-    }
424-
425-    /**
426:     * Returns true if and only if the host string passes validation. If no host is passed,
427:     * then the host contained in the instance variable is used.
428-     *
429:     * @param  string $host The HTTP host
430-     * @return boolean
431-     * @uses   Microsoft_Filter
432-     */
433:    public function validateHost($host = null)
434-    {
435:        if ($host === null) {
436:            $host = $this->_host;
437-        }
438-
439:        // If the host is empty, then it is considered invalid
440:        if (strlen($host) === 0) {
441-            return false;
442-        }
443-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Uri/Http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[448]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[445-    }
446-
447-    /**
448:     * Sets the host for the current URI, and returns the old host
449-     *
450:     * @param  string $host The HTTP host
451:     * @throws Microsoft_Uri_Exception When $host is nota valid HTTP host
452-     * @return string
453-     */
454:    public function setHost($host)
455-    {
456:        if ($this->validateHost($host) === false) {
457-            require_once 'Microsoft/Uri/Exception.php';
458:            throw new Microsoft_Uri_Exception("Host \"$host\" is not a valid HTTP host");
459-        }
460-
461:        $oldHost     = $this->_host;
462:        $this->_host = $host;
463-
464-        return $oldHost;
465-    }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS/UriRewriter.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[231]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[228-                if (w3_is_url(self::$_prependRelativePath)) {
229-                    $parse_url = @parse_url(self::$_prependRelativePath);
230-
231:                    if ($parse_url && isset($parse_url['host'])) {
232-                        $scheme = $parse_url['scheme'];
233:                        $host = $parse_url['host'];
234-                        $port = (isset($parse_url['port']) && $parse_url['port'] != 80 ? ':' . (int) $parse_url['port'] : '');
235-                        $path = (!empty($parse_url['path']) ? $parse_url['path'] : '/');
236-                        $dir_css = preg_replace('~[^/]+$~', '', $path);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/CSS/UriRewriter.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[241]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[238-                        $dir = (ltrim((strpos($dir_obj, '/') === 0 ? w3_realpath($dir_obj) : w3_realpath($dir_css . $dir_obj)), '/'));
239-                        $file = basename($uri);
240-
241:                        $uri = sprintf('%s://%s%s/%s/%s', $scheme, $host, $port, $dir, $file);
242-                    }
243-                } else {
244-                    $uri = self::$_prependRelativePath . $uri;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Minify/Minify/Cache/Memcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[10- * <code>
11- * // fall back to disk caching if memcache can't connect
12- * $memcache = new Memcache;
13: * if ($memcache->connect('localhost', 11211)) {
14- *     Minify::setCache(new Minify_Cache_Memcache($memcache));
15- * } else {
16- *     Minify::setCache();]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[217]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[214-	*
215-	* @param string $bucket Bucket name
216-	* @param constant $acl ACL flag
217:	* @param string $location Set as "EU" to create buckets hosted in Europe
218-	* @return boolean
219-	*/
220-	public static function putBucket($bucket, $acl = self::ACL_PRIVATE, $location = false) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[811]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[808-	* @param string $bucket Bucket name
809-	* @param string $uri Object URI
810-	* @param integer $lifetime Lifetime in seconds
811:	* @param boolean $hostBucket Use the bucket name as the hostname
812:	* @param boolean $https Use HTTPS ($hostBucket should be false for SSL verification)
813-	* @return string
814-	*/
815:	public static function getAuthenticatedURL($bucket, $uri, $lifetime, $hostBucket = false, $https = false) {
816-		$expires = time() + $lifetime;
817-		$uri = str_replace('%2F', '/', rawurlencode($uri)); // URI should be encoded (thanks Sean O'Dea)
818-		return sprintf(($https ? 'https' : 'http').'://%s/%s?AWSAccessKeyId=%s&Expires=%u&Signature=%s',
819:		$hostBucket ? $bucket : $bucket.'.s3.amazonaws.com', $uri, self::$__accessKey, $expires,
820-		urlencode(self::__getHash("GET\n\n\n{$expires}\n/{$bucket}/{$uri}")));
821-	}
822-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/S3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[885]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[882-	* @param string $originType Origin Type
883-	* @param boolean $enabled Enabled (true/false)
884-	* @param array $cnames Array containing CNAME aliases
885:	* @param string $comment Use the bucket name as the hostname
886-	* @return array | false
887-	*/
888-	public static function createDistribution($dnsName, $originType = self::ORIGIN_TYPE_S3, $enabled = true, $cnames = array(), $comment = '') {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[22]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[19-	var $uri = '';
20-	var $digest_uri = '';
21-	var $scheme = '';
22:	var $host = '';
23-	var $port = '';
24-	var $path = '';
25-	var $request_method = 'POST';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[44]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[41-	var $password = '';
42-	var $authtype = '';
43-	var $digestRequest = array();
44:	var $certRequest = array();	// keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional)
45-								// cainfofile: certificate authority file, e.g. '$pathToPemFiles/rootca.pem'
46-								// sslcertfile: SSL certificate file, e.g. '$pathToPemFiles/mycert.pem'
47-								// sslkeyfile: SSL key file, e.g. '$pathToPemFiles/mykey.pem'
48-								// passphrase: SSL key password/passphrase
49-								// certpassword: SSL certificate password
50-								// verifypeer: default is 1
51:								// verifyhost: default is 1
52-
53-	/**
54-	* constructor]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[146]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[143-
144-		// build headers
145-		if (!isset($u['port'])) {
146:			$this->setHeader('Host', $this->host);
147-		} else {
148:			$this->setHeader('Host', $this->host.':'.$this->port);
149-		}
150-
151-		if (isset($u['user']) && $u['user'] != '') {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[191]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[188-//		  		}
189-//		  	}
190-//		}
191:		$this->debug("connect connection_timeout $connection_timeout, response_timeout $response_timeout, scheme $this->scheme, host $this->host, port $this->port");
192-	  if ($this->io_method() == 'socket') {
193-		if (!is_array($this->proxy)) {
194:			$host = $this->host;
195-			$port = $this->port;
196-		} else {
197:			$host = $this->proxy['host'];
198-			$port = $this->proxy['port'];
199-		}
200-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[211]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[208-			$this->debug('Closed persistent connection at EOF');
209-		}
210-
211:		// munge host if using OpenSSL
212-		if ($this->scheme == 'ssl') {
213:			$host = 'ssl://' . $host;
214-		}
215:		$this->debug('calling fsockopen with host ' . $host . ' connection_timeout ' . $connection_timeout);
216-
217-		// open socket
218-		if($connection_timeout > 0){
219:			$this->fp = @fsockopen( $host, $this->port, $this->errno, $this->error_str, $connection_timeout);
220-		} else {
221:			$this->fp = @fsockopen( $host, $this->port, $this->errno, $this->error_str);
222-		}
223-
224-		// test pointer]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[230]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[227-			if ($this->errno) {
228-				$msg .= ', Error ('.$this->errno.'): '.$this->error_str;
229-			} else {
230:				$msg .= ' prior to connect().  This is often a problem looking up the host name.';
231-			}
232-			$this->debug($msg);
233-			$this->setError($msg);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[279]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[276-		// init CURL
277-		$this->ch = curl_init();
278-		// set url
279:		$hostURL = ($this->port != '') ? "$this->scheme://$this->host:$this->port" : "$this->scheme://$this->host";
280-		// add path
281:		$hostURL .= $this->path;
282:		$this->setCurlOption(CURLOPT_URL, $hostURL);
283-		// follow location headers (re-directs)
284-		if (ini_get('safe_mode') || ini_get('open_basedir')) {
285-			$this->debug('safe_mode or open_basedir set, so do not set CURLOPT_FOLLOWLOCATION');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[322]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[319-
320-		if ($this->scheme == 'https') {
321-			$this->debug('set cURL SSL verify options');
322:			// recent versions of cURL turn on peer/host checking by default,
323-			// while PHP binaries are not compiled with a default location for the
324:			// CA cert bundle, so disable peer/host checking.
325-			//$this->setCurlOption(CURLOPT_CAINFO, 'f:\php-4.3.2-win32\extensions\curl-ca-bundle.crt');
326-			$this->setCurlOption(CURLOPT_SSL_VERIFYPEER, 0);
327-			$this->setCurlOption(CURLOPT_SSL_VERIFYHOST, 0);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[340]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[337-				} else {
338-					$this->setCurlOption(CURLOPT_SSL_VERIFYPEER, 1);
339-				}
340:				if (isset($this->certRequest['verifyhost'])) {
341:					$this->setCurlOption(CURLOPT_SSL_VERIFYHOST, $this->certRequest['verifyhost']);
342-				} else {
343-					$this->setCurlOption(CURLOPT_SSL_VERIFYHOST, 1);
344-				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[380]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[377-		if (is_array($this->proxy)) {
378-			$this->debug('set cURL proxy options');
379-			if ($this->proxy['port'] != '') {
380:				$this->setCurlOption(CURLOPT_PROXY, $this->proxy['host'].':'.$this->proxy['port']);
381-			} else {
382:				$this->setCurlOption(CURLOPT_PROXY, $this->proxy['host']);
383-			}
384-			if ($this->proxy['username'] || $this->proxy['password']) {
385-				$this->debug('set cURL proxy authentication options');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[466]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[463-	* @param    string $password
464-	* @param	string $authtype (basic|digest|certificate|ntlm)
465-	* @param	array $digestRequest (keys must be nonce, nc, realm, qop)
466:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
467-	* @access   public
468-	*/
469-	function setCredentials($username, $password, $authtype = 'basic', $digestRequest = array(), $certRequest = array()) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[570]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[567-	/**
568-	* set proxy info here
569-	*
570:	* @param    string $proxyhost use an empty string to remove proxy
571-	* @param    string $proxyport
572-	* @param	string $proxyusername
573-	* @param	string $proxypassword
574-	* @param	string $proxyauthtype (basic|ntlm)
575-	* @access   public
576-	*/
577:	function setProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '', $proxyauthtype = 'basic') {
578:		if ($proxyhost) {
579-			$this->proxy = array(
580:				'host' => $proxyhost,
581-				'port' => $proxyport,
582-				'username' => $proxyusername,
583-				'password' => $proxypassword,]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soap_transport_http.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1283]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1280-				}
1281-				if ((isset($cookie['domain'])) && (! empty($cookie['domain']))) {
1282-					$domain = preg_quote($cookie['domain']);
1283:					if (! preg_match("'.*$domain$'i", $this->host)) {
1284-						$this->debug('cookie has different domain');
1285-						continue;
1286-					}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2175]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2172-	var $uri = '';
2173-	var $digest_uri = '';
2174-	var $scheme = '';
2175:	var $host = '';
2176-	var $port = '';
2177-	var $path = '';
2178-	var $request_method = 'POST';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2197]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2194-	var $password = '';
2195-	var $authtype = '';
2196-	var $digestRequest = array();
2197:	var $certRequest = array();	// keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional)
2198-								// cainfofile: certificate authority file, e.g. '$pathToPemFiles/rootca.pem'
2199-								// sslcertfile: SSL certificate file, e.g. '$pathToPemFiles/mycert.pem'
2200-								// sslkeyfile: SSL key file, e.g. '$pathToPemFiles/mykey.pem'
2201-								// passphrase: SSL key password/passphrase
2202-								// certpassword: SSL certificate password
2203-								// verifypeer: default is 1
2204:								// verifyhost: default is 1
2205-
2206-	/**
2207-	* constructor]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2299]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2296-		
2297-		// build headers
2298-		if (!isset($u['port'])) {
2299:			$this->setHeader('Host', $this->host);
2300-		} else {
2301:			$this->setHeader('Host', $this->host.':'.$this->port);
2302-		}
2303-
2304-		if (isset($u['user']) && $u['user'] != '') {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2344]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2341-//		  		}
2342-//		  	}
2343-//		}
2344:		$this->debug("connect connection_timeout $connection_timeout, response_timeout $response_timeout, scheme $this->scheme, host $this->host, port $this->port");
2345-	  if ($this->io_method() == 'socket') {
2346-		if (!is_array($this->proxy)) {
2347:			$host = $this->host;
2348-			$port = $this->port;
2349-		} else {
2350:			$host = $this->proxy['host'];
2351-			$port = $this->proxy['port'];
2352-		}
2353-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2364]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2361-			$this->debug('Closed persistent connection at EOF');
2362-		}
2363-
2364:		// munge host if using OpenSSL
2365-		if ($this->scheme == 'ssl') {
2366:			$host = 'ssl://' . $host;
2367-		}
2368:		$this->debug('calling fsockopen with host ' . $host . ' connection_timeout ' . $connection_timeout);
2369-
2370-		// open socket
2371-		if($connection_timeout > 0){
2372:			$this->fp = @fsockopen( $host, $this->port, $this->errno, $this->error_str, $connection_timeout);
2373-		} else {
2374:			$this->fp = @fsockopen( $host, $this->port, $this->errno, $this->error_str);
2375-		}
2376-		
2377-		// test pointer]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2383]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2380-			if ($this->errno) {
2381-				$msg .= ', Error ('.$this->errno.'): '.$this->error_str;
2382-			} else {
2383:				$msg .= ' prior to connect().  This is often a problem looking up the host name.';
2384-			}
2385-			$this->debug($msg);
2386-			$this->setError($msg);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2432]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2429-		// init CURL
2430-		$this->ch = curl_init();
2431-		// set url
2432:		$hostURL = ($this->port != '') ? "$this->scheme://$this->host:$this->port" : "$this->scheme://$this->host";
2433-		// add path
2434:		$hostURL .= $this->path;
2435:		$this->setCurlOption(CURLOPT_URL, $hostURL);
2436-		// follow location headers (re-directs)
2437-		if (ini_get('safe_mode') || ini_get('open_basedir')) {
2438-			$this->debug('safe_mode or open_basedir set, so do not set CURLOPT_FOLLOWLOCATION');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2475]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2472-
2473-		if ($this->scheme == 'https') {
2474-			$this->debug('set cURL SSL verify options');
2475:			// recent versions of cURL turn on peer/host checking by default,
2476-			// while PHP binaries are not compiled with a default location for the
2477:			// CA cert bundle, so disable peer/host checking.
2478-			//$this->setCurlOption(CURLOPT_CAINFO, 'f:\php-4.3.2-win32\extensions\curl-ca-bundle.crt');		
2479-			$this->setCurlOption(CURLOPT_SSL_VERIFYPEER, 0);
2480-			$this->setCurlOption(CURLOPT_SSL_VERIFYHOST, 0);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2493]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2490-				} else {
2491-					$this->setCurlOption(CURLOPT_SSL_VERIFYPEER, 1);
2492-				}
2493:				if (isset($this->certRequest['verifyhost'])) {
2494:					$this->setCurlOption(CURLOPT_SSL_VERIFYHOST, $this->certRequest['verifyhost']);
2495-				} else {
2496-					$this->setCurlOption(CURLOPT_SSL_VERIFYHOST, 1);
2497-				}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2533]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2530-		if (is_array($this->proxy)) {
2531-			$this->debug('set cURL proxy options');
2532-			if ($this->proxy['port'] != '') {
2533:				$this->setCurlOption(CURLOPT_PROXY, $this->proxy['host'].':'.$this->proxy['port']);
2534-			} else {
2535:				$this->setCurlOption(CURLOPT_PROXY, $this->proxy['host']);
2536-			}
2537-			if ($this->proxy['username'] || $this->proxy['password']) {
2538-				$this->debug('set cURL proxy authentication options');]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2619]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2616-	* @param    string $password
2617-	* @param	string $authtype (basic|digest|certificate|ntlm)
2618-	* @param	array $digestRequest (keys must be nonce, nc, realm, qop)
2619:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
2620-	* @access   public
2621-	*/
2622-	function setCredentials($username, $password, $authtype = 'basic', $digestRequest = array(), $certRequest = array()) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2723]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[2720-	/**
2721-	* set proxy info here
2722-	*
2723:	* @param    string $proxyhost use an empty string to remove proxy
2724-	* @param    string $proxyport
2725-	* @param	string $proxyusername
2726-	* @param	string $proxypassword
2727-	* @param	string $proxyauthtype (basic|ntlm)
2728-	* @access   public
2729-	*/
2730:	function setProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '', $proxyauthtype = 'basic') {
2731:		if ($proxyhost) {
2732-			$this->proxy = array(
2733:				'host' => $proxyhost,
2734-				'port' => $proxyport,
2735-				'username' => $proxyusername,
2736-				'password' => $proxypassword,]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[3436]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[3433-				}
3434-				if ((isset($cookie['domain'])) && (! empty($cookie['domain']))) {
3435-					$domain = preg_quote($cookie['domain']);
3436:					if (! preg_match("'.*$domain$'i", $this->host)) {
3437-						$this->debug('cookie has different domain');
3438-						continue;
3439-					}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4626]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[4623-    var $depth = 0;
4624-    var $depth_array = array();
4625-	// for getting wsdl
4626:	var $proxyhost = '';
4627-    var $proxyport = '';
4628-	var $proxyusername = '';
4629-	var $proxypassword = '';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4644]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[4641-     * constructor
4642-     * 
4643-     * @param string $wsdl WSDL document URL
4644:	 * @param string $proxyhost
4645-	 * @param string $proxyport
4646-	 * @param string $proxyusername
4647-	 * @param string $proxypassword]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4654]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[4651-	 * @param boolean $use_curl try to use cURL
4652-     * @access public 
4653-     */
4654:    function wsdl($wsdl = '',$proxyhost=false,$proxyport=false,$proxyusername=false,$proxypassword=false,$timeout=0,$response_timeout=30,$curl_options=null,$use_curl=false){
4655-		parent::nusoap_base();
4656-		$this->debug("ctor wsdl=$wsdl timeout=$timeout response_timeout=$response_timeout");
4657:        $this->proxyhost = $proxyhost;
4658-        $this->proxyport = $proxyport;
4659-		$this->proxyusername = $proxyusername;
4660-		$this->proxypassword = $proxypassword;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4698]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[4695-		                		$url = $list2[$ii]['location'];
4696-								if ($url != '') {
4697-									$urlparts = parse_url($url);
4698:									if (!isset($urlparts['host'])) {
4699:										$url = $wsdlparts['scheme'] . '://' . $wsdlparts['host'] . (isset($wsdlparts['port']) ? ':' .$wsdlparts['port'] : '') .
4700-												substr($wsdlparts['path'],0,strrpos($wsdlparts['path'],'/') + 1) .$urlparts['path'];
4701-									}
4702-									if (! in_array($url, $imported_urls)) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4724]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[4721-                		$url = $list[$ii]['location'];
4722-						if ($url != '') {
4723-							$urlparts = parse_url($url);
4724:							if (!isset($urlparts['host'])) {
4725:								$url = $wsdlparts['scheme'] . '://' . $wsdlparts['host'] . (isset($wsdlparts['port']) ? ':' . $wsdlparts['port'] : '') .
4726-										substr($wsdlparts['path'],0,strrpos($wsdlparts['path'],'/') + 1) .$urlparts['path'];
4727-							}
4728-							if (! in_array($url, $imported_urls)) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4795]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[4792-	        $tr = new soap_transport_http($wsdl, $this->curl_options, $this->use_curl);
4793-			$tr->request_method = 'GET';
4794-			$tr->useSOAPAction = false;
4795:			if($this->proxyhost && $this->proxyport){
4796:				$tr->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
4797-			}
4798-			if ($this->authtype != '') {
4799-				$tr->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4819]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[4816-        } else {
4817-            // $wsdl is not http(s), so treat it as a file URL or plain file path
4818-        	if (isset($wsdl_props['scheme']) && ($wsdl_props['scheme'] == 'file') && isset($wsdl_props['path'])) {
4819:        		$path = isset($wsdl_props['host']) ? ($wsdl_props['host'] . ':' . $wsdl_props['path']) : $wsdl_props['path'];
4820-        	} else {
4821-        		$path = $wsdl;
4822-        	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[5141]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[5138-	* @param    string $username
5139-	* @param    string $password
5140-	* @param	string $authtype (basic|digest|certificate|ntlm)
5141:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
5142-	* @access   public
5143-	*/
5144-	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7195]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7192-	var $document = '';				// SOAP body response portion (incomplete namespace resolution) (text)
7193-	var $endpoint;
7194-	var $forceEndpoint = '';		// overrides WSDL endpoint
7195:    var $proxyhost = '';
7196-    var $proxyport = '';
7197-	var $proxyusername = '';
7198-	var $proxypassword = '';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7246]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7243-	*
7244-	* @param    mixed $endpoint SOAP server or WSDL URL (string), or wsdl instance (object)
7245-	* @param    mixed $wsdl optional, set to 'wsdl' or true if using WSDL
7246:	* @param    string $proxyhost optional
7247-	* @param    string $proxyport optional
7248-	* @param	string $proxyusername optional
7249-	* @param	string $proxypassword optional]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7255]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7252-	* @param	string $portName optional portName in WSDL document
7253-	* @access   public
7254-	*/
7255:	function nusoap_client($endpoint,$wsdl = false,$proxyhost = false,$proxyport = false,$proxyusername = false, $proxypassword = false, $timeout = 0, $response_timeout = 30, $portName = ''){
7256-		parent::nusoap_base();
7257-		$this->endpoint = $endpoint;
7258:		$this->proxyhost = $proxyhost;
7259-		$this->proxyport = $proxyport;
7260-		$this->proxyusername = $proxyusername;
7261-		$this->proxypassword = $proxypassword;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7532]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7529-	 */
7530-	function loadWSDL() {
7531-		$this->debug('instantiating wsdl class with doc: '.$this->wsdlFile);
7532:		$this->wsdl = new wsdl('',$this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword,$this->timeout,$this->response_timeout,$this->curl_options,$this->use_curl);
7533-		$this->wsdl->setCredentials($this->username, $this->password, $this->authtype, $this->certRequest);
7534-		$this->wsdl->fetchWSDL($this->wsdlFile);
7535-		$this->checkWSDL();]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7588]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7585-				}
7586-				$http->setContentType($this->getHTTPContentType(), $this->getHTTPContentTypeCharset());
7587-				$http->setSOAPAction($soapaction);
7588:				if($this->proxyhost && $this->proxyport){
7589:					$http->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
7590-				}
7591-                if($this->authtype != '') {
7592-					$http->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7758]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7755-	/**
7756-	* set proxy info here
7757-	*
7758:	* @param    string $proxyhost
7759-	* @param    string $proxyport
7760-	* @param	string $proxyusername
7761-	* @param	string $proxypassword
7762-	* @access   public
7763-	*/
7764:	function setHTTPProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '') {
7765:		$this->proxyhost = $proxyhost;
7766-		$this->proxyport = $proxyport;
7767-		$this->proxyusername = $proxyusername;
7768-		$this->proxypassword = $proxypassword;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7777]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7774-	* @param    string $username
7775-	* @param    string $password
7776-	* @param	string $authtype (basic|digest|certificate|ntlm)
7777:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
7778-	* @access   public
7779-	*/
7780-	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/nusoap.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7885]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7882-		$proxy->requestHeaders = $this->requestHeaders;
7883-		$proxy->endpoint = $this->endpoint;
7884-		$proxy->forceEndpoint = $this->forceEndpoint;
7885:		$proxy->proxyhost = $this->proxyhost;
7886-		$proxy->proxyport = $this->proxyport;
7887-		$proxy->proxyusername = $this->proxyusername;
7888-		$proxy->proxypassword = $this->proxypassword;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[45]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[42-    var $depth = 0;
43-    var $depth_array = array();
44-	// for getting wsdl
45:	var $proxyhost = '';
46-    var $proxyport = '';
47-	var $proxyusername = '';
48-	var $proxypassword = '';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[63]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[60-     * constructor
61-     *
62-     * @param string $wsdl WSDL document URL
63:	 * @param string $proxyhost
64-	 * @param string $proxyport
65-	 * @param string $proxyusername
66-	 * @param string $proxypassword]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[70-	 * @param boolean $use_curl try to use cURL
71-     * @access public
72-     */
73:    function wsdl($wsdl = '',$proxyhost=false,$proxyport=false,$proxyusername=false,$proxypassword=false,$timeout=0,$response_timeout=30,$curl_options=null,$use_curl=false){
74-		parent::nusoap_base();
75-		$this->debug("ctor wsdl=$wsdl timeout=$timeout response_timeout=$response_timeout");
76:        $this->proxyhost = $proxyhost;
77-        $this->proxyport = $proxyport;
78-		$this->proxyusername = $proxyusername;
79-		$this->proxypassword = $proxypassword;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[117]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[114-		                		$url = $list2[$ii]['location'];
115-								if ($url != '') {
116-									$urlparts = parse_url($url);
117:									if (!isset($urlparts['host'])) {
118:										$url = $wsdlparts['scheme'] . '://' . $wsdlparts['host'] . (isset($wsdlparts['port']) ? ':' .$wsdlparts['port'] : '') .
119-												substr($wsdlparts['path'],0,strrpos($wsdlparts['path'],'/') + 1) .$urlparts['path'];
120-									}
121-									if (! in_array($url, $imported_urls)) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[143]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[140-                		$url = $list[$ii]['location'];
141-						if ($url != '') {
142-							$urlparts = parse_url($url);
143:							if (!isset($urlparts['host'])) {
144:								$url = $wsdlparts['scheme'] . '://' . $wsdlparts['host'] . (isset($wsdlparts['port']) ? ':' . $wsdlparts['port'] : '') .
145-										substr($wsdlparts['path'],0,strrpos($wsdlparts['path'],'/') + 1) .$urlparts['path'];
146-							}
147-							if (! in_array($url, $imported_urls)) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[214]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[211-	        $tr = new soap_transport_http($wsdl, $this->curl_options, $this->use_curl);
212-			$tr->request_method = 'GET';
213-			$tr->useSOAPAction = false;
214:			if($this->proxyhost && $this->proxyport){
215:				$tr->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
216-			}
217-			if ($this->authtype != '') {
218-				$tr->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[238]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[235-        } else {
236-            // $wsdl is not http(s), so treat it as a file URL or plain file path
237-        	if (isset($wsdl_props['scheme']) && ($wsdl_props['scheme'] == 'file') && isset($wsdl_props['path'])) {
238:        		$path = isset($wsdl_props['host']) ? ($wsdl_props['host'] . ':' . $wsdl_props['path']) : $wsdl_props['path'];
239-        	} else {
240-        		$path = $wsdl;
241-        	}]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.wsdl.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[560]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[557-	* @param    string $username
558-	* @param    string $password
559-	* @param	string $authtype (basic|digest|certificate|ntlm)
560:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, certpassword (optional), verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
561-	* @access   public
562-	*/
563-	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[39]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[36-	var $document = '';				// SOAP body response portion (incomplete namespace resolution) (text)
37-	var $endpoint;
38-	var $forceEndpoint = '';		// overrides WSDL endpoint
39:    var $proxyhost = '';
40-    var $proxyport = '';
41-	var $proxyusername = '';
42-	var $proxypassword = '';]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[90]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[87-	*
88-	* @param    mixed $endpoint SOAP server or WSDL URL (string), or wsdl instance (object)
89-	* @param    mixed $wsdl optional, set to 'wsdl' or true if using WSDL
90:	* @param    string $proxyhost optional
91-	* @param    string $proxyport optional
92-	* @param	string $proxyusername optional
93-	* @param	string $proxypassword optional]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[99]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[96-	* @param	string $portName optional portName in WSDL document
97-	* @access   public
98-	*/
99:	function nusoap_client($endpoint,$wsdl = false,$proxyhost = false,$proxyport = false,$proxyusername = false, $proxypassword = false, $timeout = 0, $response_timeout = 30, $portName = ''){
100-		parent::nusoap_base();
101-		$this->endpoint = $endpoint;
102:		$this->proxyhost = $proxyhost;
103-		$this->proxyport = $proxyport;
104-		$this->proxyusername = $proxyusername;
105-		$this->proxypassword = $proxypassword;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[376]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[373-	 */
374-	function loadWSDL() {
375-		$this->debug('instantiating wsdl class with doc: '.$this->wsdlFile);
376:		$this->wsdl = new wsdl('',$this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword,$this->timeout,$this->response_timeout,$this->curl_options,$this->use_curl);
377-		$this->wsdl->setCredentials($this->username, $this->password, $this->authtype, $this->certRequest);
378-		$this->wsdl->fetchWSDL($this->wsdlFile);
379-		$this->checkWSDL();]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[432]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[429-				}
430-				$http->setContentType($this->getHTTPContentType(), $this->getHTTPContentTypeCharset());
431-				$http->setSOAPAction($soapaction);
432:				if($this->proxyhost && $this->proxyport){
433:					$http->setProxy($this->proxyhost,$this->proxyport,$this->proxyusername,$this->proxypassword);
434-				}
435-                if($this->authtype != '') {
436-					$http->setCredentials($this->username, $this->password, $this->authtype, array(), $this->certRequest);]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[602]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[599-	/**
600-	* set proxy info here
601-	*
602:	* @param    string $proxyhost
603-	* @param    string $proxyport
604-	* @param	string $proxyusername
605-	* @param	string $proxypassword
606-	* @access   public
607-	*/
608:	function setHTTPProxy($proxyhost, $proxyport, $proxyusername = '', $proxypassword = '') {
609:		$this->proxyhost = $proxyhost;
610-		$this->proxyport = $proxyport;
611-		$this->proxyusername = $proxyusername;
612-		$this->proxypassword = $proxypassword;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[621]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[618-	* @param    string $username
619-	* @param    string $password
620-	* @param	string $authtype (basic|digest|certificate|ntlm)
621:	* @param	array $certRequest (keys must be cainfofile (optional), sslcertfile, sslkeyfile, passphrase, verifypeer (optional), verifyhost (optional): see corresponding options in cURL docs)
622-	* @access   public
623-	*/
624-	function setCredentials($username, $password, $authtype = 'basic', $certRequest = array()) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Nusoap/class.soapclient.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[729]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[726-		$proxy->requestHeaders = $this->requestHeaders;
727-		$proxy->endpoint = $this->endpoint;
728-		$proxy->forceEndpoint = $this->forceEndpoint;
729:		$proxy->proxyhost = $this->proxyhost;
730-		$proxy->proxyport = $this->proxyport;
731-		$proxy->proxyusername = $this->proxyusername;
732-		$proxy->proxypassword = $this->proxypassword;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[147]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[144-}
145-
146-/**
147: * Returns true if WPMU uses vhosts
148- *
149- * @return boolean
150- */]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[280]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[277-}
278-
279-/**
280: * Returns domain from host
281- *
282: * @param string $host
283- * @return string
284- */
285:function w3_get_domain($host) {
286:    $host = strtolower($host);
287-
288:    if (strpos($host, 'www.') === 0) {
289:        $host = substr($host, 4);
290-    }
291-
292:    if (($pos = strpos($host, ':')) !== false) {
293:        $host = substr($host, 0, $pos);
294-    }
295-
296:    $host = rtrim($host, '.');
297-
298:    return $host;
299-}
300-
301-/**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[372]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[369-
370-    if ($blogname === null) {
371-        if (w3_is_network()) {
372:            $host = w3_get_host();
373:            $domain = w3_get_domain($host);
374-
375-            if (w3_is_subdomain_install()) {
376-                $blogname = $domain;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[478]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[475-    $home_url = w3_get_home_url();
476-    $parse_url = @parse_url($home_url);
477-
478:    if ($parse_url && isset($parse_url['scheme']) && isset($parse_url['host'])) {
479-        $scheme = $parse_url['scheme'];
480:        $host = $parse_url['host'];
481-        $port = (isset($parse_url['port']) && $parse_url['port'] != 80 ? ':' . (int) $parse_url['port'] : '');
482:        $domain_url = sprintf('%s://%s%s', $scheme, $host, $port);
483-
484-        return $domain_url;
485-    }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[608]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[605- *
606- * Example:
607- *
608: * DOCUMENT_ROOT=/var/www/vhosts/domain.com
609: * Install dir=/var/www/vhosts/domain.com/site/blog
610- * home=http://domain.com/site
611- * siteurl=http://domain.com/site/blog
612: * return /var/www/vhosts/domain.com/site
613- *
614- * No trailing slash!
615- *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[637]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[634- *
635- * Example:
636- *
637: * DOCUMENT_ROOT=/var/www/vhosts/domain.com
638: * install dir=/var/www/vhosts/domain.com/site/blog
639: * return /var/www/vhosts/domain.com/site/blog
640- *
641- * No trailing slash!
642- *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[691]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[688-    $home_url = w3_get_home_url();
689-    $parse_url = @parse_url($home_url);
690-
691:    if ($parse_url && isset($parse_url['host'])) {
692:        return $parse_url['host'];
693-    }
694-
695:    return w3_get_host();
696-}
697-
698-/**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[733]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[730- *
731- * Example:
732- *
733: * DOCUMENT_ROOT=/var/www/vhosts/domain.com/
734: * Install dir=/var/www/vhosts/domain.com/site/blog/
735- * return /site/blog/
736- *
737- * With trailing slash!]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[756]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[753-}
754-
755-/**
756: * Returns server hostname
757- *
758- * @return string
759- */
760:function w3_get_host() {
761:    static $host = null;
762-
763:    if ($host === null) {
764:        $host = (!empty($_SERVER['HTTP_X_FORWARDED_HOST']) ? $_SERVER['HTTP_X_FORWARDED_HOST'] : $_SERVER['HTTP_HOST']);
765-    }
766-
767:    return $host;
768-}
769-
770-/**
771: * Returns host ID
772- *
773- * @return string
774- */
775:function w3_get_host_id() {
776:    static $host_id = null;
777-
778:    if ($host_id === null) {
779:        $host = w3_get_host();
780-        $blog_id = w3_get_blog_id();
781-
782:        $host_id = sprintf('%s_%d', $host, $blog_id);
783-    }
784-
785:    return $host_id;
786-}
787-
788-/**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[872]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[869-        (isset($GLOBALS['blog_id']) ? (int) $GLOBALS['blog_id'] : 0),
870-        (isset($GLOBALS['post_id']) ? (int) $GLOBALS['post_id'] : 0),
871-        w3_get_blogname(),
872:        w3_get_host(),
873:        w3_get_domain(w3_get_host()),
874-        trim(w3_get_base_path(), '/')
875-    ), $path);
876-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1075]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[1072-            break;
1073-
1074-        case 'ftp':
1075:            $engine_name = 'self-hosted / file transfer protocol upload';
1076-            break;
1077-
1078-        case 's3':]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/lightbox/self_test.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[62-            <?php else: ?>
63-            <code>Not installed</code>
64-            <?php endif; ?>
65:            <span class="w3tc-self-test-hint">(required for Self-hosted (FTP) CDN support)</span>
66-        </li>
67-
68-        <li>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/objectcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[24]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[21-        <table class="form-table">
22-        	<?php if ($this->_config->get_string('objectcache.engine') == 'memcached'): ?>
23-        	<tr>
24:        		<th><label for="memcached_servers">Memcached hostname:port / <acronym title="Internet Protocol">IP</acronym>:port:</label></th>
25-        		<td>
26-        			<input id="memcached_servers" type="text" name="objectcache.memcached.servers" value="<?php echo htmlspecialchars(implode(',', $this->_config->get_array('objectcache.memcached.servers'))); ?>" size="100" />
27-        			<input id="memcached_test" class="button {nonce: '<?php echo wp_create_nonce('w3tc'); ?>'}" type="button" value="Test" />]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[8]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[5-    <ol>
6-        <li>
7-        	Set the permissions of wp-content/ back to 755, e.g.:
8:         	<pre class="console"># chmod 755 /var/www/vhosts/domain.com/httpdocs/wp-content/</pre>
9-        </li>
10-        <li>On the "<a href="admin.php?page=w3tc_general">General</a>" tab and select your caching methods for page, database and minify. In most cases, "disk enhanced" mode for page cache, "disk" mode for minify and "disk" mode for database caching are "good" settings.</li>
11-        <li><em>Recommended:</em> On the "<a href="admin.php?page=w3tc_minify">Minify</a>" tab all of the recommended settings are preset. Use the help button to simplify discovery of your <acronym title="Cascading Style Sheet">CSS</acronym> and <acronym title="JavaScript">JS</acronym> files and groups. Pay close attention to the method and location of your <acronym title="JavaScript">JS</acronym> group embeddings. See the plugin's <a href="admin.php?page=w3tc_faq">FAQ</a> for more information on usage.</li>
12-        <li><em>Recommended:</em> On the "<a href="admin.php?page=w3tc_browsercache">Browser Cache</a>" tab, <acronym title="Hypertext Transfer Protocol">HTTP</acronym> compression is enabled by default. Make sure to enable other options to suit your goals.</li>
13:        <li><em>Recommended:</em> If you already have a content delivery network (<acronym title="Content Delivery Network">CDN</acronym>) provider, proceed to the "<a href="admin.php?page=w3tc_cdn">Content Delivery Network</a>" tab and populate the fields and set your preferences. If you do not use the Media Library, you will need to import your images etc into the default locations. Use the Media Library Import Tool on the "Content Delivery Network" tab to perform this task. If you do not have a <acronym title="Content Delivery Network">CDN</acronym> provider, you can still improve your site's performance using the "Self-hosted" method. On your own server, create a subdomain and matching <acronym title="Domain Name System">DNS</acronym> Zone record; e.g. static.domain.com and configure <acronym title="File Transfer Protocol">FTP</acronym> options on the "Content Delivery Network" tab accordingly. Be sure to <acronym title="File Transfer Protocol">FTP</acronym> upload the appropriate files, using the available upload buttons.</li>
14:        <li><em>Optional:</em> On the "<a href="admin.php?page=w3tc_dbcache">Database Cache</a>" tab the recommended settings are preset. If using a shared hosting account use the "disk" method with caution; in either of these cases the response time of the disk may not be fast enough, so this option is disabled by default.</li>
15:        <li><em>Optional:</em> On the "<a href="admin.php?page=w3tc_objectcache">Object Cache</a>" tab the recommended settings are preset. If using a shared hosting account use the "disk" method with caution, the response time of the disk may not be fast enough, so this option is disabled by default. Test this option with and without database cache to ensure that it provides a performance increase.</li>
16-        <li><em>Optional:</em> On the "<a href="admin.php?page=w3tc_mobile">User Agent Groups</a>" tab, specify any user agents, like mobile phones if a mobile theme is used.</li>
17-    </ol>
18-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[109]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[106-        	Make sure memcached is starts automatically on server boot:
107-        	<pre class="console"># touch /etc/init.d/memcached
108-# echo '#!/bin/sh -e' &gt;&gt; /etc/init.d/memcached
109:# echo '/usr/local/bin/memcached -d -m 128 -p 11211 -u nobody -l localhost' &gt;&gt; /etc/init.d/memcached
110-# chmod u+x /etc/init.d/memcached
111-# echo '/etc/init.d/memcached' &gt;&gt; /etc/rc.local</pre>
112-		</li>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[138]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[135-        </li>
136-        <li>
137-        	You can also use the memcache.ini file we prepared for you:
138:        	<pre class="console"># cp /var/www/vhosts/domain.com/httpdocs/wp-content/plugins/w3-total-cache/ini/memcache.ini /etc/php.d/</pre>
139-        </li>
140-        <li>
141-        	Finally restart apache:]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[176]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[173-		</li>
174-        <li>
175-        	You can also use the apc.ini file we prepared for you:
176:			<pre class="console"># cp /var/www/vhosts/domain.com/httpdocs/wp-content/plugins/w3-total-cache/ini/apc.ini /etc/php.d/</pre>
177-		</li>
178-		<li>
179-			Restart apache when ready:]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[209]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[206-		</li>
207-        <li>
208-        	You can also use the eaccelerator.ini file we prepared for you:
209:			<pre class="console"># cp /var/www/vhosts/domain.com/httpdocs/wp-content/plugins/w3-total-cache/ini/xcache.ini /etc/php.d/</pre>
210-		</li>
211-		<li>
212-			Restart apache when ready:]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[242]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[239-		</li>
240-        <li>
241-        	You can also use the eaccelerator.ini file we prepared for you:
242:			<pre class="console"># cp /var/www/vhosts/domain.com/httpdocs/wp-content/plugins/w3-total-cache/ini/eaccelerator.ini /etc/php.d/</pre>
243-		</li>
244-		<li>
245-			Restart apache when ready:]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/email_support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[69]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[66-        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
67-    </tr>
68-    <tr>
69:        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>
70:        <td><input id="support_ftp_host" type="text" name="ftp_host" value="<?php echo htmlspecialchars($ftp_host); ?>" size="80" /></td>
71-    </tr>
72-    <tr>
73-        <th><label for="support_ftp_login"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> login:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/linux_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[48]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[45-        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
46-    </tr>
47-    <tr>
48:        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>
49:        <td><input id="support_ftp_host" type="text" name="ftp_host" value="<?php echo htmlspecialchars($ftp_host); ?>" size="80" /></td>
50-    </tr>
51-    <tr>
52-        <th><label for="support_ftp_login"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> login:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/bug_report.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[69]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[66-        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
67-    </tr>
68-    <tr>
69:        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>
70:        <td><input id="support_ftp_host" type="text" name="ftp_host" value="<?php echo htmlspecialchars($ftp_host); ?>" size="80" /></td>
71-    </tr>
72-    <tr>
73-        <th><label for="support_ftp_login"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> login:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/phone_support.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[69]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[66-        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
67-    </tr>
68-    <tr>
69:        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>
70:        <td><input id="support_ftp_host" type="text" name="ftp_host" value="<?php echo htmlspecialchars($ftp_host); ?>" size="80" /></td>
71-    </tr>
72-    <tr>
73-        <th><label for="support_ftp_login"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> login:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/theme_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[56]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[53-        <td><input id="support_wp_password" type="text" name="wp_password" value="<?php echo htmlspecialchars($wp_password); ?>" size="80" /></td>
54-    </tr>
55-    <tr>
56:        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>
57:        <td><input id="support_ftp_host" type="text" name="ftp_host" value="<?php echo htmlspecialchars($ftp_host); ?>" size="80" /></td>
58-    </tr>
59-    <tr>
60-        <th><label for="support_ftp_login"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> login:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/form/plugin_config.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[65]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[62-        <td><input id="support_phone" type="text" name="phone" value="<?php echo htmlspecialchars($phone); ?>" size="80" /></td>
63-    </tr>
64-    <tr>
65:        <th><label for="support_ftp_host"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> host:</label></th>
66:        <td><input id="support_ftp_host" type="text" name="ftp_host" value="<?php echo htmlspecialchars($ftp_host); ?>" size="80" /></td>
67-    </tr>
68-    <tr>
69-        <th><label for="support_ftp_login"><acronym title="Secure Shell">SSH</acronym> / <acronym title="File Transfer Protocol">FTP</acronym> login:</label></th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/support/payment.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[13]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[10-        <p>
11-            <input type="hidden" name="cmd" value="_xclick" />
12-            <input type="hidden" name="business" value="<?php echo W3TC_PAYPAL_BUSINESS; ?>" />
13:            <input type="hidden" name="item_name" value="<?php echo htmlspecialchars(sprintf('%s: %s (#%s)', ucfirst(w3_get_host()), $this->_request_types[$request_type], $request_id)); ?>" />
14-            <input type="hidden" name="amount" value="<?php echo sprintf('%.2f', $this->_request_prices[$request_type]); ?>" />
15-            <input type="hidden" name="currency_code" value="USD" />
16-            <input type="hidden" name="no_shipping" value="1" />]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cotendo.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[32]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[29-	</td>
30-</tr>
31-<tr>
32:    <th>Replace site's hostname with:</th>
33-    <td>
34-		<?php $cnames = $this->_config->get_array('cdn.cotendo.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
35:        <br /><span class="description">Enter the hostname provided by your <acronym>CDN</acronym> provider, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
36-    </td>
37-</tr>
38-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/rscf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[43]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[40-	</td>
41-</tr>
42-<tr>
43:    <th>Replace site's hostname with:</th>
44-    <td>
45-		<?php $cnames = $this->_config->get_array('cdn.rscf.cname'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
46:        <br /><span class="description">Enter the hostname provided by Rackspace Cloud Files, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
47-    </td>
48-</tr>
49-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/netdna.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[26]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[23-	</td>
24-</tr>
25-<tr>
26:    <th>Replace site's hostname with:</th>
27-    <td>
28-		<?php $cnames = $this->_config->get_array('cdn.netdna.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
29:        <br /><span class="description">Enter the hostname provided by your <acronym>CDN</acronym> provider, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
30-    </td>
31-</tr>
32-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/mirror.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[14]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[11-	</td>
12-</tr>
13-<tr>
14:	<th>Replace site's hostname with:</th>
15-	<td>
16-		<?php $cnames = $this->_config->get_array('cdn.mirror.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
17:		<br /><span class="description">Enter the hostname provided by your <acronym>CDN</acronym> provider, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
18-	</td>
19-</tr>
20-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cf2.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[17]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[14-<tr>
15-	<th>Origin:</th>
16-	<td>
17:		<?php echo w3_get_host(); ?>
18-		<input id="cdn_create_container" class="button {type: 'cf2', nonce: '<?php echo wp_create_nonce('w3tc'); ?>'}" type="button" value="Create distribution" />
19-        <span id="cdn_create_container_status" class="w3tc-status w3tc-process"></span>
20-	</td>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cf2.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[34]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[31-	</td>
32-</tr>
33-<tr>
34:	<th><label for="cdn_cf2_id">Replace site's hostname with:</label></th>
35-	<td>
36-		<input id="cdn_cf2_id" type="text" name="cdn.cf2.id" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.cf2.id')); ?>" size="18" style="text-align: right;" />.cloudfront.net or CNAME:
37-		<?php $cnames = $this->_config->get_array('cdn.cf2.cname'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[7-	</th>
8-</tr>
9-<tr>
10:	<th style="width: 300px;"><label for="cdn_ftp_host"><acronym title="File Transfer Protocol">FTP</acronym> hostname:</label></th>
11-	<td>
12:		<input id="cdn_ftp_host" type="text" name="cdn.ftp.host" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.ftp.host')); ?>" size="30" /><br />
13-		<span class="description">Specify the server's address, e.g.: "ftp.domain.com". Try "127.0.0.1" if using a sub-domain on the same server as your site.</span>
14-	</td>
15-</tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/ftp.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[47]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[44-	</td>
45-</tr>
46-<tr>
47:	<th>Replace site's hostname with:</th>
48-	<td>
49-		<?php $cnames = $this->_config->get_array('cdn.ftp.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
50:		<br /><span class="description">Enter the hostname or CNAME(s) of your <acronym title="File Transfer Protocol">FTP</acronym> server configured above, these values will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
51-	</td>
52-</tr>
53-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/edgecast.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[26]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[23-	</td>
24-</tr>
25-<tr>
26:    <th>Replace site's hostname with:</th>
27-    <td>
28-		<?php $cnames = $this->_config->get_array('cdn.edgecast.domain'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>
29:        <br /><span class="description">Enter the hostname provided by your <acronym>CDN</acronym> provider, this value will replace your site's hostname in the <acronym title="Hypertext Markup Language">HTML</acronym>.</span>
30-    </td>
31-</tr>
32-<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/cf.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[33]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[30-	</td>
31-</tr>
32-<tr>
33:	<th><label for="cdn_cf_id">Replace site's hostname with:</label></th>
34-	<td>
35-		<input id="cdn_cf_id" type="text" name="cdn.cf.id" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.cf.id')); ?>" size="18" style="text-align: right;" />.cloudfront.net or CNAME:
36-		<?php $cnames = $this->_config->get_array('cdn.cf.cname'); include W3TC_INC_DIR . '/options/cdn/common/cnames.php'; ?>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/azure.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[34]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[31-	</td>
32-</tr>
33-<tr>
34:	<th>Replace site's hostname with:</th>
35-	<td>
36-		<?php if (($cdn_azure_user = $this->_config->get_string('cdn.azure.user')) != ''): ?>
37-		    <?php echo htmlspecialchars($cdn_azure_user); ?>.blob.core.windows.net]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn/s3.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[33]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[30-	</td>
31-</tr>
32-<tr>
33:	<th>Replace site's hostname with:</th>
34-	<td>
35-		<?php if (($cdn_s3_bucket = $this->_config->get_string('cdn.s3.bucket')) != ''): ?>
36-		    <?php echo htmlspecialchars($cdn_s3_bucket); ?>.s3.amazonaws.com]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/pgcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[60]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[57-            <tr>
58-                <th>
59-                    <input type="hidden" name="pgcache.check.domain" value="0" />
60:                    <label><input type="checkbox" name="pgcache.check.domain" value="1"<?php checked($this->_config->get_boolean('pgcache.check.domain'), true); ?> /> Cache requests only for <?php echo w3_get_home_domain(); ?> hostname</label><br />
61-                    <span class="description">Cache only requests with the same <acronym title="Uniform Resource Indicator">URL</acronym> as the site's <a href="options-general.php">site address</a>.</span>
62-                </th>
63-            </tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/pgcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[83]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[80-        <table class="form-table">
81-        	<?php if ($this->_config->get_string('pgcache.engine') == 'memcached'): ?>
82-        	<tr>
83:        		<th><label for="memcached_servers">Memcached hostname:port / <acronym title="Internet Protocol">IP</acronym>:port:</label></th>
84-        		<td>
85-        			<input id="memcached_servers" type="text" name="pgcache.memcached.servers" value="<?php echo htmlspecialchars(implode(',', $this->_config->get_array('pgcache.memcached.servers'))); ?>" size="100" />
86-        			<input id="memcached_test" class="button {nonce: '<?php echo wp_create_nonce('w3tc'); ?>'}" type="button" value="Test" />]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/mobile.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[63]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[60-                		</th>
61-                		<td>
62-                			<input id="mobile_groups_<?php echo htmlspecialchars($group); ?>_redirect" type="text" name="mobile_groups[<?php echo htmlspecialchars($group); ?>][redirect]" value="<?php echo htmlspecialchars($group_config['redirect']); ?>" size="60" />
63:                			<br /><span class="description">A 302 redirect is used to send this group of users to another hostname (domain); recommended if a 3rd party service provides a mobile version of your site.</span>
64-                		</td>
65-                	</tr>
66-                	<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/referrer.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[63]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[60-                		</th>
61-                		<td>
62-                			<input id="referrer_groups_<?php echo htmlspecialchars($group); ?>_redirect" type="text" name="referrer_groups[<?php echo htmlspecialchars($group); ?>][redirect]" value="<?php echo htmlspecialchars($group_config['redirect']); ?>" size="60" />
63:                			<br /><span class="description">A 302 redirect is used to send this group of referrers to another hostname (domain).</span>
64-                		</td>
65-                	</tr>
66-                	<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[375]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[372-        <table class="form-table">
373-    	<?php if ($this->_config->get_string('minify.engine') == 'memcached'): ?>
374-        	<tr>
375:        		<th><label for="memcached_servers">Memcached hostname:port / <acronym title="Internet Protocol">IP</acronym>:port:</label></th>
376-        		<td>
377-        			<input id="memcached_servers" type="text" name="minify.memcached.servers" value="<?php echo htmlspecialchars(implode(',', $this->_config->get_array('minify.memcached.servers'))); ?>" size="100" />
378-        			<input id="memcached_test" class="button {nonce: '<?php echo wp_create_nonce('w3tc'); ?>'}" type="button" value="Test" />]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[38]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[35-                <th<?php if ($cdn_mirror): ?> colspan="2"<?php else: ?> style="width: 300px;"<?php endif; ?>>
36-                    <input type="hidden" name="cdn.uploads.enable" value="0" />
37-                    <label><input type="checkbox" name="cdn.uploads.enable" value="1"<?php checked($this->_config->get_boolean('cdn.uploads.enable'), true); ?> /> Host attachments</label><br />
38:                    <span class="description">If checked, all attachments will be hosted with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
39-                </th>
40-                <?php if (! $cdn_mirror): ?>
41-                <td>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[50]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[47-        		<th<?php if ($cdn_mirror): ?> colspan="2"<?php endif; ?>>
48-        			<input type="hidden" name="cdn.includes.enable" value="0" />
49-        			<label><input type="checkbox" name="cdn.includes.enable" value="1"<?php checked($this->_config->get_boolean('cdn.includes.enable'), true); ?> /> Host wp-includes/ files</label><br />
50:    				<span class="description">If checked, WordPress static core file types specified in the "wp-includes file types to upload" field below will be hosted with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
51-        		</th>
52-        		<?php if (! $cdn_mirror): ?>
53-        		<td>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[62]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[59-        		<th<?php if ($cdn_mirror): ?> colspan="2"<?php endif; ?>>
60-        			<input type="hidden" name="cdn.theme.enable" value="0" />
61-        			<label><input type="checkbox" name="cdn.theme.enable" value="1"<?php checked($this->_config->get_boolean('cdn.theme.enable'), true); ?> /> Host theme files</label><br />
62:    				<span class="description">If checked, all theme file types specified in the "theme file types to upload" field below will be hosted with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
63-        		</th>
64-        		<?php if (! $cdn_mirror): ?>
65-        		<td>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[74]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[71-        		<th<?php if ($cdn_mirror): ?> colspan="2"<?php endif; ?>>
72-        			<input type="hidden" name="cdn.minify.enable" value="0"<?php if (!$minify_enabled): ?> disabled="disabled"<?php endif; ?> />
73-        			<label><input type="checkbox" name="cdn.minify.enable" value="1"<?php checked($this->_config->get_boolean('cdn.minify.enable'), true); ?><?php if (!$minify_enabled): ?> disabled="disabled"<?php endif; ?> /> Host minified <acronym title="Cascading Style Sheet">CSS</acronym> and <acronym title="JavaScript">JS</acronym> files</label><br />
74:    				<span class="description">If checked, minified <acronym>CSS</acronym> and <acronym>JS</acronym> files will be hosted with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
75-        		</th>
76-        		<?php if (! $cdn_mirror): ?>
77-        		<td>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[86]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[83-        		<th<?php if ($cdn_mirror): ?> colspan="2"<?php endif; ?>>
84-        			<input type="hidden" name="cdn.custom.enable" value="0" />
85-        			<label><input type="checkbox" name="cdn.custom.enable" value="1"<?php checked($this->_config->get_boolean('cdn.custom.enable'), true); ?> /> Host custom files</label><br />
86:    				<span class="description">If checked, any file names or paths specified in the "custom file list" field below will be hosted with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
87-        		</th>
88-        		<?php if (! $cdn_mirror): ?>
89-        		<td>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[107]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[104-        		<th colspan="2">
105-        			<input type="hidden" name="cdn.import.external" value="0" />
106-        			<label><input type="checkbox" name="cdn.import.external" value="1"<?php checked($this->_config->get_boolean('cdn.import.external'), true); ?> /> Import external media library attachments</label><br />
107:        			<span class="description">Download attachments hosted elsewhere into your media library and deliver them via <acronym title="Content Delivery Network">CDN</acronym>.</span>
108-        		</th>
109-        	</tr>
110-        </table>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[183]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[180-        		<th style="width: 300px;"><label for="cdn_includes_files">wp-includes file types to upload:</label></th>
181-        		<td>
182-        			<input id="cdn_includes_files" type="text" name="cdn.includes.files" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.includes.files')); ?>" size="100" /><br />
183:        			<span class="description">Specify the file types within the WordPress core to host with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
184-        		</td>
185-        	</tr>
186-        	<tr>
187-        		<th><label for="cdn_theme_files">Theme file types to upload:</label></th>
188-        		<td>
189-        			<input id="cdn_theme_files" type="text" name="cdn.theme.files" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.theme.files')); ?>" size="100" /><br />
190:        			<span class="description">Specify the file types in the active theme to host with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
191-        		</td>
192-        	</tr>
193-        	<tr>
194-        		<th><label for="cdn_import_files">File types to import:</label></th>
195-        		<td>
196-        			<input id="cdn_import_files" type="text" name="cdn.import.files" value="<?php echo htmlspecialchars($this->_config->get_string('cdn.import.files')); ?>" size="100" /><br />
197:        			<span class="description">Automatically import files hosted with 3rd parties of these types (if used in your posts / pages) to your media library.</span>
198-        		</td>
199-        	</tr>
200-        	<tr>
201-        		<th><label for="cdn_custom_files">Custom file list:</label></th>
202-        		<td>
203-        			<textarea id="cdn_custom_files" name="cdn.custom.files" cols="40" rows="5"><?php echo htmlspecialchars(implode("\r\n", $this->_config->get_array('cdn.custom.files'))); ?></textarea><br />
204:        			<span class="description">Specify any files outside of theme or other common directories to host with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
205-        		</td>
206-        	</tr>
207-        	<tr>
208-        		<th><label for="cdn_reject_ua">Rejected user agents:</label></th>
209-        		<td>
210-        			<textarea id="cdn_reject_ua" name="cdn.reject.ua" cols="40" rows="5"><?php echo htmlspecialchars(implode("\r\n", $this->_config->get_array('cdn.reject.ua'))); ?></textarea><br />
211:        			<span class="description">Specify user agents that should not access files hosted with the <acronym title="Content Delivery Network">CDN</acronym>.</span>
212-        		</td>
213-        	</tr>
214-        	<tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/dbcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[38-        <table class="form-table">
39-        	<?php if ($this->_config->get_string('dbcache.engine') == 'memcached'): ?>
40-        	<tr>
41:        		<th><label for="memcached_servers">Memcached hostname:port / <acronym title="Internet Protocol">IP</acronym>:port:</label></th>
42-        		<td>
43-        			<input id="memcached_servers" type="text" name="dbcache.memcached.servers" value="<?php echo htmlspecialchars(implode(',', $this->_config->get_array('dbcache.memcached.servers'))); ?>" size="100" />
44-        			<input id="memcached_test" class="button {nonce: '<?php echo wp_create_nonce('w3tc'); ?>'}" type="button" value="Test" />]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[302]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[299-                            <option value="s3"<?php selected($this->_config->get_string('cdn.engine'), 's3'); ?><?php if (!W3TC_PHP5 || !$check_curl): ?> disabled="disabled"<?php endif; ?>>Amazon Simple Storage Service (S3)</option>
300-                            <option value="azure"<?php selected($this->_config->get_string('cdn.engine'), 'azure'); ?><?php if (!W3TC_PHP5): ?> disabled="disabled"<?php endif; ?>>Microsoft Azure Storage</option>
301-                            <option value="rscf"<?php selected($this->_config->get_string('cdn.engine'), 'rscf'); ?><?php if (!W3TC_PHP5 || !$check_curl): ?> disabled="disabled"<?php endif; ?>>Rackspace Cloud Files</option>
302:                            <option value="ftp"<?php selected($this->_config->get_string('cdn.engine'), 'ftp'); ?><?php if (!$check_ftp): ?> disabled="disabled"<?php endif; ?>>Self-hosted / File Transfer Protocol Upload</option>
303-                        </optgroup>
304-                    </select><br />
305-                    <span class="description">Select the <acronym title="Content Delivery Network">CDN</acronym> type you wish to use.</span>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[342]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[339-
340-        <?php echo $this->postbox_header('Network Performance &amp; Security powered by CloudFlare'); ?>
341-        <p>
342:            CloudFlare protects and accelerates websites. <a href="https://www.cloudflare.com/sign-up.html?affiliate=w3edge&amp;seed_domain=<?php echo w3_get_host(); ?>&amp;email=<?php echo htmlspecialchars($cloudflare_signup_email); ?>&amp;username=<?php echo htmlspecialchars($cloudflare_signup_user); ?>" target="_blank">Sign up now for free</a> to get started,
343-            or if you have an account simply log in to obtain your <acronym title="Application Programming Interface">API</acronym> key from the <a href="https://www.cloudflare.com/my-account.html">account page</a> to enter it below.
344-            Contact the CloudFlare <a href="http://www.cloudflare.com/help.html" target="_blank">support team</a> with any questions.
345-        </p>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[370]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[367-            <tr>
368-                <th>Domain:</th>
369-                <td>
370:                    <input id="cloudflare_zone" type="text" name="cloudflare.zone" value="<?php echo htmlspecialchars($this->_config->get_string('cloudflare.zone', w3_get_host())); ?>" size="40" />
371-                </td>
372-            </tr>
373-            <tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[460]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[457-                <th colspan="2">
458-                    <input type="hidden" name="file_nfs" value="0"<?php if (! $can_empty_file): ?> disabled="disabled"<?php endif; ?> />
459-                    <label><input type="checkbox" name="file_nfs" value="1"<?php checked($file_nfs, true); ?><?php if (! $can_empty_file): ?> disabled="disabled"<?php endif; ?> /> Optimize disk enhanced page and minify caching for <acronym title="Network File System">NFS</acronym></label>
460:                    <br /><span class="description">Try this option if your hosting environment uses a network based file system for a possible performance improvement.</span>
461-                </th>
462-            </tr>
463-            <tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/mime/all.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[189]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[186-    'gram' => 'application/srgs',
187-    'grv' => 'application/vnd.groove-injector',
188-    'grxml' => 'application/srgs+xml',
189:    'gsf' => 'application/x-font-ghostscript',
190-    'gtar' => 'application/x-gtar',
191-    'gtm' => 'application/vnd.groove-tool-message',
192-    'gtw' => 'model/vnd.gtw',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_import_library.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[7]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[4-<script type="text/javascript">/*<![CDATA[*/
5-jQuery(function() {
6-    W3tc_Popup_Cdn_Import_Library.nonce = '<?php echo wp_create_nonce('w3tc'); ?>';
7:    W3tc_Popup_Cdn_Import_Library.cdn_host = '<?php echo $cdn_host; ?>';
8-	W3tc_Popup_Cdn_Import_Library.init();
9-});
10-/*\]\]>*/</script>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/popup/cdn_import_library.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[41]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[38-	</tr>
39-	<tr>
40-		<td colspan="2">
41:			<label><input id="cdn_import_library_redirect_cdn" type="checkbox" /> Create a list of redirects to <acronym title="Content Delivery Network">CDN</acronym> (hostname specified in hostname field #1.)</label>
42-		</td>
43-	</tr>
44-</table>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/url.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[28]]></line_number>
		<match><![CDATA[host]]></match>
		<name><![CDATA[host]]></name>
		<snippet><![CDATA[25-                }
26-            }
27-
28:            if (!empty($parse_url['host'])) {
29:                $url .= $parse_url['host'];
30-            }
31-
32-            if (!empty($parse_url['port']) && $parse_url['port'] != 80) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./w3-total-cache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[4]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[2-/*
3-Plugin Name: W3 Total Cache
4:Description: The highest rated and most complete WordPress performance plugin. Dramatically improve the speed and user experience of your site. Add browser, page, object and database caching as well as minify and content delivery network (CDN) to WordPress.
5-Version: 0.9.2.5b
6-Plugin URI: http://www.w3-edge.com/wordpress-plugins/w3-total-cache/
7-Author: Frederick Townes]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./wp-content/db.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[32]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[29-            if (file_exists($db_driver_path)) {
30-                require_once $db_driver_path;
31-            } else {
32:                die(sprintf('<strong>W3 Total Cache Error:</strong> database driver doesn\'t exist: %s.', $db_driver_path));
33-            }
34-        }
35-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/PgCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[543]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[540-        }
541-
542-        /**
543:         * Check for database error
544-         */
545:        if (w3_is_database_error($buffer)) {
546-            $this->cache_reject_reason = 'Database error occurred';
547-
548-            return false;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[134]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[131-         * WordPress table prefix
132-         *
133-         * You can set this to have multiple WordPress installations
134:         * in a single database. The second reason is for possible
135-         * security precautions.
136-         *
137-         * @since 0.71]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[144]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[141-        var $prefix = '';
142-
143-        /**
144:         * Whether the database queries are ready to start executing.
145-         *
146-         * @since 2.5.0
147-         * @access private]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[458]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[455-        var $db_type;
456-
457-        /**
458:         * Connects to the database server and selects a database
459-         *
460-         * PHP4 compatibility layer for calling the PHP5 constructor.
461-         *
462-         * @uses wpdb::__construct() Passes parameters and returns result
463-         * @since 0.71
464-         *
465:         * @param string $dbuser MySQL database user
466:         * @param string $dbpassword MySQL database password
467:         * @param string $dbname MySQL database name
468:         * @param string $dbhost MySQL database host
469-         */
470-        function wpdb( $dbuser, $dbpassword, $dbname, $dbhost ) {
471-                if( defined( 'WP_USE_MULTIPLE_DB' ) && WP_USE_MULTIPLE_DB )]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[477]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[474-        }
475-
476-        /**
477:         * Connects to the database server and selects a database
478-         *
479-         * PHP5 style constructor for compatibility with PHP5. Does
480-         * the actual setting up of the class properties and connection
481:         * to the database.
482-         *
483-         * @link http://core.trac.wordpress.org/ticket/3354
484-         * @since 2.0.8
485-         *
486:         * @param string $dbuser MySQL database user
487:         * @param string $dbpassword MySQL database password
488:         * @param string $dbname MySQL database name
489:         * @param string $dbhost MySQL database host
490-         */
491-        function __construct( $dbuser, $dbpassword, $dbname, $dbhost ) {
492-                register_shutdown_function( array( &$this, '__destruct' ) );]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[534]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[531-
532-                if ( !$this->dbh ) {
533-                        $this->bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
534:<h1>Error establishing a database connection</h1>
535:<p>This either means that the username and password information in your <code>wp-config.php</code> file is incorrect or we can't contact the database server at <code>%s</code>. This could mean your host's database server is down.</p>
536-<ul>
537-        <li>Are you sure you have the correct username and password?</li>
538-        <li>Are you sure that you have typed the correct hostname?</li>
539:        <li>Are you sure that the database server is running?</li>
540-</ul>
541-<p>If you're unsure what these terms mean you should probably contact your host. If you still need help you can always visit the <a href='http://wordpress.org/support/'>WordPress Support Forums</a>.</p>
542-"/*/WP_I18N_DB_CONN_ERROR*/, $dbhost ), 'db_connect_fail' );]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[570]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[567-        }
568-
569-        /**
570:         * PHP5 style destructor and will run when database object is destroyed.
571-         *
572-         * @see wpdb::__construct()
573-         * @since 2.0.8]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[591]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[588-        function set_prefix( $prefix, $set_table_names = true ) {
589-
590-                if ( preg_match( '|[^a-z0-9_]|i', $prefix ) )
591:                        return new WP_Error('invalid_db_prefix', /*WP_I18N_DB_BAD_PREFIX*/'Invalid database prefix'/*/WP_I18N_DB_BAD_PREFIX*/);
592-
593-                $old_prefix = is_multisite() ? '' : $prefix;
594-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[745]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[742-        }
743-
744-        /**
745:         * Selects a database using the current database connection.
746-         *
747:         * The database name will be changed based on the current database
748-         * connection. On failure, the execution will bail and display an DB error.
749-         *
750-         * @since 0.71
751-         *
752:         * @param string $db MySQL database name
753-         * @return null Always null.
754-         */
755-        function select( $db, &$dbh ) {
756-                if ( !@mssql_select_db($db, $dbh) ) {
757-                        $this->ready = false;
758-                        $this->bail( sprintf( /*WP_I18N_DB_SELECT_DB*/'
759:<h1>Can&#8217;t select database</h1>
760:<p>We were able to connect to the database server (which means your username and password is okay) but not able to select the <code>%1$s</code> database.</p>
761-<ul>
762-<li>Are you sure it exists?</li>
763:<li>Does the user <code>%2$s</code> have permission to use the <code>%1$s</code> database?</li>
764:<li>On some systems the name of your database is prefixed with your username, so it would be like <code>username_%1$s</code>. Could that be the problem?</li>
765-</ul>
766:<p>If you don\'t know how to set up a database you should <strong>contact your host</strong>. If all else fails you may find help at the <a href="http://wordpress.org/support/">WordPress Support Forums</a>.</p>'/*/WP_I18N_DB_SELECT_DB*/, $db, $this->dbuser ), 'db_select_fail' );
767-                        return;
768-                }
769-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[827]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[824-        }
825-
826-        /**
827:         * Escapes content for insertion into the database using addslashes(), for security.
828-         *
829-         * Works on arrays.
830-         *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[851]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[848-        }
849-
850-        /**
851:         * Escapes content by reference for insertion into the database, for security
852-         *
853-         * @uses wpdb::_real_escape()
854-         * @since 2.3.0]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[941]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[938-                        return false;
939-
940-                if ( $caller = $this->get_caller() )
941:                        $error_str = sprintf( /*WP_I18N_DB_QUERY_ERROR_FULL*/'WordPress database error %1$s for query %2$s made by %3$s'/*/WP_I18N_DB_QUERY_ERROR_FULL*/, $str, $this->last_query, $caller );
942-                else
943:                        $error_str = sprintf( /*WP_I18N_DB_QUERY_ERROR*/'WordPress database error %1$s for query %2$s'/*/WP_I18N_DB_QUERY_ERROR*/, $str, $this->last_query );
944-
945-                if ( function_exists( 'error_log' )
946-                        && ( $log_file = @ini_get( 'error_log' ) )]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[957]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[954-
955-                // If there is an error then take note of it
956-                if ( is_multisite() ) {
957:                        $msg = "WordPress database error: [$str]\n{$this->last_query}\n";
958-                        if ( defined( 'ERRORLOGFILE' ) )
959-                                error_log( $msg, 3, ERRORLOGFILE );
960-                        if ( defined( 'DIEONDBERROR' ) )]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[967]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[964-                        $query = htmlspecialchars( $this->last_query, ENT_QUOTES );
965-
966-                        print "<div id='error'>
967:                        <p class='wpdberror'><strong>WordPress database error:</strong> [$str]<br />
968-                        <code>$query</code></p>
969-                        </div>";
970-                }
971-        }
972-
973-        /**
974:         * Enables showing of database errors.
975-         *
976-         * This function should be used only to enable showing of errors.
977-         * wpdb::hide_errors() should be used instead for hiding of errors. However,
978:         * this function can be used to enable and disable showing of database
979-         * errors.
980-         *
981-         * @since 0.71]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[994]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[991-        }
992-
993-        /**
994:         * Disables showing of database errors.
995-         *
996:         * By default database errors are not shown.
997-         *
998-         * @since 0.71
999-         * @see wpdb::show_errors()]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1010]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1007-        }
1008-
1009-        /**
1010:         * Whether to suppress database errors.
1011-         *
1012:         * By default database errors are suppressed, with a simple
1013-         * call to this function they can be enabled.
1014-         *
1015-         * @since 2.5]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1062]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1059-
1060-                if (!$this->$dbhname ) {
1061-                        $this->bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
1062:<h1>Error establishing a database connection</h1>
1063:<p>This either means that the username and password information in your <code>wp-config.php</code> file is incorrect or we can't contact the database server at <code>%s</code>. This could mean your host's database server is down.</p>
1064-<ul>
1065-        <li>Are you sure you have the correct username and password?</li>
1066-        <li>Are you sure that you have typed the correct hostname?</li>
1067:        <li>Are you sure that the database server is running?</li>
1068-</ul>
1069-<p>If you're unsure what these terms mean you should probably contact your host. If you still need help you can always visit the <a href='http://wordpress.org/support/'>WordPress Support Forums</a>.</p>
1070-"/*/WP_I18N_DB_CONN_ERROR*/, $details['db_host'] ), 'db_connect_fail' );]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1081]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1078-        }
1079-
1080-        /**
1081:         * Perform a MySQL database query, using current database connection.
1082-         *
1083-         * More information can be found on the codex page.
1084-         *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1420]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1417-        }
1418-
1419-        /**
1420:         * Retrieve one variable from the database.
1421-         *
1422-         * Executes a SQL query and returns the value from the SQL result.
1423-         * If the SQL result contains more than one column and/or more than one row, this function returns the value in the column and row specified.]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1448]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1445-        }
1446-
1447-        /**
1448:         * Retrieve one row from the database.
1449-         *
1450-         * Executes a SQL query and returns the row from the SQL result.
1451-         *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1482]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1479-        }
1480-
1481-        /**
1482:         * Retrieve one column from the database.
1483-         *
1484-         * Executes a SQL query and returns the column from the SQL result.
1485-         * If the SQL result contains more than one column, this function returns the column specified.]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1507]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1504-        }
1505-
1506-        /**
1507:         * Retrieve an entire SQL result set from the database (i.e., many rows)
1508-         *
1509-         * Executes a SQL query and returns the entire SQL result.
1510-         *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1633]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1630-        }
1631-
1632-        /**
1633:         * Whether MySQL database is at least the required minimum version.
1634-         *
1635-         * @since 2.5.0
1636-         * @uses $wp_version]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1641]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1638-         *
1639-         * @return WP_Error
1640-         */
1641:        function check_database_version() {
1642-                global $wp_version, $required_mysql_version;
1643-                // Make sure the server has the required MySQL version
1644-                //if ( version_compare($this->db_version(), $required_mysql_version, '<') )
1645:                        //return new WP_Error('database_version', sprintf( __( '<strong>ERROR</strong>: WordPress %1$s requires MySQL %2$s or higher' ), $wp_version, $required_mysql_version ));
1646-        }
1647-
1648-        /**
1649:         * Whether the database supports collation.
1650-         *
1651-         * Called when WordPress is generating the table scheme.
1652-         *]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1662]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1659-        }
1660-
1661-        /**
1662:         * Determine if a database supports a particular feature
1663-         *
1664-         * @since 2.7
1665-         * @see   wpdb::db_version()]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1707]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1704-        }
1705-
1706-        /**
1707:         * The database version number.
1708-         *
1709-         * @return false|string false on failure, version number on success
1710-         */]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Db/mssql.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[2088]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[2085-     * WordPress table prefix
2086-     *
2087-     * You can set this to have multiple WordPress installations
2088:     * in a single database. The second reason is for possible
2089-     * security precautions.
2090-     *
2091-     * @since 0.71]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Minify.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[956]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[953-     */
954-    function can_minify2(&$buffer) {
955-        /**
956:         * Check for database error
957-         */
958:        if (w3_is_database_error($buffer)) {
959-            $this->minify_reject_reason = 'Database Error occurred';
960-
961-            return false;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1085]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1082-        }
1083-
1084-        /**
1085:         * Check for database cache availability
1086-         */
1087-        if ($this->_config->get_boolean('dbcache.enabled')) {
1088-            if (!$this->db_installed()) {]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1222]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1219-                }
1220-
1221-                if (!w3_is_multisite()) {
1222:                    $this->_errors[] = sprintf('The uploads path found in the database (%s) is inconsistent with the actual path. Please manually adjust the upload path either in miscellaneous settings or if not using a custom path %s automatically to resolve the issue.', $upload_path, $this->button_link('update the path', wp_nonce_url(sprintf('admin.php?page=%s&w3tc_update_upload_path', $this->_page), 'w3tc')));
1223-                }
1224-            }
1225-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCacheAdmin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1957]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1954-    }
1955-
1956-    /**
1957:     * Flush database cache action
1958-     *
1959-     * @return void
1960-     */]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[231]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[228-     * @param string $message
229-     */
230-    function update_feedback($message) {
231:        if ($message == __('Upgrading database')) {
232-            $this->_config->set('notes.wp_upgraded', true);
233-            $this->_config->save();
234-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/Cdn.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[698]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[695-     */
696-    function can_cdn2(&$buffer) {
697-        /**
698:         * Check for database error
699-         */
700:        if (w3_is_database_error($buffer)) {
701-            $this->cdn_reject_reason = 'Database Error occurred';
702-
703-            return false;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[385]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[382-     * @param string $message
383-     */
384-    function update_feedback($message) {
385:        if ($message == __('Upgrading database')) {
386-            $this->_config->set('notes.wp_upgraded', true);
387-            $this->_config->save();
388-        }]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/CdnEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1829]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1826-     */
1827-    function can_cdn2(&$buffer) {
1828-        /**
1829:         * Check for database error
1830-         */
1831:        if (w3_is_database_error($buffer)) {
1832-            $this->cdn_reject_reason = 'Database Error occurred';
1833-
1834-            return false;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/TotalCache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[364]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[361-        global $wpdb;
362-
363-        if ($buffer != '' && w3_is_xml($buffer)) {
364:            if (w3_is_database_error($buffer)) {
365-                status_header(503);
366-            } else {
367-                /**]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/W3/Plugin/MinifyEnabled.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[1023]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[1020-     */
1021-    function can_minify2(&$buffer) {
1022-        /**
1023:         * Check for database error
1024-         */
1025:        if (w3_is_database_error($buffer)) {
1026-            $this->minify_reject_reason = 'Database Error occurred';
1027-
1028-            return false;]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/Http/Client.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[229]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[226-    protected $redirectCounter = 0;
227-
228-    /**
229:     * Fileinfo magic database resource
230-     *
231-     * This varaiable is populated the first time _detectFileMimeType is called
232-     * and is then reused on every call to this method]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/define.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[205]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[202-}
203-
204-/**
205: * Check if there was database error
206- *
207- * @param string $content
208- * @return boolean
209- */
210:function w3_is_database_error(&$content) {
211-    return (stristr($content, '<title>Database Error</title>') !== false);
212-}
213-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[10]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[7-        	Set the permissions of wp-content/ back to 755, e.g.:
8-         	<pre class="console"># chmod 755 /var/www/vhosts/domain.com/httpdocs/wp-content/</pre>
9-        </li>
10:        <li>On the "<a href="admin.php?page=w3tc_general">General</a>" tab and select your caching methods for page, database and minify. In most cases, "disk enhanced" mode for page cache, "disk" mode for minify and "disk" mode for database caching are "good" settings.</li>
11-        <li><em>Recommended:</em> On the "<a href="admin.php?page=w3tc_minify">Minify</a>" tab all of the recommended settings are preset. Use the help button to simplify discovery of your <acronym title="Cascading Style Sheet">CSS</acronym> and <acronym title="JavaScript">JS</acronym> files and groups. Pay close attention to the method and location of your <acronym title="JavaScript">JS</acronym> group embeddings. See the plugin's <a href="admin.php?page=w3tc_faq">FAQ</a> for more information on usage.</li>
12-        <li><em>Recommended:</em> On the "<a href="admin.php?page=w3tc_browsercache">Browser Cache</a>" tab, <acronym title="Hypertext Transfer Protocol">HTTP</acronym> compression is enabled by default. Make sure to enable other options to suit your goals.</li>
13-        <li><em>Recommended:</em> If you already have a content delivery network (<acronym title="Content Delivery Network">CDN</acronym>) provider, proceed to the "<a href="admin.php?page=w3tc_cdn">Content Delivery Network</a>" tab and populate the fields and set your preferences. If you do not use the Media Library, you will need to import your images etc into the default locations. Use the Media Library Import Tool on the "Content Delivery Network" tab to perform this task. If you do not have a <acronym title="Content Delivery Network">CDN</acronym> provider, you can still improve your site's performance using the "Self-hosted" method. On your own server, create a subdomain and matching <acronym title="Domain Name System">DNS</acronym> Zone record; e.g. static.domain.com and configure <acronym title="File Transfer Protocol">FTP</acronym> options on the "Content Delivery Network" tab accordingly. Be sure to <acronym title="File Transfer Protocol">FTP</acronym> upload the appropriate files, using the available upload buttons.</li>
14-        <li><em>Optional:</em> On the "<a href="admin.php?page=w3tc_dbcache">Database Cache</a>" tab the recommended settings are preset. If using a shared hosting account use the "disk" method with caution; in either of these cases the response time of the disk may not be fast enough, so this option is disabled by default.</li>
15:        <li><em>Optional:</em> On the "<a href="admin.php?page=w3tc_objectcache">Object Cache</a>" tab the recommended settings are preset. If using a shared hosting account use the "disk" method with caution, the response time of the disk may not be fast enough, so this option is disabled by default. Test this option with and without database cache to ensure that it provides a performance increase.</li>
16-        <li><em>Optional:</em> On the "<a href="admin.php?page=w3tc_mobile">User Agent Groups</a>" tab, specify any user agents, like mobile phones if a mobile theme is used.</li>
17-    </ol>
18-]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/install.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[266]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[263-						<li>Best compatibility with <a href="http://www.iis.net/" target="_blank">IIS</a> is realized via <a href="http://www.microsoft.com/web/webmatrix/" target="_blank">WebMatrix</a>, which also includes the supported <a href="http://www.iis.net/download/wincacheforphp" target="_blank">WinCache</a> opcode cache.</li>
264-                        <li>In the case where Apache is not used, the .htaccess file located in the root directory of the WordPress installation, wp-content/w3tc/pgcache/.htaccess and wp-content/w3tc/min/.htaccess contain directives that must be manually created for your web server software.</li>
265-                        <li>Restarting the web server will empty the opcode cache, which means it will have to be rebuilt over time and your site's performance will suffer during this period. Still, an opcode cache should be installed in any case to maximize WordPress performance.</li>
266:                        <li>Consider using memcached for objects that must persist across web server restarts or that you wish to share amongst your pool of servers (or cluster), e.g.: database objects or page cache.</li>
267-                        <li>Some yum or mirrors may not have the necessary packages, in such cases you may have to do a manual installation.</li>
268-                    </ul>
269-                </th>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/about.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[17]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[14-		<li>Transparent content delivery network (<acronym title="Content Delivery Network">CDN</acronym>) integration with Media Library, theme files and WordPress core</li>
15-		<li>Caching of pages / posts in memory or on disk or on CDN (mirror only)</li>
16-		<li>Caching of (minified) <acronym title="Cascading Style Sheet">CSS</acronym> and JavaScript in memory, on disk or on <acronym title="Content Delivery Network">CDN</acronym></li>
17:		<li>Caching of database objects in memory or on disk</li>
18-		<li>Caching of objects in memory or on disk</li>
19-		<li>Caching of feeds (site, categories, tags, comments, search results) in memory or on disk</li>
20-		<li>Caching of search results pages (i.e. <acronym title="Uniform Resource Identifier">URI</acronym>s with query string variables) in memory or on disk</li>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/dbcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[11]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[8-        is currently <span class="w3tc-<?php if ($dbcache_enabled): ?>enabled">enabled<?php else: ?>disabled">disabled<?php endif; ?></span>.
9-    </p>
10-    <p>
11:		To rebuild the database cache use the
12-        <?php echo $this->nonce_field('w3tc'); ?>
13-        <input type="submit" name="w3tc_flush_dbcache" value="empty cache"<?php if (! $dbcache_enabled): ?> disabled="disabled"<?php endif; ?> class="button" />
14-		operation.]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/dbcache.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[73]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[70-        		<th><label for="dbcache_reject_sql">Ignored query stems:</label></th>
71-        		<td>
72-        			<textarea id="dbcache_reject_sql" name="dbcache.reject.sql" cols="40" rows="5"><?php echo htmlspecialchars(implode("\r\n", $this->_config->get_array('dbcache.reject.sql'))); ?></textarea><br />
73:        			<span class="description">Do not cache queries that contain these terms. Any entered prefix (set in wp-config.php) will be replaced with current database prefix (default: wp_). Query stems can be identified using debug mode.</span>
74-        		</td>
75-        	</tr>
76-        </table>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[175]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[172-        <?php echo $this->postbox_footer(); ?>
173-
174-        <?php echo $this->postbox_header('Database Cache'); ?>
175:        <p>Enable database caching to reduce post, page and feed creation time.</p>
176-
177-         <table class="form-table">
178-            <tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/options/general.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[183]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[180-                <td>
181-                    <input type="hidden" name="dbcache.enabled" value="0" />
182-                    <label><input class="enabled" type="checkbox" name="dbcache.enabled" value="1"<?php checked($dbcache_enabled, true); ?> />&nbsp;<strong>Enable</strong></label>
183:                    <br /><span class="description">Caching database objects decreases the response time of your site. Best used if object caching is not possible.</span>
184-                </td>
185-            </tr>
186-            <tr>]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/mime/all.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[332]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[329-    'oas' => 'application/vnd.fujitsu.oasys',
330-    'obd' => 'application/x-msbinder',
331-    'oda' => 'application/oda',
332:    'odb' => 'application/vnd.oasis.opendocument.database',
333-    'odc' => 'application/vnd.oasis.opendocument.chart',
334-    'odf' => 'application/vnd.oasis.opendocument.formula',
335-    'odft' => 'application/vnd.oasis.opendocument.formula-template',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/mime/other.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[27]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[24-    'mpeg|mpg|mpe' => 'video/mpeg', 
25-    'mpp' => 'application/vnd.ms-project', 
26-    'otf' => 'application/x-font-otf',
27:    'odb' => 'application/vnd.oasis.opendocument.database',
28-    'odc' => 'application/vnd.oasis.opendocument.chart',
29-    'odf' => 'application/vnd.oasis.opendocument.formula',
30-    'odg' => 'application/vnd.oasis.opendocument.graphics',]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./inc/functions/plugin.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[60]]></line_number>
		<match><![CDATA[database]]></match>
		<name><![CDATA[database]]></name>
		<snippet><![CDATA[57-}
58-
59-/**
60: * Shortcut for database cache flush
61- *
62- * @return boolean
63- */]]></snippet>
		<group><![CDATA[custom_strings]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[106]]></line_number>
		<match><![CDATA[214010a2f8931bac9c96dfeb337d56fe]]></match>
		<name><![CDATA[MD5]]></name>
		<snippet><![CDATA[104-		$rawData = null
105-	) {
106:		// http://github.com/sriramk/winazurestorage/blob/214010a2f8931bac9c96dfeb337d56fe084ca63b/winazurestorage.py
107-
108-		// Table storage?
109-		if ($forTableStorage) {]]></snippet>
		<group><![CDATA[hashes]]></group>
	</poi>
	<poi>
		<file><![CDATA[./lib/Microsoft/WindowsAzure/Credentials/SharedKey.php]]></file>
		<file_type><![CDATA[php]]></file_type>
		<line_number><![CDATA[106]]></line_number>
		<match><![CDATA[214010a2f8931bac9c96dfeb337d56fe084ca63b]]></match>
		<name><![CDATA[SHA1]]></name>
		<snippet><![CDATA[104-		$rawData = null
105-	) {
106:		// http://github.com/sriramk/winazurestorage/blob/214010a2f8931bac9c96dfeb337d56fe084ca63b/winazurestorage.py
107-
108-		// Table storage?
109-		if ($forTableStorage) {]]></snippet>
		<group><![CDATA[hashes]]></group>
	</poi>
</points_of_interest>
